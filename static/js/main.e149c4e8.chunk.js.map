{"version":3,"sources":["InternshipListingCard.jsx","InternshipListingCard2.jsx","InternshipFilters.jsx","SearchInternshipFeature.jsx","InternshipListing.jsx","StatisticsRow.jsx","Statistcs.jsx","NavBar.jsx","index.js"],"names":["InternshipListingCard","isRemote","city","Label","circular","style","backgroundColor","color","margin","siteName","url","includes","e","formatDate","stringDate","date","Date","toDateString","changeBackground","currentTarget","cursor","onLeave","InternshipListingCard2","props","Item","onMouseEnter","onMouseLeave","padding","Modal","closeIcon","trigger","Content","Header","href","internship","as","paddingTop","position","Meta","Grid","doubling","Row","columns","Column","floated","paddingBottom","company","Icon","className","location","state","zip","posted","Description","align","Button","size","Extra","skills","map","skill","key","hasSkill","internshipDescription","split","item","console","log","description","Actions","name","Popup","content","mouseLeaveDelay","on","InternshipsFilters","total","data","length","_","concat","zipData","simplyData","cheggData","monsterData","linkedinData","youternData","nsfData","iHire","glassData","indeedData","angelData","companies","categories","flattenDeep","uniq","sort","number","groupBy","info","i","push","text","value","num","unshift","this","mergeData","flattenSkills","uniqueSkills","orderBy","tags","exists","counter","filter","searchQuery","list","toString","toLowerCase","input","SearchInternshipFeature","onChildClick","passedData","locationVal","companyVal","sortVal","skillsVal","internships","locationChange","companyChange","sortChange","searchQueryChange","skillChange","sortBy","dropdownLocation","dropdownCompany","setFilters","searchFiltered","filterBySearch","skillsFiltered","filterBySkills","locationFiltered","filterByLocation","companyFiltered","filterByCompany","sorted","sortedBy","window","scrollTo","top","left","behavior","sticky","Segment","Dropdown","inline","header","options","defaultValue","onChange","event","Form","onSubmit","Input","icon","iconPosition","placeholder","target","fluid","multiple","search","selection","dropdownSkills","InternshipListing","getInternshipData","useState","setData","slice","paginatedData","setPaginatedData","setLocation","setCompany","setSort","setSearch","setSkills","page","setPage","height","setHeight","ref","useRef","useEffect","current","clientHeight","Container","marginLeft","marginRight","textAlign","stackable","width","searchQueryVal","onScroll","onscroll","innerHeight","pageYOffset","Math","ceil","newPage","Group","divided","relaxed","index","StatisticsRow","site","statistics","entries","substring","contact","due","start","end","compensation","qualifications","Table","Cell","React","Component","Statistics","marginBottom","attached","celled","HeaderCell","Body","statisticData","NavBar","Menu","Image","src","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e149c4e8.chunk.js","sourcesContent":["import { Button, Card, Grid, Icon, Label, Modal, Header } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nfunction isRemote(city) {\r\n  if (city === 'Remote') {\r\n    return (\r\n        <Label circular style={{\r\n          backgroundColor: '#263763',\r\n          color: 'white',\r\n          margin: '0.2rem',\r\n        }}>\r\n          Remote\r\n        </Label>\r\n    );\r\n  }\r\n}\r\n\r\nfunction hasSkill(skill) {\r\n  const studentSkills = ['machine learning', 'software engineering'];\r\n\r\n  const has = {\r\n    margin: '0.2rem',\r\n    backgroundColor: '#5680E9',\r\n    color: 'white',\r\n  };\r\n  const notHave = {\r\n    margin: '0.2rem',\r\n    backgroundColor: 'rgb(244, 244, 244)',\r\n    color: '#8f8f8f',\r\n  };\r\n\r\n  if (studentSkills.includes(skill)) {\r\n    return (\r\n        <Label circular key={skill} style={has}>\r\n          {skill}\r\n        </Label>\r\n    );\r\n  }\r\n  return (\r\n      <Label circular key={skill} style={notHave}>\r\n        {skill}\r\n      </Label>\r\n  );\r\n}\r\n\r\nfunction formatDate(stringDate) {\r\n  const date = new Date(stringDate);\r\n  return date.toDateString();\r\n}\r\n\r\nfunction siteName(url) {\r\n  if (url.includes('linkedin')) {\r\n    return 'LinkedIn';\r\n  }\r\n  if (url.includes('ziprecruiter')) {\r\n    return 'ZipRecruiter';\r\n  }\r\n  if (url.includes('monster')) {\r\n    return 'Monster';\r\n  }\r\n  if (url.includes('simplyhired')) {\r\n    return 'SimplyHired';\r\n  }\r\n  if (url.includes('internships')) {\r\n    return 'Chegg';\r\n  }\r\n}\r\n\r\nfunction InternshipListingCard(props) {\r\n\r\n  return (\r\n      <Card>\r\n        <Card.Content>\r\n          <Card.Header textAlign={'center'}>\r\n            <a href={props.internship.url}>\r\n              <p style={{ color: '#263763' }}>\r\n                {props.internship.position}\r\n              </p>\r\n            </a>\r\n          </Card.Header>\r\n          <Card.Meta style={{ paddingTop: '0.6rem' }}>\r\n            <Grid doubling>\r\n              <Grid.Row columns={1}>\r\n                <Grid.Column floated={'left'}>\r\n                  <p style={{ color: '#8860D0' }}>\r\n                    {props.internship.company}\r\n                  </p>\r\n                </Grid.Column>\r\n                <Grid.Column floated={'left'}>\r\n                  <Icon className='map marker alternate'/>\r\n                  <span>{props.internship.location.city}, {props.internship.location.state} {props.internship.location.zip}</span>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n\r\n            </Grid>\r\n          </Card.Meta>\r\n          <Card.Description style={{ paddingTop: '1rem' }}>\r\n            <Modal trigger={\r\n              <div align={'center'}>\r\n                <Button>Description</Button>\r\n              </div>\r\n            }>\r\n              <Modal.Header>Description</Modal.Header>\r\n              <Modal.Content>\r\n                <Modal.Description>\r\n                  {props.internship.description.split('\\n').map((item, key) =>\r\n                      <span key={key}>{item}<br/></span>)}\r\n                </Modal.Description>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                <Button primary>\r\n                  <Icon name='star'/>\r\n                  Add to Favorites\r\n                </Button>\r\n                <Button primary>\r\n                  Go to Listing <Icon name='chevron right'/>\r\n                </Button>\r\n              </Modal.Actions>\r\n            </Modal>\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          {props.internship.skills.map((skill) => (\r\n              hasSkill(skill)\r\n          ))}\r\n          {isRemote(props.internship.location.city)}\r\n        </Card.Content>\r\n        <Card.Content extra textAlign={'center'} style={{ paddingTop: '1rem' }}>\r\n          Posted: {formatDate(props.internship.posted)}\r\n        </Card.Content>\r\n        <Card.Content extra textAlign={'center'}>\r\n          <a href={props.internship.url}>\r\n            <Button color={'teal'} style={{ borderRadius: '10rem' }}>\r\n              Go to Listing: {siteName(props.internship.url)}\r\n            </Button>\r\n          </a>\r\n        </Card.Content>\r\n      </Card>\r\n  );\r\n}\r\n\r\nInternshipListingCard.propTypes = {\r\n  internship: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default InternshipListingCard;\r\n","import { Button, Grid, Icon, Label, Item, Header, Popup, Modal } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nfunction isRemote(city) {\r\n  if (city === 'Remote') {\r\n    return (\r\n        <Label circular style={{\r\n          backgroundColor: '#263763',\r\n          color: 'white',\r\n          margin: '0.2rem',\r\n        }}>\r\n          Remote\r\n        </Label>\r\n    );\r\n  }\r\n}\r\n\r\nfunction siteName(url) {\r\n  try {\r\n    if (url.includes('linkedin')) {\r\n      return 'LinkedIn';\r\n    }\r\n    if (url.includes('ziprecruiter')) {\r\n      return 'ZipRecruiter';\r\n    }\r\n    if (url.includes('monster')) {\r\n      return 'Monster';\r\n    }\r\n    if (url.includes('simplyhired')) {\r\n      return 'SimplyHired';\r\n    }\r\n    if (url.includes('internships')) {\r\n      return 'Chegg';\r\n    }\r\n    if (url.includes('youtern')) {\r\n      return 'Youtern';\r\n    }\r\n    if (url.includes('ihiretechnology')) {\r\n      return 'iHireTechnology';\r\n    }\r\n    if (url.includes('stackoverflow')) {\r\n      return 'iHireTechnology';\r\n    }\r\n    if (url.includes('glassdoor')) {\r\n      return 'Glassdoor';\r\n    }\r\n    if (url.includes('indeed')) {\r\n      return 'Indeed';\r\n    }\r\n    if (url.includes('angel')) {\r\n      return 'AngelList';\r\n    }\r\n    return 'NSF-REU';\r\n  } catch (e) {\r\n    return 'Unknown';\r\n\r\n  }\r\n}\r\n\r\nfunction hasSkill(skill) {\r\n  const studentSkills = ['react', 'software engineering'];\r\n\r\n  const has = {\r\n    margin: '0.2rem',\r\n    backgroundColor: '#5680E9',\r\n    color: 'white',\r\n  };\r\n  const notHave = {\r\n    margin: '0.2rem',\r\n    backgroundColor: 'rgb(244, 244, 244)',\r\n    color: '#8f8f8f',\r\n  };\r\n\r\n  if (studentSkills.includes(skill)) {\r\n    return (\r\n        <Label circular key={skill} style={has}>\r\n          {skill}\r\n        </Label>\r\n    );\r\n  }\r\n  return (\r\n      <Label circular key={skill} style={notHave}>\r\n        {skill}\r\n      </Label>\r\n  );\r\n}\r\n\r\nfunction formatDate(stringDate) {\r\n  const date = new Date(stringDate).toDateString();\r\n  if (date !== 'Invalid Date') {\r\n    return date;\r\n  }\r\n  return 'Unknown';\r\n\r\n}\r\n\r\nfunction changeBackground(e) {\r\n  e.currentTarget.style.backgroundColor = '#fafafa';\r\n  e.currentTarget.style.cursor = 'pointer';\r\n}\r\n\r\nfunction onLeave(e) {\r\n  e.currentTarget.style.backgroundColor = 'transparent';\r\n}\r\n\r\nfunction description(internshipDescription) {\r\n  try {\r\n    return (\r\n        internshipDescription.split('\\n').map((item, key) =>\r\n            <span key={key}>{item}<br/></span>)\r\n    );\r\n  } catch (e) {\r\n    console.log('No description field.');\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction InternshipListingCard2(props) {\r\n\r\n  return (\r\n      <Item onMouseEnter={changeBackground} onMouseLeave={onLeave}\r\n            style={{ padding: '0rem 2rem 0rem 2rem' }}>\r\n        <Modal closeIcon trigger={\r\n          <Item.Content>\r\n            <Item.Header>\r\n              <a href={props.internship.url}>\r\n                <Header as={'h3'} style={{ color: '#263763', paddingTop: '2rem' }}>\r\n                  {props.internship.position}\r\n                </Header>\r\n              </a>\r\n\r\n            </Item.Header>\r\n            <Item.Meta>\r\n              <Item.Meta>\r\n                <Grid doubling>\r\n                  <Grid.Row columns={1} style={{ paddingTop: '0.8rem' }}>\r\n                    <Grid.Column floated={'left'} style={{ paddingBottom: '0.3rem' }}>\r\n                      <p style={{ color: 'rgb(89, 119, 199)' }}>\r\n                        {props.internship.company}\r\n                      </p>\r\n                    </Grid.Column>\r\n                    <Grid.Column floated={'left'}>\r\n                      <Icon className='map marker alternate'/>\r\n                      <span>{props.internship.location.city}, {props.internship.location.state} {props.internship.location.zip} | {formatDate(props.internship.posted)}\r\n</span>\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n\r\n                </Grid>\r\n              </Item.Meta>\r\n            </Item.Meta>\r\n            <Item.Description style={{ paddingTop: '1rem', paddingBottom: '1rem' }}>\r\n              <div align={'left'}>\r\n                <Button size={'tiny'} style={{ backgroundColor: 'transparent', padding: '0rem' }}>\r\n                  From: {siteName(props.internship.url)}\r\n                </Button>\r\n              </div>\r\n\r\n            </Item.Description>\r\n            <Item.Extra>\r\n              {props.internship.skills.map((skill) => (\r\n                  hasSkill(skill)\r\n              ))}\r\n              {isRemote(props.internship.location.city)}\r\n            </Item.Extra>\r\n            <Item.Extra style={{ paddingBottom: '2rem' }}>\r\n            </Item.Extra>\r\n          </Item.Content>\r\n        }>\r\n          <Modal.Header>Description</Modal.Header>\r\n          <Modal.Content>\r\n            <Modal.Description>\r\n              {description(props.internship.description)}\r\n            </Modal.Description>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button style={{ backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n              <Icon name='star'/>\r\n              Add to Favorites\r\n            </Button>\r\n            <a href={props.internship.url}>\r\n              <Button style={{ backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n                Go to Listing: {siteName(props.internship.url)}\r\n                <Icon name='chevron right'/>\r\n              </Button>\r\n            </a>\r\n          </Modal.Actions>\r\n        </Modal>\r\n        <Popup\r\n            content='Added to favorites!'\r\n            mouseLeaveDelay={200}\r\n            on='click'\r\n            trigger={\r\n              <Button style={{ backgroundColor: 'transparent' }}>\r\n                Add to favorites!\r\n              </Button>\r\n            }\r\n        />\r\n      </Item>\r\n  );\r\n}\r\n\r\nInternshipListingCard2.propTypes = {\r\n  internship: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default InternshipListingCard2;\r\n","import _ from 'lodash';\r\nimport linkedinData from './data/linkedin.parsed.data';\r\nimport simplyData from './data/simplyhired.parsed.data';\r\nimport zipData from './data/ziprecruiter.parsed.data';\r\nimport cheggData from './data/internships.parsed.data';\r\nimport monsterData from './data/monster.parsed.data';\r\nimport youternData from './data/youturn.parsed.data';\r\nimport nsfData from './data/nsf-reu.parsed.data';\r\nimport iHire from './data/iHireTech.parsed.data';\r\nimport glassData from './data/glassdoor.parsed.data';\r\nimport indeedData from './data/indeed.parsed.data';\r\nimport angelData from './data/angellist.parsed.data';\r\n\r\nclass InternshipsFilters {\r\n\r\n  /* Returns total number of internship listing */\r\n  total = (data) => data.length;\r\n\r\n  mergeData() {\r\n    let data = [];\r\n    data = _.concat(zipData, simplyData);\r\n    data = _.concat(data, cheggData);\r\n    data = _.concat(data, monsterData);\r\n    data = _.concat(data, linkedinData);\r\n    data = _.concat(data, youternData);\r\n    data = _.concat(data, nsfData);\r\n    data = _.concat(data, iHire);\r\n    data = _.concat(data, glassData);\r\n    data = _.concat(data, indeedData);\r\n    data = _.concat(data, angelData);\r\n\r\n    // console.log('zip:', zipData.length);\r\n    // console.log('simply:', simplyData.length);\r\n    // console.log('chegg:', cheggData.length);\r\n    // console.log('monster:', monsterData.length);\r\n    // console.log('linkedIn:', linkedinData.length);\r\n    // console.log('total:', data.length);\r\n    // let test = _.map(linkedinData, 'company');\r\n    // console.log(test.sort());\r\n    //\r\n    // let test2 = _.map(angelData, 'location.state');\r\n    //console.log(_.groupBy(test2));\r\n    //console.log(_.filter(angelData, ['location.state', '']));\r\n    return data;\r\n  }\r\n\r\n  /* Returns array of companies for us to be able to pass into semantic ui's dropdown. Format:\r\n  * key: unique key of the company\r\n  * text: Text that shows up in dropdown\r\n  * value: value used to search\r\n  * num: the number of internships with said company */\r\n  dropdownCompany(data) {\r\n    let companies = _.map(data, 'company');\r\n    const categories = _.flattenDeep(companies);\r\n    companies = _.uniq(categories).sort();\r\n\r\n    const number = _.groupBy(data, 'company');\r\n    const info = [];\r\n\r\n    for (let i = 0; i < companies.length; i++) {\r\n      info.push({\r\n        key: companies[i],\r\n        text: `${companies[i]} (${number[companies[i]].length})`,\r\n        value: companies[i],\r\n        num: number[companies[i]].length,\r\n      });\r\n    }\r\n\r\n    // Adding any parameter to front of array\r\n    info.unshift({\r\n      key: 'any',\r\n      text: 'Any',\r\n      value: 'any',\r\n    });\r\n\r\n    return info;\r\n  }\r\n\r\n  /* Returns array of companies for us to be able to pass into semantic ui's dropdown. Format:\r\n * key: unique key of the company\r\n * text: Text that shows up in dropdown\r\n * value: value used to search\r\n * num: the number of internships with said company */\r\n  dropdownLocation(data) {\r\n    let location = _.map(data, 'location.state');\r\n    // console.log(location);\r\n    const categories = _.flattenDeep(location);\r\n    location = _.uniq(categories).sort();\r\n    // console.log(location);\r\n\r\n    const number = _.groupBy(data, 'location.state');\r\n    const info = [];\r\n\r\n    for (let i = 0; i < location.length; i++) {\r\n      info.push({\r\n        key: location[i],\r\n        text: `${location[i]} (${number[location[i]].length})`,\r\n        value: location[i],\r\n        num: number[location[i]].length,\r\n      });\r\n    }\r\n\r\n    // Adding any parameter to front of array\r\n    info.unshift({\r\n      key: 'any',\r\n      text: 'Any',\r\n      value: 'any',\r\n    });\r\n\r\n    return info;\r\n  }\r\n\r\n  /* Returns array of skills for us to be able to pass into semantic ui's dropdown. Format:\r\n* key: unique key of the skill\r\n* text: Text that shows up in dropdown\r\n* value: value used to search\r\n* num: the number of internships with the associated skills */\r\n  dropdownSkills() {\r\n    const skills = _.map(this.mergeData(), 'skills');\r\n    // console.log(skills);\r\n    const flattenSkills = _.flattenDeep(skills);\r\n    // console.log(flattenSkills);\r\n    const uniqueSkills = _.uniq(flattenSkills).sort();\r\n    // console.log(uniqueSkills);\r\n\r\n    const number = _.groupBy(flattenSkills);\r\n    // console.log(number);\r\n\r\n    const info = [];\r\n\r\n    for (let i = 0; i < uniqueSkills.length; i++) {\r\n        info.push({\r\n          key: uniqueSkills[i],\r\n          text: `${uniqueSkills[i]} (${number[uniqueSkills[i]].length})`,\r\n          value: uniqueSkills[i],\r\n          num: number[uniqueSkills[i]].length,\r\n        });\r\n      }\r\n    return info;\r\n  }\r\n\r\n  /* Sorts list by given parameters */\r\n  sortedBy(data, value) {\r\n    if (value === 'date') {\r\n      return _.orderBy(data, ['posted'], ['desc']);\r\n    }\r\n    if (value === 'company') {\r\n      return _.orderBy(data, ['company'], ['asc']);\r\n    }\r\n    return _.orderBy(data, ['position'], ['asc']);\r\n  }\r\n\r\n  /* Returns a list based on skill/tags inputs */\r\n  filterBySkills(data, tags) {\r\n    if (tags.length === 0) {\r\n      return data;\r\n    }\r\n\r\n    const skills = [];\r\n    let exists = false;\r\n    let counter = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      // if any of the tags exist in data set, push it to skills and go to next\r\n        while (counter < tags.length && exists === false) {\r\n          if (data[i].skills.includes(tags[counter])) {\r\n            skills.push(data[i]);\r\n            exists = true;\r\n          }\r\n          counter++;\r\n      }\r\n      counter = 0;\r\n      exists = false;\r\n    }\r\n    return skills;\r\n  }\r\n\r\n  /* Returns a sorted list by company name */\r\n  filterByCompany(data, company) {\r\n    if (company === 'any') {\r\n      return data;\r\n    }\r\n    return _.filter(data, ['company', company]);\r\n  }\r\n\r\n  /* Returns a list based on search query */\r\n  filterBySearch(data, searchQuery) {\r\n    // console.log(searchQuery);\r\n    if (searchQuery.length === 0) {\r\n      return data;\r\n    }\r\n    const list = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      const position = data[i].position;\r\n      const lowercase = position.toString().toLowerCase();\r\n      if (lowercase.includes(searchQuery.toString().toLowerCase())) {\r\n        list.push(data[i]);\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n\r\n  /* Returns a sorted list by location */\r\n  filterByLocation(data, input) {\r\n    if (input === 'any') {\r\n      return data;\r\n    }\r\n    return _.filter(data, ['location.state', input]);\r\n  }\r\n}\r\n\r\nexport default InternshipsFilters;\r\n","import React from 'react';\r\nimport { Segment, Header, Dropdown, Label, Input, Form, Grid, Popup } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport InternshipsFilters from './InternshipFilters';\r\n\r\nfunction SearchInternshipFeature({ onChildClick, passedData, locationVal, companyVal, sortVal, searchQuery, skillsVal }) {\r\n\r\n  const internships = new InternshipsFilters();\r\n  const data = internships.mergeData();\r\n\r\n  let locationChange = locationVal;\r\n  let companyChange = companyVal;\r\n  let sortChange = sortVal;\r\n  let searchQueryChange = searchQuery;\r\n  let skillChange = skillsVal;\r\n\r\n  const sortBy = [\r\n    { key: 'date', text: 'date', value: 'date' },\r\n    { key: 'internship', text: 'internship', value: 'internship' },\r\n    { key: 'company', text: 'company', value: 'company' },\r\n  ];\r\n\r\n  const location = internships.dropdownLocation(data);\r\n  const company = internships.dropdownCompany(data);\r\n\r\n  const setFilters = () => {\r\n    const searchFiltered = internships.filterBySearch(data, searchQueryChange);\r\n    const skillsFiltered = internships.filterBySkills(searchFiltered, skillChange);\r\n    const locationFiltered = internships.filterByLocation(skillsFiltered, locationChange);\r\n    const companyFiltered = internships.filterByCompany(locationFiltered, companyChange);\r\n    const sorted = internships.sortedBy(companyFiltered, sortChange);\r\n    onChildClick(sorted, locationChange, companyChange, sortChange, searchQueryChange, skillChange);\r\n    window.scrollTo({\r\n      top: 70,\r\n      left: 100,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    searchQueryChange = event.target.value;\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setFilters();\r\n  };\r\n\r\n  const getLocation = (event, { value }) => {\r\n    locationChange = value;\r\n    setFilters();\r\n  };\r\n\r\n  const getCompany = (event, { value }) => {\r\n    companyChange = value;\r\n    setFilters();\r\n  };\r\n\r\n  const getSort = (event, { value }) => {\r\n    sortChange = value;\r\n    setFilters();\r\n  };\r\n\r\n  const getSkills = (event, { value }) => {\r\n    skillChange = value;\r\n    setFilters();\r\n  };\r\n\r\n  const sticky = {\r\n    position: '-webkit-sticky',\r\n    position: 'sticky',\r\n    top: '6.5rem',\r\n  };\r\n\r\n  const has = {\r\n    margin: '0.2rem',\r\n    backgroundColor: '#5680E9',\r\n    color: 'white',\r\n  };\r\n  const notHave = {\r\n    margin: '0.2rem',\r\n    backgroundColor: 'rgb(244, 244, 244)',\r\n    color: '#8f8f8f',\r\n  };\r\n\r\n  return (\r\n      <Segment style={sticky}>\r\n        <div style={{ paddingTop: '2rem' }}>\r\n          <Header>\r\n            <Header.Content>\r\n              Total results found: {internships.total(passedData)}\r\n            </Header.Content>\r\n          </Header>\r\n        </div>\r\n        <div style={{ paddingTop: '2rem' }}>\r\n          <Header>\r\n            <Header.Content>\r\n              Sort by {' '}\r\n              <Dropdown\r\n                  inline\r\n                  header='Sort by...'\r\n                  options={sortBy}\r\n                  defaultValue={sortBy[0].value}\r\n                  onChange={getSort}\r\n              />\r\n            </Header.Content>\r\n          </Header>\r\n        </div>\r\n        <div style={{ paddingTop: '2rem' }}>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Popup\r\n                trigger={<Input icon='search'\r\n                                iconPosition='left'\r\n                                placeholder='Search ...'\r\n                                onChange={handleSearchChange}\r\n                                fluid\r\n                />}\r\n                content='Press enter to search!'\r\n                on={'focus'}\r\n            />\r\n\r\n          </Form>\r\n          <div style={{ paddingTop: '2rem' }}>\r\n            <Header>Skills</Header>\r\n            <Dropdown\r\n                placeholder='Skills'\r\n                fluid\r\n                multiple\r\n                search\r\n                selection\r\n                options={internships.dropdownSkills()}\r\n                onChange={getSkills}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div style={{ paddingTop: '2rem' }}>\r\n          <Header>Location</Header>\r\n          <Dropdown placeholder='Location'\r\n                    onChange={getLocation}\r\n                    defaultValue={location[0].value}\r\n                    fluid selection options={internships.dropdownLocation(passedData)}\r\n                    search\r\n          />\r\n        </div>\r\n\r\n        <div style={{ paddingTop: '2rem' }}>\r\n          <Header>Company</Header>\r\n          <Dropdown\r\n              placeholder='Select a company'\r\n              fluid selection options={internships.dropdownCompany(passedData)}\r\n              defaultValue={company[0].value}\r\n              onChange={getCompany}\r\n              search\r\n          />\r\n        </div>\r\n        <div style={{ paddingTop: '2rem', paddingBottom: '2rem' }} align={'center'}>\r\n          <Header>Key</Header>\r\n          <Label circular style={has}>\r\n            Have skill\r\n          </Label>\r\n          <Label circular style={notHave}>\r\n            Missing skill\r\n          </Label>\r\n        </div>\r\n      </Segment>\r\n  );\r\n}\r\n\r\nSearchInternshipFeature.propTypes = {\r\n  onChildClick: PropTypes.func.isRequired,\r\n  passedData: PropTypes.array.isRequired,\r\n  locationVal: PropTypes.string.isRequired,\r\n  companyVal: PropTypes.string.isRequired,\r\n  sortVal: PropTypes.string.isRequired,\r\n  searchQuery: PropTypes.string.isRequired,\r\n  skillsVal: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default SearchInternshipFeature;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport _ from 'lodash';\r\nimport { Card, Container, Header, Icon, Grid, Pagination, Item } from 'semantic-ui-react';\r\nimport InternshipListingCard from './InternshipListingCard';\r\nimport InternshipListingCard2 from './InternshipListingCard2';\r\nimport SearchInternshipFeature from './SearchInternshipFeature';\r\nimport InternshipsFilters from './InternshipFilters';\r\n\r\nfunction InternshipListing() {\r\n\r\n  const internships = new InternshipsFilters();\r\n  const getInternshipData = internships.mergeData();\r\n\r\n  const [data, setData] = useState(getInternshipData);\r\n  const [paginatedData, setPaginatedData] = useState(getInternshipData.slice(0, 40));\r\n  const [location, setLocation] = useState('any');\r\n  const [company, setCompany] = useState('any');\r\n  const [sort, setSort] = useState('date');\r\n  const [search, setSearch] = useState('');\r\n  const [skills, setSkills] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [height, setHeight] = useState(0);\r\n  const ref = useRef(null);\r\n\r\n  /* Passes data up from SearchInternshipFeature. SetPaginatedData allows data to be rendered\r\n  * for infinite scroll. */\r\n  function handleChildClick(passedData, locationVal, companyVal, sortVal, searchQueryVal, skillsVal) {\r\n    setData(passedData);\r\n    setLocation(locationVal);\r\n    setCompany(companyVal);\r\n    setSort(sortVal);\r\n    setSearch(searchQueryVal);\r\n    setSkills(skillsVal);\r\n    setPage(1);\r\n    setPaginatedData(passedData.slice(0, 40));\r\n  }\r\n\r\n  /* Grabs the height */\r\n  useEffect(() => {\r\n    setHeight(ref.current.clientHeight);\r\n  });\r\n\r\n  /* Infinite scrolling */\r\n  function handleScroll() {\r\n    window.onscroll = function () {\r\n      const scroll = window.innerHeight + window.pageYOffset;\r\n      // if we hit the bottom\r\n      if (scroll >= height - 500) {\r\n        // if there are still more items to be loaded\r\n        if (page <= Math.ceil(data.length / 40)) {\r\n          const newPage = page + 1;\r\n          setPage(newPage);\r\n          setPaginatedData(data.slice(0, newPage * 40));\r\n          // console.log('Current Page:', page);\r\n          // console.log('Total Pages:', Math.ceil(data.length / 40));\r\n          // console.log(paginatedData);\r\n          // console.log(\"you're at the bottom of the page\");\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /* Every single time we click a new page, it renders the new data set */\r\n  // const onChange = (e, pageInfo) => {\r\n  //   const page = pageInfo.activePage * 40;\r\n  //   setPaginatedData(data.slice(page - 40, page));\r\n  //   window.scrollTo({\r\n  //     top: 80,\r\n  //     left: 100,\r\n  //     behavior: 'smooth',\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n      <Container style={{ paddingTop: '5rem', marginLeft: '0.5rem', marginRight: '0.5rem' }}>\r\n        <Header as='h2' textAlign={'center'}\r\n                style={{ paddingBottom: '1rem', paddingTop: '3rem' }}>\r\n          <Header.Content>\r\n            <Icon name='graduation cap'/>\r\n            All Internships\r\n          </Header.Content>\r\n        </Header>\r\n        <Grid columns={'equal'} doubling stackable>\r\n          <Grid.Column width={4}>\r\n            <SearchInternshipFeature onChildClick={handleChildClick} passedData={data}\r\n                                     companyVal={company} locationVal={location} sortVal={sort}\r\n                                     searchQuery={search} skillsVal={skills}/>\r\n          </Grid.Column>\r\n\r\n          <Grid.Column>\r\n            {/*<Card.Group itemsPerRow={3} doubling stackable>*/}\r\n            {/*  {_.map(paginatedData, (internship, index) => <InternshipListingCard*/}\r\n            {/*      internship={internship} key={index}/>)}*/}\r\n            {/*</Card.Group>*/}\r\n\r\n            <div onScroll={handleScroll()} ref={ref}>\r\n              <Item.Group divided relaxed style={{ backgroundColor: 'white' }}>\r\n                {_.map(paginatedData, (internship, index) => <InternshipListingCard2\r\n                    internship={internship} key={index}/>)}\r\n              </Item.Group>\r\n            </div>\r\n\r\n          </Grid.Column>\r\n        </Grid>\r\n        <div align={'center'} style={{ paddingTop: '5rem', paddingBottom: '5rem' }}>\r\n          {/*<Pagination*/}\r\n          {/*    defaultActivePage={1}*/}\r\n          {/*    onPageChange={onChange}*/}\r\n          {/*    totalPages={Math.ceil(data.length / 40)}*/}\r\n          {/*/>*/}\r\n        </div>\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default InternshipListing;\r\n","import React from 'react';\r\nimport { Container, Table, Header } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass StatisticsRow extends React.Component {\r\n  render() {\r\n    const total = this.props.statistics.entries;\r\n    const position = ((this.props.statistics.position / total) * 100).toString().substring(0, 5);\r\n    const company = ((this.props.statistics.company / total) * 100).toString().substring(0, 5);\r\n    const contact = ((this.props.statistics.contact / total) * 100).toString().substring(0, 5);\r\n    const location = ((this.props.statistics.location / total) * 100).toString().substring(0, 5);\r\n    const posted = ((this.props.statistics.posted / total) * 100).toString().substring(0, 5);\r\n    const due = ((this.props.statistics.due / total) * 100).toString().substring(0, 5);\r\n    const start = ((this.props.statistics.start / total) * 100).toString().substring(0, 5);\r\n    const end = ((this.props.statistics.end / total) * 100).toString().substring(0, 5);\r\n    const compensation = ((this.props.statistics.compensation / total) * 100).toString().substring(0, 5);\r\n    const qualifications = ((this.props.statistics.qualifications / total) * 100).toString().substring(0, 5);\r\n    const skills = ((this.props.statistics.skills / total) * 100).toString().substring(0, 5);\r\n    const description = ((this.props.statistics.description / total) * 100).toString().substring(0, 5);\r\n\r\n    function lastRow(site) {\r\n      if (site === 'Total') {\r\n        return (\r\n            <Table.Row>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {site}\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {total}\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {position}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {company}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {contact}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {location}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {posted}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {due}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {start}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {end}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {compensation}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {qualifications}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {skills}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {description}%\r\n                </Header>\r\n              </Table.Cell>\r\n            </Table.Row>\r\n\r\n        );\r\n      } else {\r\n        return (\r\n            <Table.Row>\r\n              <Table.Cell>{site}</Table.Cell>\r\n              <Table.Cell>{total}</Table.Cell>\r\n              <Table.Cell>{position}%</Table.Cell>\r\n              <Table.Cell>{company}%</Table.Cell>\r\n              <Table.Cell>{contact}%</Table.Cell>\r\n              <Table.Cell>{location}%</Table.Cell>\r\n              <Table.Cell>{posted}%</Table.Cell>\r\n              <Table.Cell>{due}%</Table.Cell>\r\n              <Table.Cell>{start}%</Table.Cell>\r\n              <Table.Cell>{end}%</Table.Cell>\r\n              <Table.Cell>{compensation}%</Table.Cell>\r\n              <Table.Cell>{qualifications}%</Table.Cell>\r\n              <Table.Cell>{skills}%</Table.Cell>\r\n              <Table.Cell>{description}%</Table.Cell>\r\n            </Table.Row>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n        <>\r\n          {lastRow(this.props.statistics.site)}\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nStatisticsRow.propTypes = {\r\n  statistics: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default StatisticsRow;\r\n","import React from 'react';\r\nimport { Container, Table, Header } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport statisticData from './data/statistics.data';\r\nimport StatisticsRow from './StatisticsRow';\r\n\r\n/** A simple static component to render some text for the Statistics page. */\r\nclass Statistics extends React.Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <Container>\r\n            <Header textAlign={'center'}\r\n                    as={'h4'}\r\n                    style={{ marginBottom: '2rem' }}>\r\n              Statistics\r\n            </Header>\r\n            <Table attached='top' celled>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Site</Table.HeaderCell>\r\n                  <Table.HeaderCell>Total</Table.HeaderCell>\r\n                  <Table.HeaderCell>Position</Table.HeaderCell>\r\n                  <Table.HeaderCell>Company</Table.HeaderCell>\r\n                  <Table.HeaderCell>Contact</Table.HeaderCell>\r\n                  <Table.HeaderCell>Location</Table.HeaderCell>\r\n                  <Table.HeaderCell>Posted</Table.HeaderCell>\r\n                  <Table.HeaderCell>Due</Table.HeaderCell>\r\n                  <Table.HeaderCell>Start</Table.HeaderCell>\r\n                  <Table.HeaderCell>End</Table.HeaderCell>\r\n                  <Table.HeaderCell>Compensation</Table.HeaderCell>\r\n                  <Table.HeaderCell>Qualifications</Table.HeaderCell>\r\n                  <Table.HeaderCell>Skills</Table.HeaderCell>\r\n                  <Table.HeaderCell>Description</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                {_.map((statisticData), (statistics, index) => <StatisticsRow\r\n                    statistics={statistics} key={index}/>)}\r\n              </Table.Body>\r\n            </Table>\r\n          </Container>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport { Container, Menu, Image, Icon } from 'semantic-ui-react';\r\nimport { Link } from '@reach/router';\r\n\r\n/** A simple static component to render some text for the NavBar page. */\r\nclass NavBar extends React.Component {\r\n  render() {\r\n    const linkStyle = {\r\n      color: '#263763',\r\n    };\r\n    return (\r\n        <Container>\r\n          <Menu className={'top meni fixed borderless'} style={{ backgroundColor: '#C1C8E4' }}>\r\n            <Menu.Item>\r\n              <a href={'/'}>\r\n                <Image src={'images/logo.png'} size={'small'}/>\r\n              </a>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              All Internships\r\n            </Menu.Item>\r\n            <Menu.Item>Recommended Internships</Menu.Item>\r\n            <Menu.Item position='right'><Icon className='user circle'/>Profile</Menu.Item>\r\n          </Menu>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.css';\r\nimport './index.css';\r\nimport InternshipListing from './InternshipListing';\r\nimport Statistics from './Statistcs';\r\nimport NavBar from './NavBar';\r\n\r\n/**\r\n * The top level layout for the site.\r\n */\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <NavBar/>\r\n      <InternshipListing/>\r\n      <Statistics/>\r\n    </React.StrictMode>,\r\n  // eslint-disable-next-line no-undef\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}