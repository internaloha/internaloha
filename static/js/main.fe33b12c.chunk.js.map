{"version":3,"sources":["InternshipFilters.jsx","Landing.jsx","InternshipListingCard.jsx","InternshipListingCard2.jsx","SearchInternshipFeature.jsx","InternshipListing.jsx","StatisticsRow.jsx","Statistcs.jsx","NavBar.jsx","Profile.jsx","JobCart.jsx","EditProfile.jsx","RecommendationScript.js","MockProfile.jsx","RecommendedInternships.jsx","index.js"],"names":["InternshipsFilters","total","data","length","_","concat","iHire","zipData","simplyData","monsterData","linkedinData","youternData","glassData","indeedData","angelData","idealist","ACM","coolworks","aexpress","apple","companies","map","categories","flattenDeep","uniq","sort","number","groupBy","info","i","push","key","text","value","num","unshift","location","locationAmount","skills","flattenSkills","uniqueSkills","orderBy","tags","exists","counter","includes","company","list","toString","toLowerCase","searchQuery","position","input","arrLocations","filter","Landing","internships","mergeData","dropdownCompany","height","Math","max","document","documentElement","clientHeight","window","innerHeight","width","clientWidth","innerWidth","style","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","Container","textAlign","Image","src","size","centered","paddingTop","Statistic","Group","inverted","marginLeft","marginRight","Value","Label","Button","as","NavLink","to","marginTop","backgroundColor","color","React","Component","withRouter","InternshipListingCard","props","Card","className","Content","Header","href","internship","url","target","rel","Meta","Grid","doubling","Row","columns","Column","floated","Icon","city","state","zip","stringDate","date","Date","toDateString","formatDate","posted","Description","overflow","maxHeight","internshipDescription","noScriptDescript","replace","dangerouslySetInnerHTML","__html","e","console","log","description","extra","skill","circular","margin","hasSkill","remote","isRemote","borderRadius","siteName","index","Popup","content","mouseLeaveDelay","on","trigger","fontSize","Modal","closeIcon","Form","Field","Radio","label","name","checked","TextArea","placeholder","Actions","InternshipListingCard2","SearchInternshipFeature","onChildClick","passedData","locationVal","companyVal","sortVal","skillsVal","locationChange","companyChange","sortChange","searchQueryChange","skillChange","remoteCheck","sortBy","setFilters","dropdownLocation","remoteFilter","searchFiltered","filterBySearch","skillsFiltered","filterBySkills","locationFiltered","filterByLocation","companyFiltered","filterByCompany","sorted","sortedBy","scrollTo","top","left","behavior","handleSubmit","Segment","Dropdown","inline","header","options","defaultValue","onChange","event","onSubmit","icon","iconPosition","fluid","control","Input","children","search","multiple","selection","clearable","dropdownSkills","flexGrow","Checkbox","onClick","paddingBottom","paddingRight","lineHeight","display","InternshipListing","getInternshipData","useState","setData","slice","paginatedData","setPaginatedData","setLocation","setCompany","setSort","setSearch","setSkills","setRemote","page","setPage","setHeight","ref","useRef","useEffect","current","stackable","maxWidth","searchQueryVal","onScroll","onscroll","pageYOffset","ceil","newPage","StatisticsRow","site","this","statistics","entries","substring","contact","due","start","end","compensation","qualifications","lastScraped","Table","Cell","Statistics","lowercaseFirstLetter","textContent","setState","statisticData","string","charAt","marginBottom","attached","celled","sortable","HeaderCell","Body","NavBar","linkStyle","Menu","border","boxShadow","Item","Profile","title","headerStyle","changeBackground","currentTarget","cursor","onLeave","renderLabels","padding","renderTab","careerPath","exact","interest","career","stretched","Progress","progress","onMouseEnter","onMouseLeave","dividing","course","opportunity","JobCart","status","align","Extra","swal","buttons","dangerMode","then","willDelete","EditProfile","notifications","widths","id","Select","toggle","dropdownCareerInterest","career_interest_to_skill","recommendation","careers","newState","careerSkills","k","j","totalSkills","foundTag","MockProfile","careerVal","careerChange","recommendedData","newData","isRemoteFunc","required","RecommendedInternships","setCareer","remoteVal","hasSkills","App","path","component","render","getElementById"],"mappings":"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","file":"static/js/main.fe33b12c.chunk.js","sourcesContent":["import _ from 'lodash';\r\nimport linkedinData from './data/linkedin.parsed.data';\r\nimport simplyData from './data/simplyHired.parsed.data';\r\nimport zipData from './data/ziprecruiter.parsed.data';\r\nimport cheggData from './data/internships.parsed.data';\r\nimport monsterData from './data/monster.parsed.data';\r\nimport youternData from './data/youtern.parsed.data';\r\nimport iHire from './data/iHireTech.parsed.data';\r\nimport glassData from './data/glassdoor.parsed.data';\r\nimport indeedData from './data/indeed.parsed.data';\r\nimport angelData from './data/angellist.parsed.data';\r\n// import manualData from './data/manualInput.parsed.data';\r\nimport apple from './data/apple.parsed.data';\r\nimport aexpress from './data/aexpress.parsed.data';\r\nimport ACM from './data/acm.parsed.data';\r\nimport stackoverflow from './data/stackoverflow.parsed.data';\r\nimport idealist from './data/idealist.parsed.data';\r\nimport coolworks from './data/coolworks.parsed.data';\r\n\r\nclass InternshipsFilters {\r\n\r\n  /* Returns total number of internship listing */\r\n  total = (data) => data.length;\r\n\r\n  mergeData() {\r\n    let data = [];\r\n    // data = _.concat(data, cheggData);\r\n    // data = _.concat(data, nsfData);\r\n    // data = _.concat(data, manualData);\r\n    // data = _.concat(data, stackoverflow);\r\n    data = _.concat(data, iHire);\r\n    data = _.concat(zipData, simplyData);\r\n    data = _.concat(data, monsterData);\r\n    data = _.concat(data, linkedinData);\r\n    data = _.concat(data, youternData);\r\n    data = _.concat(data, glassData);\r\n    data = _.concat(data, indeedData);\r\n    data = _.concat(data, angelData);\r\n    data = _.concat(data, idealist);\r\n    data = _.concat(data, ACM);\r\n    data = _.concat(data, coolworks);\r\n    data = _.concat(data, aexpress);\r\n    data = _.concat(data, apple);\r\n\r\n    // console.log('zip:', zipData.length);\r\n    // console.log('simply:', simplyData.length);\r\n    // console.log('chegg:', cheggData.length);\r\n    // console.log('monster:', monsterData.length);\r\n    // console.log('linkedIn:', linkedinData.length);\r\n    // console.log('total:', data.length);\r\n    // let test = _.map(linkedinData, 'company');\r\n    // console.log(test.sort());\r\n    //\r\n    // let test2 = _.map(angelData, 'location.state');\r\n    //console.log(_.groupBy(test2));\r\n    //console.log(_.filter(angelData, ['location.state', '']));\r\n    return data;\r\n  }\r\n\r\n  /* Returns array of companies for us to be able to pass into semantic ui's dropdown. Format:\r\n  * key: unique key of the company\r\n  * text: Text that shows up in dropdown\r\n  * value: value used to search\r\n  * num: the number of internships with said company */\r\n  dropdownCompany(data) {\r\n    let companies = _.map(data, 'company');\r\n    const categories = _.flattenDeep(companies);\r\n    companies = _.uniq(categories).sort();\r\n\r\n    const number = _.groupBy(data, 'company');\r\n    const info = [];\r\n\r\n    for (let i = 0; i < companies.length; i++) {\r\n\r\n      info.push({\r\n        key: companies[i],\r\n        text: `${companies[i]} (${number[companies[i]].length})`,\r\n        value: companies[i],\r\n        num: number[companies[i]].length,\r\n      });\r\n    }\r\n\r\n    // Adding any parameter to front of array\r\n    info.unshift({\r\n      key: 'any',\r\n      text: 'Any',\r\n      value: 'any',\r\n    });\r\n\r\n    return info;\r\n  }\r\n\r\n  /* Returns array of companies for us to be able to pass into semantic ui's dropdown. Format:\r\n * key: unique key of the company\r\n * text: Text that shows up in dropdown\r\n * value: value used to search\r\n * num: the number of internships with said company */\r\n  dropdownLocation(data) {\r\n    let location = _.map(data, 'location.state');\r\n    // console.log(location);\r\n    const categories = _.flattenDeep(location);\r\n    location = _.uniq(categories).sort();\r\n    // console.log(location);\r\n\r\n    const number = _.groupBy(data, 'location.state');\r\n    const info = [];\r\n\r\n    for (let i = 0; i < location.length; i++) {\r\n\r\n      const locationAmount = number[location[i]].length;\r\n      // if (location[i] === 'Remote') {\r\n      //   locationAmount = _.filter(data, ['remote', true]).length\r\n      //       + number[location[i]].length;\r\n      //\r\n      // } else {\r\n      //   locationAmount = number[location[i]].length;\r\n      // }\r\n\r\n      info.push({\r\n        key: location[i],\r\n        text: `${location[i]} (${locationAmount})`,\r\n        value: location[i],\r\n        num: number[location[i]].length,\r\n      });\r\n    }\r\n\r\n    return info;\r\n  }\r\n\r\n  /* Returns array of skills for us to be able to pass into semantic ui's dropdown. Format:\r\n* key: unique key of the skill\r\n* text: Text that shows up in dropdown\r\n* value: value used to search\r\n* num: the number of internships with the associated skills */\r\n  dropdownSkills(data) {\r\n    const skills = _.map(data, 'skills');\r\n    // console.log(skills);\r\n    const flattenSkills = _.flattenDeep(skills);\r\n    // console.log(flattenSkills);\r\n    const uniqueSkills = _.uniq(flattenSkills).sort();\r\n    // console.log(uniqueSkills);\r\n\r\n    const number = _.groupBy(flattenSkills);\r\n    // console.log(number);\r\n\r\n    const info = [];\r\n\r\n    for (let i = 0; i < uniqueSkills.length; i++) {\r\n      info.push({\r\n        key: uniqueSkills[i],\r\n        text: `${uniqueSkills[i]} (${number[uniqueSkills[i]].length})`,\r\n        value: uniqueSkills[i],\r\n        num: number[uniqueSkills[i]].length,\r\n      });\r\n    }\r\n    return info;\r\n  }\r\n\r\n  /* Sorts list by given parameters */\r\n  sortedBy(data, value) {\r\n    if (value === 'date') {\r\n      return _.orderBy(data, ['posted'], ['desc']);\r\n    }\r\n    if (value === 'company') {\r\n      return _.orderBy(data, ['company'], ['asc']);\r\n    }\r\n    return _.orderBy(data, ['position'], ['asc']);\r\n  }\r\n\r\n  /* Returns a list based on skill/tags inputs */\r\n  filterBySkills(data, tags) {\r\n    if (tags.length === 0) {\r\n      return data;\r\n    }\r\n\r\n    const skills = [];\r\n    let exists = false;\r\n    let counter = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      // if any of the tags exist in data set, push it to skills and go to next\r\n      while (counter < tags.length && exists === false) {\r\n        if (data[i].skills.includes(tags[counter])) {\r\n          skills.push(data[i]);\r\n          exists = true;\r\n        }\r\n        counter++;\r\n      }\r\n      counter = 0;\r\n      exists = false;\r\n    }\r\n    return skills;\r\n  }\r\n\r\n  /* Returns a sorted list by company name */\r\n  filterByCompany(data, company) {\r\n    if (company === 'any' || company.length === 0) {\r\n      return data;\r\n    }\r\n    const list = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      const companies = data[i].company;\r\n      const lowercase = companies.toString().toLowerCase();\r\n      if (lowercase.includes(company.toString().toLowerCase())) {\r\n        list.push(data[i]);\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n\r\n  /* Returns a list based on search query */\r\n  filterBySearch(data, searchQuery) {\r\n    // console.log(searchQuery);\r\n    if (searchQuery.length === 0) {\r\n      return data;\r\n    }\r\n    const list = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      const position = data[i].position;\r\n      const lowercase = position.toString().toLowerCase();\r\n      if (lowercase.includes(searchQuery.toString().toLowerCase())) {\r\n        list.push(data[i]);\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n\r\n  /* Returns a sorted list by location */\r\n  filterByLocation(data, input) {\r\n    if (input.length === 0) {\r\n      return data;\r\n    }\r\n\r\n    let arrLocations = [];\r\n    for (let i = 0; i < input.length; i++) {\r\n      arrLocations = arrLocations.concat(_.filter(data, ['location.state', input[i]]));\r\n    }\r\n    return arrLocations;\r\n\r\n    // // Add all the internships where remote == true and those who have remote in state\r\n    // if (input === 'Remote') {\r\n    //   const byState = _.filter(data, ['location.state', input]);\r\n    //   const remote = _.filter(data, ['remote', true]);\r\n    //   return _.concat(byState, remote);\r\n    // }\r\n  }\r\n\r\n  isRemote(data, value) {\r\n    if (value === false) {\r\n      return data;\r\n    }\r\n     return _.filter(data, ['remote', true]);\r\n  }\r\n}\r\n\r\nexport default InternshipsFilters;\r\n","import React from 'react';\r\nimport { Container, Statistic, Image, Button } from 'semantic-ui-react';\r\nimport InternshipsFilters from './InternshipFilters';\r\nimport { Link, withRouter, NavLink } from 'react-router-dom';\r\n\r\n\r\n/** A simple static component to render some text for the landing page. */\r\nclass Landing extends React.Component {\r\n  render() {\r\n\r\n    const internships = new InternshipsFilters();\r\n    const data = internships.mergeData();\r\n    const companies = internships.dropdownCompany(data).length;\r\n\r\n    const background = {\r\n      backgroundImage: 'url(\"images/landingBG.png\")',\r\n      height: '100%',\r\n      backgroundPosition: 'center',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundSize: 'cover',\r\n    };\r\n\r\n    const height = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n    const width = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\n\r\n    return (\r\n        <div style={background}>\r\n          <div style={{ height: `${height}px` }}>\r\n            <Container textAlign={'center'}>\r\n              <Image src={'images/logo.png'} size={'medium'} centered style={{ paddingTop: '10rem' }}/>\r\n              <Statistic.Group inverted\r\n                               style={{ marginLeft: 'auto',\r\n                marginRight: 'auto' }}>\r\n                <Statistic size='huge'\r\n                           style={{ marginLeft: `${width / 4.3}px` }}>\r\n                  <Statistic.Value>{data.length}</Statistic.Value>\r\n                  <Statistic.Label>Internships</Statistic.Label>\r\n                </Statistic>\r\n                <Statistic size='huge'>\r\n                  <Statistic.Value>{companies}</Statistic.Value>\r\n                  <Statistic.Label>Companies</Statistic.Label>\r\n                </Statistic>\r\n              </Statistic.Group>\r\n                <Button\r\n                    as={NavLink}\r\n                    to={'/internbit/all-internships'}\r\n                    style={{ marginTop: '3rem', backgroundColor: '#8860D0', color: 'white' }}>\r\n                  Get connected today!\r\n                </Button>\r\n            </Container>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Landing);\r\n","import {\r\n  Button,\r\n  Card,\r\n  Grid,\r\n  Icon,\r\n  Label,\r\n  Modal,\r\n  Header,\r\n  Popup,\r\n  Form,\r\n  Radio, Item\r\n} from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nfunction isRemote(remote) {\r\n  if (remote) {\r\n    return (\r\n        <Label circular style={{\r\n          backgroundColor: '#263763',\r\n          color: 'white',\r\n          margin: '0.2rem',\r\n        }}>\r\n          Remote\r\n        </Label>\r\n    );\r\n  }\r\n}\r\n\r\nfunction hasSkill(skill) {\r\n  const studentSkills = ['machine learning', 'software engineering'];\r\n\r\n  const has = {\r\n    margin: '0.2rem',\r\n    backgroundColor: '#5680E9',\r\n    color: 'white',\r\n  };\r\n  const notHave = {\r\n    margin: '0.2rem',\r\n    backgroundColor: 'rgb(244, 244, 244)',\r\n    color: '#8f8f8f',\r\n  };\r\n\r\n  if (studentSkills.includes(skill)) {\r\n    return (\r\n        <Label circular key={skill} style={has}>\r\n          {skill}\r\n        </Label>\r\n    );\r\n  }\r\n  return (\r\n      <Label circular key={skill} style={notHave}>\r\n        {skill}\r\n      </Label>\r\n  );\r\n}\r\n\r\nfunction formatDate(stringDate) {\r\n  const date = new Date(stringDate).toDateString();\r\n  if (date !== 'Invalid Date') {\r\n    return date;\r\n  }\r\n  return 'Unknown';\r\n}\r\n\r\nfunction description(internshipDescription) {\r\n  try {\r\n    const noScriptDescript = internshipDescription.replace(/<script>(.*?)<\\/script>/gi, '');\r\n    return (\r\n        <span dangerouslySetInnerHTML={{ __html: noScriptDescript }}/>\r\n        // internshipDescription.split('\\n').map((item, key) => <span key={key}>{item}<br/></span>)\r\n    );\r\n  } catch (e) {\r\n    console.log('No description field.');\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction siteName(url) {\r\n  try {\r\n    if (url.includes('linkedin')) {\r\n      return 'LinkedIn';\r\n    }\r\n    if (url.includes('ziprecruiter')) {\r\n      return 'ZipRecruiter';\r\n    }\r\n    if (url.includes('monster')) {\r\n      return 'Monster';\r\n    }\r\n    if (url.includes('simplyhired')) {\r\n      return 'SimplyHired';\r\n    }\r\n    if (url.includes('internships')) {\r\n      return 'Chegg';\r\n    }\r\n    if (url.includes('youtern')) {\r\n      return 'Youtern';\r\n    }\r\n    if (url.includes('ihiretechnology')) {\r\n      return 'iHireTechnology';\r\n    }\r\n    if (url.includes('stackoverflow')) {\r\n      return 'iHireTechnology';\r\n    }\r\n    if (url.includes('glassdoor')) {\r\n      return 'Glassdoor';\r\n    }\r\n    if (url.includes('indeed')) {\r\n      return 'Indeed';\r\n    }\r\n    if (url.includes('angel')) {\r\n      return 'AngelList';\r\n    }\r\n    if (url.includes('acm')) {\r\n      return 'ACM';\r\n    }\r\n    if (url.includes('apple')) {\r\n      return 'Apple';\r\n    }\r\n    if (url.includes('americanexpress')) {\r\n      return 'American Express';\r\n    }\r\n    if (url.includes('coolworks')) {\r\n      return 'Coolworks';\r\n    }\r\n    return 'NSF-REU';\r\n  } catch (e) {\r\n    return 'Unknown';\r\n\r\n  }\r\n}\r\n\r\nfunction InternshipListingCard(props) {\r\n\r\n  return (\r\n      <Card className={'listings'}>\r\n        <Card.Content>\r\n          <Card.Header textAlign={'center'}>\r\n            <a href={props.internship.url} target='_blank' rel=\"noopener noreferrer\">\r\n              <p style={{ color: '#263763' }}>\r\n                {props.internship.position}\r\n              </p>\r\n            </a>\r\n          </Card.Header>\r\n          <Card.Meta style={{ paddingTop: '0.6rem' }}>\r\n            <Grid doubling>\r\n              <Grid.Row columns={1}>\r\n                <Grid.Column floated={'left'}>\r\n                  <p>\r\n                    <Icon className='building'/>\r\n                    <span>{props.internship.company} </span>\r\n                  </p>\r\n                </Grid.Column>\r\n                <Grid.Column floated={'left'}>\r\n                  <Icon className='map marker alternate'/>\r\n                  <span>Internship Location: {props.internship.location.city}, {props.internship.location.state} {props.internship.location.zip}</span>\r\n                </Grid.Column>\r\n                <Grid.Column floated={'left'}>\r\n                  <Icon className='calendar alternate'/>\r\n                  <span>Date Posted: {formatDate(props.internship.posted)}</span>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n\r\n            </Grid>\r\n          </Card.Meta>\r\n          <Card.Description style={{ paddingTop: '1rem' }}>\r\n            <div style={{ overflow: 'auto', maxHeight: '250px' }}>\r\n              {description(props.internship.description)}\r\n            </div>\r\n\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          {props.internship.skills.map((skill) => (\r\n              hasSkill(skill)\r\n          ))}\r\n          {isRemote(props.internship.remote)}\r\n        </Card.Content>\r\n        <Card.Content extra textAlign={'center'}>\r\n          <a target='_blank' rel=\"noopener noreferrer\" href={props.internship.url}>\r\n            <Button style={{ borderRadius: '10rem' }}>\r\n              From: {siteName(props.internship.url)} Listing #{props.internship.index}\r\n            </Button>\r\n          </a>\r\n          <Popup\r\n              content='Added to favorites!'\r\n              mouseLeaveDelay={200}\r\n              on='click'\r\n              trigger={\r\n                <button className=\"ui icon button\" style={{ marginTop: '1em', size: '100%', maxHeight: '50px', backgroundColor: 'transparent' }}>\r\n                  <i className=\"heart icon\" style={{ fontSize: '100%' }}/>\r\n                </button>\r\n              }\r\n          />\r\n          <Modal closeIcon trigger={\r\n            <button className=\"ui icon button\" style={{ marginTop: '1em', size: '100%', maxHeight: '50px', backgroundColor: 'transparent' }}>\r\n              <i className=\"exclamation triangle icon\" style={{ fontSize: '100%' }}/>\r\n            </button>\r\n          }>\r\n            <Modal.Header>Report a Problem</Modal.Header>\r\n            <Modal.Content>\r\n              <Modal.Description>\r\n                <Form>\r\n                  <Form.Field>\r\n                    <Radio\r\n                        label='Broken Link'\r\n                        name='radioGroup'\r\n                        value='this'\r\n                        checked={'this'}\r\n                        // onChange={}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <Radio\r\n                        label='Missing Data Fields'\r\n                        name='radioGroup'\r\n                        value='that'\r\n                        checked={'that'}\r\n                        // onChange={}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.TextArea label='Other' placeholder='Explain the error here. Feel free to provide screenshots or links.' />\r\n                </Form>\r\n              </Modal.Description>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button style={{ backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n                Report\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n        </Card.Content>\r\n      </Card>\r\n  );\r\n}\r\n\r\nInternshipListingCard.propTypes = {\r\n  internship: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default InternshipListingCard;\r\n","import { Button, Grid, Icon, Label, Item, Header, Popup, Modal, Form, Radio } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport swal from 'sweetalert';\r\n\r\nfunction isRemote(remote) {\r\n  if (remote) {\r\n    return (\r\n        <Label circular style={{\r\n          backgroundColor: '#263763',\r\n          color: 'white',\r\n          margin: '0.2rem',\r\n        }}>\r\n          Remote\r\n        </Label>\r\n    );\r\n  }\r\n}\r\n\r\nfunction siteName(url) {\r\n  try {\r\n    if (url.includes('linkedin')) {\r\n      return 'LinkedIn';\r\n    }\r\n    if (url.includes('ziprecruiter')) {\r\n      return 'ZipRecruiter';\r\n    }\r\n    if (url.includes('monster')) {\r\n      return 'Monster';\r\n    }\r\n    if (url.includes('simplyhired')) {\r\n      return 'SimplyHired';\r\n    }\r\n    if (url.includes('internships')) {\r\n      return 'Chegg';\r\n    }\r\n    if (url.includes('youtern')) {\r\n      return 'Youtern';\r\n    }\r\n    if (url.includes('ihiretechnology')) {\r\n      return 'iHireTechnology';\r\n    }\r\n    if (url.includes('stackoverflow')) {\r\n      return 'iHireTechnology';\r\n    }\r\n    if (url.includes('glassdoor')) {\r\n      return 'Glassdoor';\r\n    }\r\n    if (url.includes('indeed')) {\r\n      return 'Indeed';\r\n    }\r\n    if (url.includes('angel')) {\r\n      return 'AngelList';\r\n    }\r\n    if (url.includes('acm')) {\r\n      return 'ACM';\r\n    }\r\n    if (url.includes('apple')) {\r\n      return 'Apple';\r\n    }\r\n    if (url.includes('americanexpress')) {\r\n      return 'American Express';\r\n    }\r\n    if (url.includes('coolworks')) {\r\n      return 'Coolworks';\r\n    }\r\n    return 'NSF-REU';\r\n  } catch (e) {\r\n    return 'Unknown';\r\n\r\n  }\r\n}\r\n\r\nfunction hasSkill(skill, hasSkills) {\r\n\r\n  if (typeof (hasSkills) === 'undefined') {\r\n    hasSkills = ['react', 'software engineering'];\r\n  }\r\n  const studentSkills = ['react', 'software engineering'];\r\n\r\n  const has = {\r\n    margin: '0.2rem',\r\n    backgroundColor: '#5680E9',\r\n    color: 'white',\r\n  };\r\n  const notHave = {\r\n    margin: '0.2rem',\r\n    backgroundColor: 'rgb(244, 244, 244)',\r\n    color: '#8f8f8f',\r\n  };\r\n\r\n  if (hasSkills.includes(skill)) {\r\n    return (\r\n        <Label circular key={skill} style={has}>\r\n          {skill}\r\n        </Label>\r\n    );\r\n  }\r\n  return (\r\n      <Label circular key={skill} style={notHave}>\r\n        {skill}\r\n      </Label>\r\n  );\r\n}\r\n\r\nfunction formatDate(stringDate) {\r\n  const date = new Date(stringDate).toDateString();\r\n  if (date !== 'Invalid Date') {\r\n    return date;\r\n  }\r\n  return 'Unknown';\r\n}\r\n\r\nfunction changeBackground(e) {\r\n  e.currentTarget.style.backgroundColor = '#fafafa';\r\n  e.currentTarget.style.cursor = 'pointer';\r\n}\r\n\r\nfunction onLeave(e) {\r\n  e.currentTarget.style.backgroundColor = 'transparent';\r\n}\r\n\r\nfunction description(internshipDescription) {\r\n  try {\r\n    const noScriptDescript = internshipDescription.replace(/<script>(.*?)<\\/script>/gi, '');\r\n    return (\r\n        <span dangerouslySetInnerHTML={{ __html: noScriptDescript }}/>\r\n        // internshipDescription.split('\\n').map((item, key) => <span key={key}>{item}<br/></span>)\r\n    );\r\n  } catch (e) {\r\n    console.log('No description field.');\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction InternshipListingCard2(props) {\r\n\r\n  return (\r\n      <Item onMouseEnter={changeBackground} onMouseLeave={onLeave}\r\n            style={{ padding: '0rem 2rem 0rem 2rem' }}>\r\n        <Modal closeIcon trigger={\r\n          <Item.Content>\r\n            <Item.Header>\r\n              <a href={props.internship.url} target=\"_blank\" rel='noopener noreferrer'>\r\n                <Header as={'h2'} style={{ color: 'rgb(0, 102, 204)', paddingTop: '2rem' }}>\r\n                  {props.internship.position}\r\n                </Header>\r\n              </a>\r\n            </Item.Header>\r\n            <Item.Meta>\r\n              <Item.Meta>\r\n                <Grid doubling>\r\n                  <Grid.Row columns={1} style={{ fontSize: '110%', paddingTop: '0.8rem' }}>\r\n                    <Grid.Column floated={'left'} style={{ paddingBottom: '0.3rem' }}>\r\n                      <p>\r\n                        <Icon className='building'/>\r\n                        <span>{props.internship.company} </span>\r\n                      </p>\r\n                    </Grid.Column>\r\n                    <Grid.Column floated={'left'}>\r\n                      <Icon className='map marker alternate'/>\r\n                      <span>Internship Location: {props.internship.location.city}, {props.internship.location.state} {props.internship.location.zip}</span>\r\n                    </Grid.Column>\r\n                    <Grid.Column style={{ paddingTop: '0.5rem' }}>\r\n                      <Icon className='calendar alternate'/>\r\n                      <span>Date Posted: {formatDate(props.internship.posted)}</span>\r\n                    </Grid.Column>\r\n                    <Grid.Column style={{ paddingTop: '0.4rem' }}>\r\n                      <Icon className='address book'/>\r\n                      <span>From: {siteName(props.internship.url)} Listing #{props.internship.index} </span>\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </Item.Meta>\r\n            </Item.Meta>\r\n            <Item.Description style={{ paddingBottom: '1rem' }}>\r\n              <div align={'left'}>\r\n                <div style={{ fontSize: '125%', height: '214px', width: '600px', overflow: 'hidden' }}>\r\n                {description(props.internship.description)}\r\n              </div>\r\n              </div>\r\n              <Item.Extra style={{ paddingTop: '1rem' }} >\r\n              </Item.Extra>\r\n              <div>\r\n                {props.internship.skills.map((skill) => (\r\n                    hasSkill(skill, props.hasSkills)\r\n                ))}\r\n                {isRemote(props.internship.remote)}\r\n              </div>\r\n              <Item.Extra style={{ paddingBottom: '1rem' }} >\r\n              </Item.Extra>\r\n            </Item.Description>\r\n          </Item.Content>\r\n        }>\r\n          <Modal.Header>Description</Modal.Header>\r\n          <Modal.Content>\r\n            <Modal.Description>\r\n              {description(props.internship.description)}\r\n            </Modal.Description>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button style={{ fontSize: '110%', backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n              <Icon name='star'/>\r\n              Add to Favorites\r\n            </Button>\r\n            <a href={props.internship.url} target=\"_blank\" rel='noopener noreferrer'>\r\n              <Button style={{ fontSize: '110%', backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n                Go to Listing: {siteName(props.internship.url)}\r\n                <Icon name='chevron right'/>\r\n              </Button>\r\n            </a>\r\n          </Modal.Actions>\r\n        </Modal>\r\n         <Popup\r\n            content='Added to favorites!'\r\n            mouseLeaveDelay={200}\r\n            on='click'\r\n            trigger={\r\n              <button className=\"ui icon button\" style={{ marginTop: '1em', size: '500%', maxHeight: '50px', backgroundColor: 'transparent' }}>\r\n                <i className=\"heart icon\" style={{ fontSize: '175%' }}/>\r\n              </button>\r\n            }\r\n        />\r\n        <Modal closeIcon trigger={\r\n          <button className=\"ui icon button\" style={{ marginTop: '1em', size: '500%', maxHeight: '50px', backgroundColor: 'transparent' }}>\r\n            <i className=\"exclamation triangle icon\" style={{ fontSize: '175%' }}/>\r\n          </button>\r\n        }>\r\n          <Modal.Header>Report a Problem</Modal.Header>\r\n          <Modal.Content>\r\n            <Modal.Description>\r\n              <Form>\r\n                <Form.Field>\r\n                  <Radio\r\n                      label='Broken Link'\r\n                      name='radioGroup'\r\n                      value='this'\r\n                      checked={'this'}\r\n                      // onChange={}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <Radio\r\n                      label='Missing Data Fields'\r\n                      name='radioGroup'\r\n                      value='that'\r\n                      checked={'that'}\r\n                      // onChange={}\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Modal.Description>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button style={{ backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n              Report\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Item>\r\n  );\r\n}\r\n\r\nInternshipListingCard2.propTypes = {\r\n  internship: PropTypes.object.isRequired,\r\n  hasSkills: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default InternshipListingCard2;\r\n","import React from 'react';\r\nimport {\r\n  Segment,\r\n  Header,\r\n  Dropdown,\r\n  Label,\r\n  Input,\r\n  Form,\r\n  Checkbox,\r\n  Popup,\r\n  Search,\r\n  Menu,\r\n  Image, Container, Grid,\r\n} from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport InternshipsFilters from './InternshipFilters';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SearchInternshipFeature({ onChildClick, passedData, locationVal, companyVal, sortVal, searchQuery, skillsVal, isRemote }) {\r\n\r\n  const internships = new InternshipsFilters();\r\n  const data = internships.mergeData();\r\n\r\n  let locationChange = locationVal;\r\n  let companyChange = companyVal;\r\n  let sortChange = sortVal;\r\n  let searchQueryChange = searchQuery;\r\n  let skillChange = skillsVal;\r\n  let remoteCheck = isRemote;\r\n\r\n  const sortBy = [\r\n    { key: 'date', text: 'date', value: 'date' },\r\n    { key: 'internship', text: 'internship', value: 'internship' },\r\n    { key: 'company', text: 'company', value: 'company' },\r\n  ];\r\n\r\n  const location = internships.dropdownLocation(data);\r\n  const company = internships.dropdownCompany(data);\r\n\r\n  const setFilters = () => {\r\n    const remoteFilter = internships.isRemote(data, remoteCheck);\r\n    const searchFiltered = internships.filterBySearch(remoteFilter, searchQueryChange);\r\n    const skillsFiltered = internships.filterBySkills(searchFiltered, skillChange);\r\n    const locationFiltered = internships.filterByLocation(skillsFiltered, locationChange);\r\n    const companyFiltered = internships.filterByCompany(locationFiltered, companyChange);\r\n    const sorted = internships.sortedBy(companyFiltered, sortChange);\r\n    onChildClick(sorted, locationChange, companyChange, sortChange, searchQueryChange, skillChange, remoteCheck);\r\n    window.scrollTo({\r\n      top: 30,\r\n      left: 100,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    searchQueryChange = event.target.value;\r\n  };\r\n\r\n  const handleCompanyChange = (event) => {\r\n    companyChange = event.target.value;\r\n  };\r\n\r\n  const getRemote = () => {\r\n    if (remoteCheck) {\r\n      remoteCheck = false;\r\n    } else {\r\n      remoteCheck = true;\r\n    }\r\n    setFilters();\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setFilters();\r\n  };\r\n\r\n  const getLocation = (event, { value }) => {\r\n    locationChange = value;\r\n    setFilters();\r\n  };\r\n\r\n  const getCompany = (event, { value }) => {\r\n    companyChange = value;\r\n    setFilters();\r\n  };\r\n\r\n  const getSort = (event, { value }) => {\r\n    sortChange = value;\r\n    setFilters();\r\n  };\r\n\r\n  const getSkills = (event, { value }) => {\r\n    skillChange = value;\r\n    setFilters();\r\n  };\r\n\r\n  const sticky = {\r\n    position: '-webkit-sticky',\r\n    position: 'sticky',\r\n    top: '6.5rem',\r\n  };\r\n\r\n  const has = {\r\n    margin: '0.2rem',\r\n    backgroundColor: '#5680E9',\r\n    color: 'white',\r\n  };\r\n  const notHave = {\r\n    margin: '0.2rem',\r\n    backgroundColor: 'rgb(244, 244, 244)',\r\n    color: '#8f8f8f',\r\n  };\r\n\r\n  return (\r\n      <Segment style={{ width: '100%', borderRadius: '10px', marginTop: '3rem' }}>\r\n        <Grid columns={'equal'}>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <p>\r\n                <p>\r\n                  Sort by {' '}\r\n                  <Dropdown\r\n                      inline\r\n                      header='Sort by...'\r\n                      options={sortBy}\r\n                      defaultValue={sortBy[0].value}\r\n                      onChange={getSort}\r\n                  />\r\n                </p>\r\n              </p>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Form onSubmit={handleSubmit}>\r\n                <Popup\r\n                    trigger={\r\n                      <Form>\r\n                        <Form.Field icon='search'\r\n                                    iconPosition='left'\r\n                                    placeholder='Search ...'\r\n                                    onChange={handleSearchChange}\r\n                                    fluid\r\n                                    control={Input}\r\n                                    label={{ children: 'Search' }}\r\n                        />\r\n                      </Form>\r\n                    }\r\n                    content='Press enter to search by internship titles!'\r\n                    on={'focus'}\r\n                />\r\n\r\n              </Form>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Form>\r\n                <Form.Field\r\n                    label={{ children: 'Skills' }}\r\n                    placeholder='Skills'\r\n                    search\r\n                    fluid multiple selection clearable\r\n                    control={Dropdown}\r\n                    options={internships.dropdownSkills(data)}\r\n                    onChange={getSkills}\r\n                    style={{ flexGrow: 0 }}\r\n\r\n                />\r\n              </Form>\r\n\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Form>\r\n                <Form.Field placeholder='Location'\r\n                            label={{ children: 'Location' }}\r\n                            onChange={getLocation}\r\n                            fluid multiple selection clearable\r\n                            options={internships.dropdownLocation(data)}\r\n                            control={Dropdown}\r\n                            style={{ flexGrow: 0 }}\r\n                />\r\n              </Form>\r\n              <Checkbox style={{ paddingTop: '1rem' }} label='Remote'\r\n                        onClick={getRemote}/>\r\n            </Grid.Column>\r\n\r\n            {/*<div style={{ paddingTop: '2rem' }}>*/}\r\n            {/*  <Header>Company</Header>*/}\r\n            {/*  <Dropdown*/}\r\n            {/*      placeholder='Select a company'*/}\r\n            {/*      fluid selection options={internships.dropdownCompany(passedData)}*/}\r\n            {/*      defaultValue={company[0].value}*/}\r\n            {/*      onChange={getCompany}*/}\r\n            {/*      search*/}\r\n            {/*  />*/}\r\n            {/*</div>*/}\r\n            <Grid.Column>\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Field icon='home'\r\n                            label={{ children: 'Company' }}\r\n                            control={Input}\r\n                            iconPosition='left'\r\n                            placeholder='Company'\r\n                            onChange={handleCompanyChange}\r\n                            fluid\r\n                />\r\n              </Form>\r\n            </Grid.Column>\r\n            {/*<Grid.Row>*/}\r\n            {/*  <div style={{ paddingBottom: '2rem', paddingRight: '0.5rem' }} align={'center'}>*/}\r\n            {/*    <Header as={'h4'}>Key</Header>*/}\r\n            {/*    <Label circular style={has}>*/}\r\n            {/*      Has skill*/}\r\n            {/*    </Label>*/}\r\n            {/*    <Label circular style={notHave}>*/}\r\n            {/*      Missing skill*/}\r\n            {/*    </Label>*/}\r\n            {/*  </div>*/}\r\n            {/*</Grid.Row>*/}\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Header style={{ paddingBottom: '0', marginTop: '0rem' }}>\r\n                Total results found: {internships.total(passedData)}\r\n              </Header>\r\n            </Grid.Column>\r\n            <Grid.Column textAlign={'right'}>\r\n              <Grid.Row>\r\n                <div style={{ paddingBottom: '0', paddingRight: '0.5rem' }}>\r\n                  <Header style={{\r\n                    paddingBottom: '0', margin: '0 0 0 0', paddingRight: '0.5rem',\r\n                    paddingTop: '0.3rem', lineHeight: '10px',\r\n                    display: 'inline-block'\r\n                  }} as={'h4'}>\r\n                    Key:\r\n                  </Header>\r\n                  <Label circular style={has}>\r\n                    Has skill\r\n                  </Label>\r\n                  <Label circular style={notHave}>\r\n                    Missing skill\r\n                  </Label>\r\n                </div>\r\n              </Grid.Row>\r\n\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n\r\n        </Grid>\r\n\r\n      </Segment>\r\n\r\n      // <Segment style={sticky}>\r\n      //   <div style={{ paddingTop: '2rem' }}>\r\n      //     <Header>\r\n      //       <Header.Content>\r\n      //         Total results found: {internships.total(passedData)}\r\n      //       </Header.Content>\r\n      //     </Header>\r\n      //   </div>\r\n      //   <div style={{ paddingTop: '2rem' }}>\r\n      //     <Header>\r\n      //       <Header.Content>\r\n      //         Sort by {' '}\r\n      //         <Dropdown\r\n      //             inline\r\n      //             header='Sort by...'\r\n      //             options={sortBy}\r\n      //             defaultValue={sortBy[0].value}\r\n      //             onChange={getSort}\r\n      //         />\r\n      //       </Header.Content>\r\n      //     </Header>\r\n      //   </div>\r\n      //   <div style={{ paddingTop: '2rem' }}>\r\n      //     <Form onSubmit={handleSubmit}>\r\n      //       <Popup\r\n      //           trigger={<Input icon='search'\r\n      //                           iconPosition='left'\r\n      //                           placeholder='Search ...'\r\n      //                           onChange={handleSearchChange}\r\n      //                           fluid\r\n      //           />}\r\n      //           content='Press enter to search!'\r\n      //           on={'focus'}\r\n      //       />\r\n      //\r\n      //     </Form>\r\n      //     <div style={{ paddingTop: '2rem' }}>\r\n      //       <Header>Skills</Header>\r\n      //       <Dropdown\r\n      //           placeholder='Skills'\r\n      //           fluid\r\n      //           multiple\r\n      //           search\r\n      //           selection\r\n      //           options={internships.dropdownSkills()}\r\n      //           onChange={getSkills}\r\n      //       />\r\n      //     </div>\r\n      //   </div>\r\n      //   <div style={{ paddingTop: '2rem' }}>\r\n      //     <Header>Location</Header>\r\n      //     <Dropdown placeholder='Location'\r\n      //               onChange={getLocation}\r\n      //               defaultValue={location[0].value}\r\n      //               fluid selection options={internships.dropdownLocation(passedData)}\r\n      //               search\r\n      //     />\r\n      //     <Checkbox style={{ paddingTop: '1rem' }} label='Remote'\r\n      //               onClick={getRemote}/>\r\n      //   </div>\r\n      //\r\n      //   {/*<div style={{ paddingTop: '2rem' }}>*/}\r\n      //   {/*  <Header>Company</Header>*/}\r\n      //   {/*  <Dropdown*/}\r\n      //   {/*      placeholder='Select a company'*/}\r\n      //   {/*      fluid selection options={internships.dropdownCompany(passedData)}*/}\r\n      //   {/*      defaultValue={company[0].value}*/}\r\n      //   {/*      onChange={getCompany}*/}\r\n      //   {/*      search*/}\r\n      //   {/*  />*/}\r\n      //   {/*</div>*/}\r\n      //   <div style={{ paddingTop: '2rem' }}>\r\n      //     <Header>Company</Header>\r\n      //\r\n      //     <Form onSubmit={handleSubmit}>\r\n      //       <Input icon='home'\r\n      //              iconPosition='left'\r\n      //              placeholder='Enter a company'\r\n      //              onChange={handleCompanyChange}\r\n      //              fluid\r\n      //       />\r\n      //     </Form>\r\n      //   </div>\r\n      //   <div style={{ paddingTop: '2rem', paddingBottom: '2rem' }} align={'center'}>\r\n      //     <Header>Key</Header>\r\n      //     <Label circular style={has}>\r\n      //       Have skill\r\n      //     </Label>\r\n      //     <Label circular style={notHave}>\r\n      //       Missing skill\r\n      //     </Label>\r\n      //   </div>\r\n      // </Segment>\r\n  );\r\n}\r\n\r\nSearchInternshipFeature.propTypes = {\r\n  onChildClick: PropTypes.func.isRequired,\r\n  passedData: PropTypes.array.isRequired,\r\n  locationVal: PropTypes.string.isRequired,\r\n  companyVal: PropTypes.string.isRequired,\r\n  sortVal: PropTypes.string.isRequired,\r\n  searchQuery: PropTypes.string.isRequired,\r\n  skillsVal: PropTypes.array.isRequired,\r\n  isRemote: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default SearchInternshipFeature;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport _ from 'lodash';\r\nimport { Card, Container, Header, Icon, Grid, Pagination, Item } from 'semantic-ui-react';\r\nimport InternshipListingCard from './InternshipListingCard';\r\nimport InternshipListingCard2 from './InternshipListingCard2';\r\nimport SearchInternshipFeature from './SearchInternshipFeature';\r\nimport InternshipsFilters from './InternshipFilters';\r\n\r\nfunction InternshipListing() {\r\n\r\n  const internships = new InternshipsFilters();\r\n  const getInternshipData = internships.mergeData();\r\n\r\n  const [data, setData] = useState(getInternshipData);\r\n  const [paginatedData, setPaginatedData] = useState(getInternshipData.slice(0, 40));\r\n  const [location, setLocation] = useState('any');\r\n  const [company, setCompany] = useState('any');\r\n  const [sort, setSort] = useState('date');\r\n  const [search, setSearch] = useState('');\r\n  const [skills, setSkills] = useState([]);\r\n  const [remote, setRemote] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [height, setHeight] = useState(0);\r\n  const ref = useRef(null);\r\n\r\n  /* Passes data up from SearchInternshipFeature. SetPaginatedData allows data to be rendered\r\n  * for infinite scroll. */\r\n  function handleChildClick(passedData, locationVal, companyVal, sortVal, searchQueryVal, skillsVal, isRemote) {\r\n    setData(passedData);\r\n    setLocation(locationVal);\r\n    setCompany(companyVal);\r\n    setSort(sortVal);\r\n    setSearch(searchQueryVal);\r\n    setSkills(skillsVal);\r\n    setRemote(isRemote);\r\n    setPage(1);\r\n    setPaginatedData(passedData.slice(0, 40));\r\n  }\r\n\r\n  /* Grabs the height */\r\n  useEffect(() => {\r\n    setHeight(ref.current.clientHeight);\r\n  });\r\n\r\n  /* Infinite scrolling */\r\n  function handleScroll() {\r\n    window.onscroll = function () {\r\n      const scroll = window.innerHeight + window.pageYOffset;\r\n      // if we hit the bottom\r\n      if (scroll >= height - 500) {\r\n        // if there are still more items to be loaded\r\n        if (page <= Math.ceil(data.length / 40)) {\r\n          const newPage = page + 1;\r\n          setPage(newPage);\r\n          setPaginatedData(data.slice(0, newPage * 40));\r\n          // console.log('Current Page:', page);\r\n          // console.log('Total Pages:', Math.ceil(data.length / 40));\r\n          // console.log(paginatedData);\r\n          // console.log(\"you're at the bottom of the page\");\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /* Every single time we click a new page, it renders the new data set */\r\n  // const onChange = (e, pageInfo) => {\r\n  //   const page = pageInfo.activePage * 40;\r\n  //   setPaginatedData(data.slice(page - 40, page));\r\n  //   window.scrollTo({\r\n  //     top: 80,\r\n  //     left: 100,\r\n  //     behavior: 'smooth',\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n      <Container fluid style={{ paddingTop: '5rem', marginLeft: '0.5rem', marginRight: '0.5rem' }}>\r\n        <Grid columns={'equal'} doubling stackable>\r\n          <Grid.Row style={{ maxWidth: '80%', margin: 'auto' }}>\r\n            <SearchInternshipFeature onChildClick={handleChildClick} passedData={data}\r\n                                     companyVal={company} locationVal={location} sortVal={sort}\r\n                                     searchQuery={search} skillsVal={skills} isRemote={remote}/>\r\n            <div onScroll={handleScroll()} ref={ref}>\r\n              <Card.Group doubling centered stackable>\r\n                {_.map(paginatedData, (internship, index) => <InternshipListingCard\r\n                    internship={internship} key={index}/>)}\r\n              </Card.Group>\r\n            </div>\r\n          </Grid.Row>\r\n        </Grid>\r\n\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default InternshipListing;\r\n","import React from 'react';\r\nimport { Container, Table, Header } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass StatisticsRow extends React.Component {\r\n\r\n  render() {\r\n    const total = this.props.statistics.entries;\r\n    const position = ((this.props.statistics.position / total) * 100).toString().substring(0, 5);\r\n    const company = ((this.props.statistics.company / total) * 100).toString().substring(0, 5);\r\n    const contact = ((this.props.statistics.contact / total) * 100).toString().substring(0, 5);\r\n    const location = ((this.props.statistics.location / total) * 100).toString().substring(0, 5);\r\n    const posted = ((this.props.statistics.posted / total) * 100).toString().substring(0, 5);\r\n    const due = ((this.props.statistics.due / total) * 100).toString().substring(0, 5);\r\n    const start = ((this.props.statistics.start / total) * 100).toString().substring(0, 5);\r\n    const end = ((this.props.statistics.end / total) * 100).toString().substring(0, 5);\r\n    const compensation = ((this.props.statistics.compensation / total) * 100).toString().substring(0, 5);\r\n    const qualifications = ((this.props.statistics.qualifications / total) * 100).toString().substring(0, 5);\r\n    const skills = ((this.props.statistics.skills / total) * 100).toString().substring(0, 5);\r\n    const description = ((this.props.statistics.description / total) * 100).toString().substring(0, 5);\r\n    const lastScraped = this.props.statistics.lastScraped;\r\n\r\n    function formatDate(stringDate) {\r\n      const date = new Date(stringDate).toDateString();\r\n      if (date !== 'Invalid Date') {\r\n        return date;\r\n      }\r\n      return 'N/A';\r\n    }\r\n\r\n    function lastRow(site) {\r\n      if (site === 'Total') {\r\n        return (\r\n            <Table.Row>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {site}\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  N/A\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {total}\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {position}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {company}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {contact}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {location}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {posted}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {due}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {start}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {end}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {compensation}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {qualifications}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {skills}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {description}%\r\n                </Header>\r\n              </Table.Cell>\r\n            </Table.Row>\r\n\r\n        );\r\n      } else {\r\n        return (\r\n            <Table.Row>\r\n              <Table.Cell>{site}</Table.Cell>\r\n              <Table.Cell>{formatDate(lastScraped)}</Table.Cell>\r\n              <Table.Cell>{total}</Table.Cell>\r\n              <Table.Cell>{position}%</Table.Cell>\r\n              <Table.Cell>{company}%</Table.Cell>\r\n              <Table.Cell>{contact}%</Table.Cell>\r\n              <Table.Cell>{location}%</Table.Cell>\r\n              <Table.Cell>{posted}%</Table.Cell>\r\n              <Table.Cell>{due}%</Table.Cell>\r\n              <Table.Cell>{start}%</Table.Cell>\r\n              <Table.Cell>{end}%</Table.Cell>\r\n              <Table.Cell>{compensation}%</Table.Cell>\r\n              <Table.Cell>{qualifications}%</Table.Cell>\r\n              <Table.Cell>{skills}%</Table.Cell>\r\n              <Table.Cell>{description}%</Table.Cell>\r\n            </Table.Row>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n        <>\r\n          {lastRow(this.props.statistics.site)}\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nStatisticsRow.propTypes = {\r\n  statistics: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default StatisticsRow;\r\n","import React from 'react';\r\nimport { Container, Table, Header, Icon } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport statisticData from './data/statistics.data';\r\nimport StatisticsRow from './StatisticsRow';\r\n\r\n/** A simple static component to render some text for the Statistics page. */\r\nclass Statistics extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      statistics: statisticData,\r\n    };\r\n  }\r\n\r\n   lowercaseFirstLetter(string) {\r\n    return string.charAt(0).toLowerCase() + string.slice(1);\r\n  }\r\n\r\n  onClick = (event) => {\r\n    let value = this.lowercaseFirstLetter(event.target.textContent);\r\n    value = value.replace(/ +/g, '');\r\n    this.setState({ statistics: _.orderBy(statisticData, value, ['desc']) });\r\n    console.log(this.state.statistics);\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n        <div>\r\n          <Container style={{ marginTop: '10rem', marginBottom: '4rem' }}>\r\n            <Header textAlign={'center'}\r\n                    as={'h2'}\r\n                    style={{ marginBottom: '2rem' }}>\r\n              Statistics\r\n            </Header>\r\n            <Table attached='top' celled sortable>\r\n              <Table.Header onClick={(event) => this.onClick(event)}>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Site\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Last Scraped\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Entries\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Position\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Company\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Contact\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Location\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Posted\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Due\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Start\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>End\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Compensation\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Qualifications\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Skills\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Description\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                {_.map((this.state.statistics), (statistics, index) => <StatisticsRow\r\n                    statistics={statistics} key={index}/>)}\r\n              </Table.Body>\r\n            </Table>\r\n          </Container>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport { Container, Menu, Image, Icon, Dropdown } from 'semantic-ui-react';\r\nimport { Link, withRouter, NavLink } from 'react-router-dom';\r\n\r\n/** A simple static component to render some text for the NavBar page. */\r\nclass NavBar extends React.Component {\r\n  render() {\r\n    const linkStyle = {\r\n      color: '#263763',\r\n    };\r\n    return (\r\n        <Container>\r\n          <Menu className={'top meni fixed borderless'}\r\n                style={{ backgroundColor: '#C1C8E4', border: 0, boxShadow: '0 0 BLACK' }}>\r\n            <Menu.Item>\r\n              <a href={'/internaloha'}>\r\n                <Image src={'images/logo.png'} size={'small'}/>\r\n              </a>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Link to='/all-internships' style={linkStyle}>All Internships</Link>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Link to='/internaloha' style={linkStyle}>Recommended Internships</Link>\r\n            </Menu.Item>\r\n            {/*<Menu.Item>*/}\r\n            {/*  <Link to=\"/statistics\" style={linkStyle}>Statistics</Link>*/}\r\n            {/*</Menu.Item>*/}\r\n            {/*<Menu.Item position='right'>*/}\r\n            {/*  <Dropdown text=\"John Foo\" pointing=\"top right\" icon={'user'}>*/}\r\n            {/*    <Dropdown.Menu>*/}\r\n            {/*      <Dropdown.Item icon=\"user\" text=\"Profile\" as={NavLink} exact to={'/internbit/profile'} />*/}\r\n            {/*      <Dropdown.Item icon=\"file text\" text=\"Applications\" as={NavLink} exact to={'/internbit/applications'} />*/}\r\n            {/*    </Dropdown.Menu>*/}\r\n            {/*  </Dropdown>*/}\r\n            {/*</Menu.Item>*/}\r\n          </Menu>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Image,\r\n  Header,\r\n  Button,\r\n  Label,\r\n  Progress,\r\n  Item,\r\n  Dropdown\r\n} from 'semantic-ui-react';\r\nimport { Link, withRouter, NavLink } from 'react-router-dom';\r\n\r\nclass Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: 'Software Engineering',\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const headerStyle = {\r\n      margin: '1rem 0rem',\r\n    };\r\n\r\n    const interests = ['Social Computing', 'Cloud Computing', 'Human Computer Interaction',\r\n    'Education'];\r\n\r\n    const careers = ['Software Engineering', 'Mobile Development', 'Data Science', 'Education'];\r\n\r\n    const courses = ['ICS 321', 'ICS 311', 'ICS 499', 'ICS 235'];\r\n\r\n    const opportunities = ['HACC', 'LAVA Lab', 'ICSpark'];\r\n\r\n    function changeBackground(e) {\r\n      e.currentTarget.style.boxShadow = 'rgb(195 195 195 / 79%) 0px 0px 6px 5px';\r\n      e.currentTarget.style.cursor = 'pointer';\r\n\r\n    }\r\n\r\n    function onLeave(e) {\r\n      e.currentTarget.style.boxShadow = 'rgba(0, 0, 0, 0) 0px 0px 0px 0px';\r\n    }\r\n\r\n    const renderLabels = (label, key) => (\r\n          <Label circular color={'grey'} key={key}\r\n            style={{ margin: '0.4rem 0.5rem', padding: '0.2rem 0.3rem' }}>\r\n            {label}\r\n          </Label>\r\n      );\r\n\r\n    const renderTab = (careerPath) => {\r\n      this.setState({ title: careerPath });\r\n    };\r\n\r\n    return (\r\n      <Container style={{ margin: '10rem 0rem 5rem 0rem' }}>\r\n        <Grid columns={2} stackable\r\n              style={{ backgroundColor: 'white', borderRadius: '1rem',\r\n                padding: '3rem 2rem' }}>\r\n          <Grid.Column width={10}>\r\n            <Grid columns={2} stackable>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <Image\r\n                      style={{ marginBottom: '1.5rem' }}\r\n                      circular\r\n                      centered\r\n                      size={'small'}\r\n                      src={'https://images.squarespace-cdn.com/content/v1/54bbd50ce4b05e8a36418abc/1533226867020-NALD4HA8GBL3IUIQE9PM/ke17ZwdGBToddI8pDm48kMh3mVmBaCAeGwqCLG3iONRZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PITeQtWPcxF65ANawkK25DREOmFck9peR6QL8AnpRiPJE/rachel-rouhana-profile-picture-circle.png?format=500w'}>\r\n                  </Image>\r\n                  <Header style={{ margin: '0.7rem' }}>\r\n                    Jane Foo\r\n                  </Header>\r\n                  <p style={{ margin: '0rem' }}>\r\n                    B.S Computer Science\r\n                  </p>\r\n                  <p>\r\n                    Intended Graduation Date | Spring 2021\r\n                  </p>\r\n                  <Button as={NavLink} exact to={'/internbit/edit-profile'}>\r\n                    Edit Profile\r\n                  </Button>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <Grid.Row>\r\n                    <Header style={{ marginBottom: '1rem' }}>\r\n                      Interests\r\n                    </Header>\r\n                    {interests.map((interest, key) => (\r\n                        renderLabels(interest, key)\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <Header style={{ margin: '1rem 0rem' }}>\r\n                      Career Goals\r\n                    </Header>\r\n                    {careers.map((career, key) => (\r\n                        renderLabels(career, key)\r\n                    ))}\r\n                  </Grid.Row>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column stretched style={{ width: '100%' }}>\r\n                  <Header style={{ margin: '1rem 0rem' }}>\r\n                    Progress\r\n                  </Header>\r\n                  <Progress value='7.4' total='10' progress='percent' label='Software Engineering'\r\n                    onClick={() => renderTab('Software Engineering')} onMouseEnter={changeBackground} onMouseLeave={onLeave}/>\r\n                  <Progress value='6' total='10' progress='percent' label='Mobile Development'\r\n                            onClick={() => renderTab('Mobile Development')} onMouseEnter={changeBackground} onMouseLeave={onLeave}/>\r\n                  <Progress value='4' total='10' progress='percent' label='Data Science'\r\n                            onClick={() => renderTab('Data Science')} onMouseEnter={changeBackground} onMouseLeave={onLeave}/>\r\n                  <Progress value='6.1' total='10' progress='percent' label='Education'\r\n                            onClick={() => renderTab('Education')} onMouseEnter={changeBackground} onMouseLeave={onLeave}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Grid.Column>\r\n          <Grid.Column width={6}\r\n                       style={{ backgroundColor: '#e5e5e5', borderRadius: '1rem' }}>\r\n            <Header dividing style={{ margin: '1rem 0rem' }} textAlign={'center'}>\r\n              {this.state.title}\r\n            </Header>\r\n            <Header as={'h3'} style={headerStyle}>\r\n              Courses\r\n            </Header>\r\n            {courses.map((course, key) => (\r\n                renderLabels(course, key)\r\n            ))}\r\n            <Header as={'h3'} style={headerStyle}>\r\n              Recommended Opportunities\r\n            </Header>\r\n            {opportunities.map((opportunity, key) => (\r\n                renderLabels(opportunity, key)\r\n            ))}\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(Profile);\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Image,\r\n  Header,\r\n  Button,\r\n  Label,\r\n  Progress,\r\n  Item,\r\n  Modal, Icon, Popup, Dropdown,\r\n} from 'semantic-ui-react';\r\nimport swal from 'sweetalert';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass JobCart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: 'Not Applied',\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const skills = ['Social Computing', 'Cloud Computing', 'Human Computer Interaction',\r\n      'Education'];\r\n\r\n    const options = [\r\n      { key: 1, text: 'Not Applied', value: 'Not Applied' },\r\n      { key: 2, text: 'Applied', value: 'Applied' },\r\n      { key: 3, text: 'Interviewing', value: 'Interviewing' },\r\n      { key: 4, text: 'Offered', value: 'Offered' },\r\n      { key: 5, text: 'Rejected', value: 'Rejected' },\r\n    ];\r\n\r\n    function hasSkill(skill) {\r\n      const studentSkills = ['react', 'software engineering'];\r\n\r\n      const has = {\r\n        margin: '0.2rem',\r\n        backgroundColor: '#5680E9',\r\n        color: 'white',\r\n      };\r\n      const notHave = {\r\n        margin: '0.2rem',\r\n        backgroundColor: 'rgb(244, 244, 244)',\r\n        color: '#8f8f8f',\r\n      };\r\n\r\n      if (studentSkills.includes(skill)) {\r\n        return (\r\n            <Label circular key={skill} style={has}>\r\n              {skill}\r\n            </Label>\r\n        );\r\n      }\r\n      return (\r\n          <Label circular key={skill} style={notHave}>\r\n            {skill}\r\n          </Label>\r\n      );\r\n    }\r\n\r\n    function changeBackground(e) {\r\n      e.currentTarget.style.boxShadow = 'rgb(195 195 195 / 79%) 0px 0px 6px 5px';\r\n      e.currentTarget.style.cursor = 'pointer';\r\n\r\n    }\r\n\r\n    function onLeave(e) {\r\n      e.currentTarget.style.boxShadow = 'rgba(0, 0, 0, 0) 0px 0px 0px 0px';\r\n    }\r\n\r\n    const onSelectDropdown = (event, data) => {\r\n      this.setState({ status: data.value });\r\n    };\r\n\r\n    const onRemove = () => {\r\n      swal({\r\n        title: 'Are you sure?',\r\n        text: 'Once removed, you will not be able to recover it.',\r\n        icon: 'warning',\r\n        buttons: true,\r\n        dangerMode: true,\r\n      })\r\n          .then((willDelete) => {\r\n            if (willDelete) {\r\n              swal('Internship was removed.', {\r\n                icon: 'success',\r\n              });\r\n            } else {\r\n              swal('Request canceled.');\r\n            }\r\n          });\r\n    };\r\n\r\n    return (\r\n        <Container style={{ margin: '10rem 0rem 5rem 0rem' }}>\r\n          <Item onMouseEnter={changeBackground} onMouseLeave={onLeave}\r\n                style={{ padding: '0rem 2rem 0rem 2rem', backgroundColor: 'white' }}>\r\n            <Grid doubling columns={2}>\r\n              <Grid.Column width={12}>\r\n                <Item.Content>\r\n                  <Item.Header>\r\n                    <a href={''} target=\"_blank\" rel='noopener noreferrer'>\r\n                      <Header as={'h3'} style={{ color: '#263763', paddingTop: '2rem' }}>\r\n                        Software Engineering\r\n                      </Header>\r\n                    </a>\r\n\r\n                  </Item.Header>\r\n                  <Item.Meta>\r\n                    <Item.Meta>\r\n                      <Grid doubling>\r\n                        <Grid.Row columns={1} style={{ paddingTop: '0.8rem' }}>\r\n                          <Grid.Column floated={'left'} style={{ paddingBottom: '0.3rem' }}>\r\n                            <p style={{ color: 'rgb(89, 119, 199)' }}>\r\n                              Amazon\r\n                            </p>\r\n                          </Grid.Column>\r\n                          <Grid.Column floated={'left'}>\r\n                            <Icon className='map marker alternate'/>\r\n                            <span>Seattle, WA 99999 | August 10, 2020</span>\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n\r\n                      </Grid>\r\n                    </Item.Meta>\r\n                  </Item.Meta>\r\n                  <Item.Description style={{ paddingTop: '1rem', paddingBottom: '1rem' }}>\r\n                    <div align={'left'}>\r\n                      <Button size={'tiny'}\r\n                              style={{ backgroundColor: 'transparent', padding: '0rem' }}>\r\n                        From: Indeed\r\n                      </Button>\r\n                    </div>\r\n\r\n                  </Item.Description>\r\n                  <Item.Extra>\r\n                    {skills.map((skill) => (\r\n                        hasSkill(skill)\r\n                    ))}\r\n                    {/* {isRemote(props.internship.remote)} */}\r\n                  </Item.Extra>\r\n                  <Item.Extra style={{ paddingBottom: '2rem' }}>\r\n                  </Item.Extra>\r\n                </Item.Content>\r\n              </Grid.Column>\r\n              <Grid.Column width={4} textAlign={'right'}>\r\n                <Icon className={'x'} style={{ marginBottom: '1rem' }}\r\n                      onClick={() => onRemove()}/>\r\n                <br/>\r\n                <Dropdown options={options}\r\n                          placeholder='Status'\r\n                          selection\r\n                          onChange={onSelectDropdown}\r\n                />\r\n                <br/>\r\n                <p style={{ margin: '1rem 0rem' }}>\r\n                  {this.state.status}: October 10, 2020\r\n                  <br/>\r\n                </p>\r\n                <Modal closeIcon trigger={\r\n                  <Button>\r\n                    Check info\r\n                  </Button>\r\n                }>\r\n                  <Modal.Header>Description</Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Commodi dolores esse\r\n                      est\r\n                      incidunt, nesciunt officia placeat quasi quis! Asperiores assumenda atque\r\n                      corporis\r\n                      deserunt fugit ipsum magni minima quaerat similique vitae!\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                  <Modal.Actions>\r\n                    <a href={''} target=\"_blank\" rel='noopener noreferrer'>\r\n                      <Button style={{ backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n                        Go to Listing: Indeed\r\n                        <Icon name='chevron right'/>\r\n                      </Button>\r\n                    </a>\r\n                  </Modal.Actions>\r\n                </Modal>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Item>\r\n        </Container>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(JobCart);\r\n","import React from 'react';\r\nimport { Container, Checkbox, Header, Button, Input, Form, Select, Dropdown } from 'semantic-ui-react';\r\nimport swal from 'sweetalert';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass EditProfile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      notifications: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const majorOptions = [\r\n      { key: 'm', text: 'B.A Information & Computer Science', value: 'B.A Information & Computer Science' },\r\n      { key: 'f', text: 'B.S Computer Science', value: 'B.S Computer Science' },\r\n      { key: 'o', text: 'B.S Computer Science - Data Science', value: 'B.S Computer Science - Data Science' },\r\n    ];\r\n\r\n    const skillOptions = [\r\n      { key: 'm', text: 'Java', value: 'Java' },\r\n      { key: 'f', text: 'Javascript', value: 'Javascript' },\r\n      { key: 'o', text: 'React', value: 'React' },\r\n    ];\r\n\r\n    const careerOptions = [\r\n      { key: 'm', text: 'Software Developer', value: 'Software Developer' },\r\n      { key: 'f', text: 'Full-Stack Developer', value: 'Full-Stack Developer' },\r\n      { key: 'o', text: 'Data Scientist', value: 'Data Scientist' },\r\n    ];\r\n\r\n    const interestOptions = [\r\n      { key: 'm', text: 'Social Computing', value: 'Social Computing' },\r\n      { key: 'f', text: 'Web Development', value: 'Web Development' },\r\n      { key: 'o', text: 'Education', value: 'Education' },\r\n    ];\r\n\r\n    const email = [\r\n      { key: 'm', text: 'Daily', value: 'Daily' },\r\n      { key: 'f', text: 'Weekly', value: 'Weekly' },\r\n    ];\r\n\r\n    const onToggle = () => {\r\n      this.setState({ notifications: !this.state.notifications });\r\n    };\r\n\r\n    const onUpdate = () => {\r\n      swal({\r\n        title: 'Profile updated',\r\n        text: '',\r\n        icon: 'success',\r\n      });\r\n    };\r\n\r\n    return (\r\n        <Container style={{\r\n          margin: '10rem 0rem 5rem 0rem', backgroundColor: 'white',\r\n          borderRadius: '1rem', padding: '3rem 2rem',\r\n        }}>\r\n          <Form>\r\n            <Header textAlign={'center'} as={'h2'} style={{ marginBottom: '2rem' }}>\r\n              Edit Profile\r\n            </Header>\r\n            <Form.Group widths='equal'>\r\n              <Form.Field\r\n                  id='form-input-control-first-name'\r\n                  control={Input}\r\n                  label='First name'\r\n                  placeholder='First name'\r\n              />\r\n              <Form.Field\r\n                  id='form-input-control-last-name'\r\n                  control={Input}\r\n                  label='Last name'\r\n                  placeholder='Last name'\r\n              />\r\n            </Form.Group>\r\n            Profile Image\r\n            <Button style={{ marginLeft: '1rem' }}>\r\n              Upload\r\n            </Button>\r\n            <Form.Field\r\n                control={Select}\r\n                options={majorOptions}\r\n                label={{ children: 'Major' }}\r\n                placeholder='Major'\r\n                search\r\n            />\r\n            <Form.Field\r\n                fluid multiple selection clearable\r\n                control={Dropdown}\r\n                options={skillOptions}\r\n                label={{ children: 'Skills' }}\r\n                placeholder='Skills'\r\n                search\r\n            />\r\n            <Form.Field\r\n                fluid multiple selection clearable\r\n                control={Select}\r\n                options={interestOptions}\r\n                label={{ children: 'Interests' }}\r\n                placeholder='Interests'\r\n                search\r\n            />\r\n            <Form.Field\r\n                fluid multiple selection clearable\r\n                control={Select}\r\n                options={careerOptions}\r\n                label={{ children: 'Career Goals' }}\r\n                placeholder='Career'\r\n                search\r\n            />\r\n\r\n            <Header textAlign={'center'} as={'h2'}>\r\n              Notifications\r\n            </Header>\r\n            <Checkbox toggle label={'Enable Email Notifcations?'}\r\n                      onChange={onToggle}\r\n                      style={{ marginBottom: '1rem' }}/>\r\n            { this.state.notifications ? (\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={email}\r\n                        label={{ children: 'Email Frequency' }}\r\n                        placeholder='Email frequency'\r\n                        search\r\n                    />\r\n                )\r\n            :\r\n                (<div>\r\n\r\n                </div>)\r\n            }\r\n            <div align={'center'} >\r\n              <Button style={{ marginTop: '1rem' }}\r\n                onClick={onUpdate}>\r\n                Update\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Container>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(EditProfile);\r\n","import natural from 'natural';\r\nimport _ from 'lodash';\r\nimport career_interest_to_skill from './career_interest_to_skill';\r\n\r\nfunction test(data) {\r\n  const TfIdf = natural.TfIdf;\r\n  const tfidf = new TfIdf();\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    tfidf.addDocument(data[i].description);\r\n  }\r\n\r\n  const tfidfData = [];\r\n\r\n  // tfidf.addDocument('this document is about node.');\r\n  // tfidf.addDocument('this document is about ruby.');\r\n  // tfidf.addDocument('this document is about ruby and node.');\r\n  // tfidf.addDocument('this document is about node. it has node examples');\r\n\r\n  console.log('javascript full-stack css hmtl --------------------------------');\r\n\r\n  tfidf.tfidfs('javascript full-stack css hmtl ', function (i, measure) {\r\n    //  console.log('document #' + i + ' is ' + measure);\r\n    if (measure > 6) {\r\n      console.log('document #' + i + ' is ' + measure);\r\n      tfidfData.push(data[i]);\r\n    }\r\n  });\r\n\r\n  // console.log(tfidfData);\r\n  return tfidfData;\r\n\r\n  // console.log('ruby --------------------------------');\r\n  // tfidf.tfidfs('ruby', function (i, measure) {\r\n  //   console.log('document #' + i + ' is ' + measure);\r\n  // });\r\n}\r\n\r\nfunction dropdownCareerInterest() {\r\n\r\n  const info = [];\r\n  for (let i = 0; i < career_interest_to_skill.length; i++) {\r\n    info.push({\r\n      key: career_interest_to_skill[i].career,\r\n      text: career_interest_to_skill[i].career,\r\n      value: career_interest_to_skill[i].career,\r\n    });\r\n  }\r\n  return info;\r\n}\r\n\r\nfunction recommendation(tags, careers, data, location) {\r\n\r\n  if (tags.length === 0 && careers.length === 0) {\r\n    if (location.length !== 0) {\r\n      let arrLocations = [];\r\n      for (let i = 0; i < location.length; i++) {\r\n        const newState = _.filter(data, ['location.state', location[i]]);\r\n        arrLocations = arrLocations.concat(newState);\r\n      }\r\n      return arrLocations;\r\n    }\r\n    return data;\r\n\r\n  }\r\n\r\n  const skills = [];\r\n\r\n  let careerSkills = [];\r\n  for (let i = 0; i < career_interest_to_skill.length; i++) {\r\n    for (let k = 0; k < careers.length; k++) {\r\n      if (careers[k] === career_interest_to_skill[i].career) {\r\n        for (let j = 0; j < career_interest_to_skill[i].skills.length; j++) {\r\n          careerSkills.push(career_interest_to_skill[i].skills[j]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  careerSkills = _.uniq(careerSkills);\r\n\r\n  // const lowerCaseTags = [];\r\n\r\n  // for (let i = 0; i < tags.length; i++) {\r\n  //   lowerCaseTags.push(tags[i].toString().toLowerCase());\r\n  // }\r\n\r\n  const totalSkills = _.uniq(careerSkills.concat(tags));\r\n\r\n  // console.log(totalSkills);\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    let foundTag = false;\r\n    let num = 0;\r\n    let total = 0;\r\n    for (let j = 0; j < data[i].skills.length; j++) {\r\n      for (let k = 0; k < totalSkills.length; k++) {\r\n        if (data[i].skills[j].includes(totalSkills[k])) {\r\n          num++;\r\n          foundTag = true;\r\n        }\r\n      }\r\n      total = data[i].skills.length;\r\n    }\r\n    if (foundTag === true) {\r\n\r\n      data[i].recommendation = num / total;\r\n      skills.push(data[i]);\r\n    }\r\n  }\r\n\r\n  const sorted = _.orderBy(skills, ['recommendation'], ['desc']);\r\n\r\n  //console.log(sorted);\r\n\r\n// for (let i = 0; i < data.length; i++) {\r\n//   // if any of the tags exist in data set, push it to skills and go to next\r\n//   while (counter < totalSkills.length && exists === false) {\r\n//     if (data[i].skills.includes(totalSkills[counter])) {\r\n//       skills.push(data[i]);\r\n//       exists = true;\r\n//     }\r\n//     counter++;\r\n//   }\r\n//   counter = 0;\r\n//   exists = false;\r\n// }\r\n// console.log(skills);\r\n  console.log(location);\r\n\r\n  if (location.length === 0) {\r\n    return sorted;\r\n  }\r\n\r\n  // if (location.length === 1) {\r\n  //   return _.filter(sorted, ['location.state', location]);\r\n  // } else {\r\n  let arrLocations = [];\r\n  for (let i = 0; i < location.length; i++) {\r\n    arrLocations = arrLocations.concat(_.filter(sorted, ['location.state', location[i]]));\r\n  }\r\n  return arrLocations;\r\n  // }\r\n  //\r\n  // console.log(sorted);\r\n  // console.log(_.filter(sorted, ['location.state', location]));\r\n  // return _.filter(sorted, ['location.state', location]);\r\n\r\n}\r\n\r\nfunction isRemoteFunc(data, value) {\r\n  if (value === false) {\r\n    return data;\r\n  }\r\n  console.log(_.filter(data, ['remote', true]))\r\n  return _.filter(data, ['remote', true]);\r\n}\r\n\r\nexport { recommendation, dropdownCareerInterest, test, isRemoteFunc };\r\n","import React from 'react';\r\nimport {\r\n  Segment,\r\n  Header,\r\n  Dropdown,\r\n  Form, Modal, Button, Grid, Popup, Input, Checkbox, Label,\r\n} from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport InternshipsFilters from './InternshipFilters';\r\nimport { recommendation, dropdownCareerInterest, isRemoteFunc } from './RecommendationScript';\r\n\r\nfunction MockProfile({ onChildClick, skillsVal, careerVal, passedData, locationVal, isRemote }) {\r\n\r\n  const internships = new InternshipsFilters();\r\n  const data = internships.mergeData();\r\n  const location = internships.dropdownLocation(data);\r\n\r\n  // let locationChange = locationVal;\r\n  // let companyChange = companyVal;\r\n  // let sortChange = sortVal;\r\n  // let searchQueryChange = searchQuery;\r\n  // let remoteCheck = isRemote;\r\n\r\n  let skillChange = skillsVal;\r\n  let careerChange = careerVal;\r\n  let recommendedData = [];\r\n  let locationChange = locationVal;\r\n  let remoteCheck = isRemote;\r\n\r\n  const setFilters = () => {\r\n\r\n    const newData = isRemoteFunc(recommendedData, remoteCheck);\r\n    // const locationFiltered = internships.filterByLocation(skillsFiltered, locationChange);\r\n    onChildClick(newData, skillChange, careerChange, locationChange, remoteCheck);\r\n\r\n    window.scrollTo({\r\n      top: 70,\r\n      left: 100,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  // console.log(test(data))\r\n\r\n  // const handleSearchChange = (event) => {\r\n  //   searchQueryChange = event.target.value;\r\n  // };\r\n  //\r\n  // const getRemote = () => {\r\n  //   if (remoteCheck) {\r\n  //     remoteCheck = false;\r\n  //   } else {\r\n  //     remoteCheck = true;\r\n  //   }\r\n  //   setFilters();\r\n  // };\r\n\r\n  const handleSubmit = () => {\r\n    setFilters();\r\n  };\r\n\r\n  const getRemote = () => {\r\n    if (remoteCheck) {\r\n      remoteCheck = false;\r\n    } else {\r\n      remoteCheck = true;\r\n    }\r\n    recommendedData = recommendation(skillChange, careerChange, data, locationChange);\r\n    setFilters();\r\n  };\r\n\r\n  const getLocation = (event, { value }) => {\r\n    locationChange = value;\r\n    recommendedData = recommendation(skillChange, careerChange, data, locationChange);\r\n    setFilters();\r\n  };\r\n\r\n  const getSkills = (event, { value }) => {\r\n    skillChange = value;\r\n    recommendedData = recommendation(skillChange, careerChange, data, locationChange);\r\n    setFilters();\r\n  };\r\n\r\n  const getCareerInterest = (event, { value }) => {\r\n    careerChange = value;\r\n    recommendedData = recommendation(skillChange, careerChange, data, locationChange);\r\n    setFilters();\r\n  };\r\n\r\n  return (\r\n      <Segment style={{ width: '100%', borderRadius: '10px', marginTop: '3rem' }}>\r\n        <Grid columns={'equal'}>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Form>\r\n                <Form.Field\r\n                    required\r\n                    fluid multiple selection clearable\r\n                    control={Dropdown}\r\n                    options={internships.dropdownSkills(data)}\r\n                    label={{ children: 'Skills' }}\r\n                    placeholder='Skills'\r\n                    search\r\n                    onChange={getSkills}\r\n                />\r\n              </Form>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Field\r\n                    required\r\n                    fluid multiple selection clearable\r\n                    control={Dropdown}\r\n                    options={dropdownCareerInterest()}\r\n                    label={{ children: 'Career Interest' }}\r\n                    placeholder='Career Interest'\r\n                    search\r\n                    onChange={getCareerInterest}\r\n                />\r\n              </Form>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n              <Form>\r\n                <Form.Field\r\n                    fluid selection multiple clearable\r\n                    control={Dropdown}\r\n                    options={internships.dropdownLocation(data)}\r\n                    label={{ children: 'Location' }}\r\n                    placeholder='Location'\r\n                    search\r\n                    onChange={getLocation}\r\n                />\r\n              </Form>\r\n              <Checkbox style={{ paddingTop: '1rem' }} label='Remote'\r\n                        onClick={getRemote}/>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n              <Header style={{ paddingBottom: '0', marginTop: '0rem' }}>\r\n                Total results found: {internships.total(passedData)}\r\n              </Header>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n\r\n        </Grid>\r\n      </Segment>\r\n\r\n  );\r\n}\r\n\r\nMockProfile.propTypes = {\r\n  onChildClick: PropTypes.func.isRequired,\r\n  passedData: PropTypes.array.isRequired,\r\n  skillsVal: PropTypes.array.isRequired,\r\n  careerVal: PropTypes.array.isRequired,\r\n  locationVal: PropTypes.string.isRequired,\r\n  isRemote: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default MockProfile;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport _ from 'lodash';\r\nimport { Container, Header, Icon, Grid, Card } from 'semantic-ui-react';\r\nimport InternshipListingCard from './InternshipListingCard';\r\nimport MockProfile from './MockProfile';\r\nimport InternshipsFilters from './InternshipFilters';\r\n\r\nfunction RecommendedInternships() {\r\n\r\n  const internships = new InternshipsFilters();\r\n  const getInternshipData = internships.mergeData();\r\n\r\n  const [data, setData] = useState(getInternshipData);\r\n  const [paginatedData, setPaginatedData] = useState(getInternshipData.slice(0, 40));\r\n\r\n  const [skills, setSkills] = useState([]);\r\n  const [career, setCareer] = useState([]);\r\n  const [location, setLocation] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [height, setHeight] = useState(0);\r\n  const [remote, setRemote] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n\r\n  /* Passes data up from MockProfile. SetPaginatedData allows data to be rendered\r\n  * for infinite scroll. */\r\n  function handleChildClick(passedData, skillsVal, careerVal, locationVal, remoteVal) {\r\n    // console.log(passedData);\r\n    setData(passedData);\r\n    setSkills(skillsVal);\r\n    setCareer(careerVal);\r\n    setLocation(locationVal);\r\n    setRemote(remoteVal);\r\n    setPage(1);\r\n    setPaginatedData(passedData.slice(0, 40));\r\n  }\r\n\r\n  /* Grabs the height */\r\n  useEffect(() => {\r\n    setHeight(ref.current.clientHeight);\r\n  });\r\n\r\n  /* Infinite scrolling */\r\n  function handleScroll() {\r\n    window.onscroll = function () {\r\n      const scroll = window.innerHeight + window.pageYOffset;\r\n      // if we hit the bottom\r\n      if (scroll >= height - 500) {\r\n        // if there are still more items to be loaded\r\n        if (page <= Math.ceil(data.length / 40)) {\r\n          const newPage = page + 1;\r\n          setPage(newPage);\r\n          setPaginatedData(data.slice(0, newPage * 40));\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  return (\r\n      <Container fluid style={{ paddingTop: '5rem', marginLeft: '0.5rem', marginRight: '0.5rem' }}>\r\n        <Grid doubling stackable>\r\n          <Grid.Row style={{ maxWidth: '80%', margin: 'auto' }}>\r\n            <MockProfile onChildClick={handleChildClick} passedData={data}\r\n                         skillsVal={skills} careerVal={career} locationVal={location}\r\n                         isRemote={remote}/>\r\n            <div onScroll={handleScroll()} ref={ref}>\r\n              <Card.Group centered doubling stackable>\r\n                {_.map(paginatedData, (internship, index) => <InternshipListingCard\r\n                    internship={internship} key={index} hasSkills={skills} passedData={data}/>)}\r\n              </Card.Group>\r\n            </div>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <div align={'center'} style={{ paddingTop: '5rem', paddingBottom: '5rem' }}>\r\n        </div>\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default RecommendedInternships;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.css';\r\nimport './index.css';\r\nimport Landing from './Landing';\r\nimport InternshipListing from './InternshipListing';\r\nimport Statistics from './Statistcs';\r\nimport NavBar from './NavBar';\r\nimport Profile from './Profile';\r\nimport JobCart from './JobCart';\r\nimport EditProfile from './EditProfile';\r\nimport RecommendedInternships from './RecommendedInternships';\r\n\r\n/**\r\n * The top level layout for the site.\r\n */\r\nconst App = () => (\r\n    <Router>\r\n      <NavBar/>\r\n      <Switch>\r\n        {/*<Route exact path={'/'} component={Landing}/>*/}\r\n        <Route exact path={'/internaloha'} component={RecommendedInternships}/>\r\n        <Route exact path={'/all-internships'} component={InternshipListing}/>\r\n        <Route exact path={'/statistics'} component={Statistics}/>\r\n        <Route exact path={'/profile'} component={Profile}/>\r\n        <Route exact path={'/applications'} component={JobCart}/>\r\n        <Route exact path={'/edit-profile'} component={EditProfile}/>\r\n      </Switch>\r\n    </Router>\r\n);\r\n\r\nrender(<App/>, document.getElementById('root'));\r\n\r\n// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import 'semantic-ui-css/semantic.css';\r\n// import './index.css';\r\n// import InternshipListing from './InternshipListing';\r\n// import Statistics from './Statistcs';\r\n// import NavBar from './NavBar';\r\n//\r\n// /**\r\n//  * The top level layout for the site.\r\n//  */\r\n//\r\n// ReactDOM.render(\r\n//     <React.StrictMode>\r\n//       <NavBar/>\r\n//       <InternshipListing/>\r\n//       <Statistics/>\r\n//     </React.StrictMode>,\r\n//   // eslint-disable-next-line no-undef\r\n//   document.getElementById('root'),\r\n// );\r\n"],"sourceRoot":""}