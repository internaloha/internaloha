{"version":3,"sources":["InternshipFilters.jsx","Landing.jsx","InternshipListingCard.jsx","InternshipListingCard2.jsx","SearchInternshipFeature.jsx","InternshipListing.jsx","StatisticsRow.jsx","Statistcs.jsx","NavBar.jsx","index.js"],"names":["InternshipsFilters","total","data","length","_","concat","zipData","simplyData","cheggData","monsterData","linkedinData","youternData","nsfData","iHire","glassData","indeedData","angelData","companies","map","categories","flattenDeep","uniq","sort","number","groupBy","info","i","push","key","text","value","num","unshift","location","locationAmount","skills","this","mergeData","flattenSkills","uniqueSkills","orderBy","tags","exists","counter","includes","company","filter","searchQuery","list","position","toString","toLowerCase","input","Landing","internships","dropdownCompany","height","Math","max","document","documentElement","clientHeight","window","innerHeight","width","clientWidth","innerWidth","style","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","Container","textAlign","Image","src","size","centered","paddingTop","Statistic","Group","inverted","marginLeft","marginRight","Value","Label","Button","as","NavLink","to","marginTop","backgroundColor","color","React","Component","withRouter","InternshipListingCard","isRemote","remote","circular","margin","siteName","url","e","formatDate","stringDate","date","Date","toDateString","changeBackground","currentTarget","cursor","onLeave","InternshipListingCard2","props","Item","onMouseEnter","onMouseLeave","padding","Modal","closeIcon","trigger","Content","Header","href","internship","target","rel","Meta","Grid","doubling","Row","columns","Column","floated","paddingBottom","Icon","className","city","state","zip","posted","Description","align","Extra","skill","hasSkill","internshipDescription","noScriptDescript","replace","dangerouslySetInnerHTML","__html","console","log","description","Actions","name","Popup","content","mouseLeaveDelay","on","SearchInternshipFeature","onChildClick","passedData","locationVal","companyVal","sortVal","skillsVal","locationChange","companyChange","sortChange","searchQueryChange","skillChange","remoteCheck","sortBy","dropdownLocation","setFilters","remoteFilter","searchFiltered","filterBySearch","skillsFiltered","filterBySkills","locationFiltered","filterByLocation","companyFiltered","filterByCompany","sorted","sortedBy","scrollTo","top","left","behavior","sticky","Segment","Dropdown","inline","header","options","defaultValue","onChange","event","Form","onSubmit","Input","icon","iconPosition","placeholder","fluid","multiple","search","selection","dropdownSkills","Checkbox","label","onClick","InternshipListing","getInternshipData","useState","setData","slice","paginatedData","setPaginatedData","setLocation","setCompany","setSort","setSearch","setSkills","setRemote","page","setPage","setHeight","ref","useRef","useEffect","current","stackable","searchQueryVal","onScroll","onscroll","pageYOffset","ceil","newPage","divided","relaxed","index","StatisticsRow","site","statistics","entries","substring","contact","due","start","end","compensation","qualifications","Table","Cell","Statistics","marginBottom","attached","celled","HeaderCell","Body","statisticData","NavBar","linkStyle","Menu","border","boxShadow","pointing","exact","App","path","component","render","getElementById"],"mappings":"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","file":"static/js/main.dcb333b3.chunk.js","sourcesContent":["import _ from 'lodash';\r\nimport linkedinData from './data/linkedin.parsed.data';\r\nimport simplyData from './data/simplyhired.parsed.data';\r\nimport zipData from './data/ziprecruiter.parsed.data';\r\nimport cheggData from './data/internships.parsed.data';\r\nimport monsterData from './data/monster.parsed.data';\r\nimport youternData from './data/youtern.parsed.data';\r\nimport nsfData from './data/nsf-reu.parsed.data';\r\nimport iHire from './data/iHireTech.parsed.data';\r\nimport glassData from './data/glassdoor.parsed.data';\r\nimport indeedData from './data/indeed.parsed.data';\r\nimport angelData from './data/angellist.parsed.data';\r\n\r\nclass InternshipsFilters {\r\n\r\n  /* Returns total number of internship listing */\r\n  total = (data) => data.length;\r\n\r\n  mergeData() {\r\n    let data = [];\r\n    data = _.concat(zipData, simplyData);\r\n    data = _.concat(data, cheggData);\r\n    data = _.concat(data, monsterData);\r\n    data = _.concat(data, linkedinData);\r\n    data = _.concat(data, youternData);\r\n    data = _.concat(data, nsfData);\r\n    data = _.concat(data, iHire);\r\n    data = _.concat(data, glassData);\r\n    data = _.concat(data, indeedData);\r\n    data = _.concat(data, angelData);\r\n\r\n    // console.log('zip:', zipData.length);\r\n    // console.log('simply:', simplyData.length);\r\n    // console.log('chegg:', cheggData.length);\r\n    // console.log('monster:', monsterData.length);\r\n    // console.log('linkedIn:', linkedinData.length);\r\n    // console.log('total:', data.length);\r\n    // let test = _.map(linkedinData, 'company');\r\n    // console.log(test.sort());\r\n    //\r\n    // let test2 = _.map(angelData, 'location.state');\r\n    //console.log(_.groupBy(test2));\r\n    //console.log(_.filter(angelData, ['location.state', '']));\r\n    return data;\r\n  }\r\n\r\n  /* Returns array of companies for us to be able to pass into semantic ui's dropdown. Format:\r\n  * key: unique key of the company\r\n  * text: Text that shows up in dropdown\r\n  * value: value used to search\r\n  * num: the number of internships with said company */\r\n  dropdownCompany(data) {\r\n    let companies = _.map(data, 'company');\r\n    const categories = _.flattenDeep(companies);\r\n    companies = _.uniq(categories).sort();\r\n\r\n    const number = _.groupBy(data, 'company');\r\n    const info = [];\r\n\r\n    for (let i = 0; i < companies.length; i++) {\r\n\r\n      info.push({\r\n        key: companies[i],\r\n        text: `${companies[i]} (${number[companies[i]].length})`,\r\n        value: companies[i],\r\n        num: number[companies[i]].length,\r\n      });\r\n    }\r\n\r\n    // Adding any parameter to front of array\r\n    info.unshift({\r\n      key: 'any',\r\n      text: 'Any',\r\n      value: 'any',\r\n    });\r\n\r\n    return info;\r\n  }\r\n\r\n  /* Returns array of companies for us to be able to pass into semantic ui's dropdown. Format:\r\n * key: unique key of the company\r\n * text: Text that shows up in dropdown\r\n * value: value used to search\r\n * num: the number of internships with said company */\r\n  dropdownLocation(data) {\r\n    let location = _.map(data, 'location.state');\r\n    // console.log(location);\r\n    const categories = _.flattenDeep(location);\r\n    location = _.uniq(categories).sort();\r\n    // console.log(location);\r\n\r\n    const number = _.groupBy(data, 'location.state');\r\n    const info = [];\r\n\r\n    for (let i = 0; i < location.length; i++) {\r\n\r\n      let locationAmount = number[location[i]].length;\r\n      // if (location[i] === 'Remote') {\r\n      //   locationAmount = _.filter(data, ['remote', true]).length\r\n      //       + number[location[i]].length;\r\n      //\r\n      // } else {\r\n      //   locationAmount = number[location[i]].length;\r\n      // }\r\n\r\n      info.push({\r\n        key: location[i],\r\n        text: `${location[i]} (${locationAmount})`,\r\n        value: location[i],\r\n        num: number[location[i]].length,\r\n      });\r\n    }\r\n\r\n    // Adding any parameter to front of array\r\n    info.unshift({\r\n      key: 'any',\r\n      text: 'Any',\r\n      value: 'any',\r\n    });\r\n\r\n    return info;\r\n  }\r\n\r\n  /* Returns array of skills for us to be able to pass into semantic ui's dropdown. Format:\r\n* key: unique key of the skill\r\n* text: Text that shows up in dropdown\r\n* value: value used to search\r\n* num: the number of internships with the associated skills */\r\n  dropdownSkills() {\r\n    const skills = _.map(this.mergeData(), 'skills');\r\n    // console.log(skills);\r\n    const flattenSkills = _.flattenDeep(skills);\r\n    // console.log(flattenSkills);\r\n    const uniqueSkills = _.uniq(flattenSkills).sort();\r\n    // console.log(uniqueSkills);\r\n\r\n    const number = _.groupBy(flattenSkills);\r\n    // console.log(number);\r\n\r\n    const info = [];\r\n\r\n    for (let i = 0; i < uniqueSkills.length; i++) {\r\n      info.push({\r\n        key: uniqueSkills[i],\r\n        text: `${uniqueSkills[i]} (${number[uniqueSkills[i]].length})`,\r\n        value: uniqueSkills[i],\r\n        num: number[uniqueSkills[i]].length,\r\n      });\r\n    }\r\n    return info;\r\n  }\r\n\r\n  /* Sorts list by given parameters */\r\n  sortedBy(data, value) {\r\n    if (value === 'date') {\r\n      return _.orderBy(data, ['posted'], ['desc']);\r\n    }\r\n    if (value === 'company') {\r\n      return _.orderBy(data, ['company'], ['asc']);\r\n    }\r\n    return _.orderBy(data, ['position'], ['asc']);\r\n  }\r\n\r\n  /* Returns a list based on skill/tags inputs */\r\n  filterBySkills(data, tags) {\r\n    if (tags.length === 0) {\r\n      return data;\r\n    }\r\n\r\n    const skills = [];\r\n    let exists = false;\r\n    let counter = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      // if any of the tags exist in data set, push it to skills and go to next\r\n      while (counter < tags.length && exists === false) {\r\n        if (data[i].skills.includes(tags[counter])) {\r\n          skills.push(data[i]);\r\n          exists = true;\r\n        }\r\n        counter++;\r\n      }\r\n      counter = 0;\r\n      exists = false;\r\n    }\r\n    return skills;\r\n  }\r\n\r\n  /* Returns a sorted list by company name */\r\n  filterByCompany(data, company) {\r\n    if (company === 'any') {\r\n      return data;\r\n    }\r\n    return _.filter(data, ['company', company]);\r\n  }\r\n\r\n  /* Returns a list based on search query */\r\n  filterBySearch(data, searchQuery) {\r\n    // console.log(searchQuery);\r\n    if (searchQuery.length === 0) {\r\n      return data;\r\n    }\r\n    const list = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      const position = data[i].position;\r\n      const lowercase = position.toString().toLowerCase();\r\n      if (lowercase.includes(searchQuery.toString().toLowerCase())) {\r\n        list.push(data[i]);\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n\r\n  /* Returns a sorted list by location */\r\n  filterByLocation(data, input) {\r\n    if (input === 'any') {\r\n      return data;\r\n    }\r\n\r\n    // // Add all the internships where remote == true and those who have remote in state\r\n    // if (input === 'Remote') {\r\n    //   const byState = _.filter(data, ['location.state', input]);\r\n    //   const remote = _.filter(data, ['remote', true]);\r\n    //   return _.concat(byState, remote);\r\n    // }\r\n    return _.filter(data, ['location.state', input]);\r\n  }\r\n\r\n  isRemote(data, value) {\r\n    if (value === false) {\r\n      return data;\r\n    }\r\n     return _.filter(data, ['remote', true]);\r\n  }\r\n}\r\n\r\nexport default InternshipsFilters;\r\n","import React from 'react';\r\nimport { Container, Statistic, Image, Button } from 'semantic-ui-react';\r\nimport InternshipsFilters from './InternshipFilters';\r\nimport { Link, withRouter, NavLink } from 'react-router-dom';\r\n\r\n\r\n/** A simple static component to render some text for the landing page. */\r\nclass Landing extends React.Component {\r\n  render() {\r\n\r\n    const internships = new InternshipsFilters();\r\n    const data = internships.mergeData();\r\n    const companies = internships.dropdownCompany(data).length;\r\n\r\n    const background = {\r\n      backgroundImage: 'url(\"images/landingBG.png\")',\r\n      height: '100%',\r\n      backgroundPosition: 'center',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundSize: 'cover',\r\n    };\r\n\r\n    const height = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n    const width = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\n\r\n    return (\r\n        <div style={background}>\r\n          <div style={{ height: `${height}px` }}>\r\n            <Container textAlign={'center'}>\r\n              <Image src={'images/logo.png'} size={'medium'} centered style={{ paddingTop: '10rem' }}/>\r\n              <Statistic.Group inverted\r\n                               style={{ marginLeft: 'auto',\r\n                marginRight: 'auto' }}>\r\n                <Statistic size='huge'\r\n                           style={{ marginLeft: `${width / 4.3}px` }}>\r\n                  <Statistic.Value>{data.length}</Statistic.Value>\r\n                  <Statistic.Label>Internships</Statistic.Label>\r\n                </Statistic>\r\n                <Statistic size='huge'>\r\n                  <Statistic.Value>{companies}</Statistic.Value>\r\n                  <Statistic.Label>Companies</Statistic.Label>\r\n                </Statistic>\r\n              </Statistic.Group>\r\n                <Button\r\n                    as={NavLink}\r\n                    to={'/internbit/all-internships'}\r\n                    style={{ marginTop: '3rem', backgroundColor: '#8860D0', color: 'white' }}>\r\n                  Get connected today!\r\n                </Button>\r\n            </Container>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Landing);\r\n","import { Button, Card, Grid, Icon, Label, Modal, Header } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nfunction isRemote(city) {\r\n  if (city === 'Remote') {\r\n    return (\r\n        <Label circular style={{\r\n          backgroundColor: '#263763',\r\n          color: 'white',\r\n          margin: '0.2rem',\r\n        }}>\r\n          Remote\r\n        </Label>\r\n    );\r\n  }\r\n}\r\n\r\nfunction hasSkill(skill) {\r\n  const studentSkills = ['machine learning', 'software engineering'];\r\n\r\n  const has = {\r\n    margin: '0.2rem',\r\n    backgroundColor: '#5680E9',\r\n    color: 'white',\r\n  };\r\n  const notHave = {\r\n    margin: '0.2rem',\r\n    backgroundColor: 'rgb(244, 244, 244)',\r\n    color: '#8f8f8f',\r\n  };\r\n\r\n  if (studentSkills.includes(skill)) {\r\n    return (\r\n        <Label circular key={skill} style={has}>\r\n          {skill}\r\n        </Label>\r\n    );\r\n  }\r\n  return (\r\n      <Label circular key={skill} style={notHave}>\r\n        {skill}\r\n      </Label>\r\n  );\r\n}\r\n\r\nfunction formatDate(stringDate) {\r\n  const date = new Date(stringDate);\r\n  return date.toDateString();\r\n}\r\n\r\nfunction siteName(url) {\r\n  if (url.includes('linkedin')) {\r\n    return 'LinkedIn';\r\n  }\r\n  if (url.includes('ziprecruiter')) {\r\n    return 'ZipRecruiter';\r\n  }\r\n  if (url.includes('monster')) {\r\n    return 'Monster';\r\n  }\r\n  if (url.includes('simplyhired')) {\r\n    return 'SimplyHired';\r\n  }\r\n  if (url.includes('internships')) {\r\n    return 'Chegg';\r\n  }\r\n}\r\n\r\nfunction InternshipListingCard(props) {\r\n\r\n  return (\r\n      <Card>\r\n        <Card.Content>\r\n          <Card.Header textAlign={'center'}>\r\n            <a href={props.internship.url}>\r\n              <p style={{ color: '#263763' }}>\r\n                {props.internship.position}\r\n              </p>\r\n            </a>\r\n          </Card.Header>\r\n          <Card.Meta style={{ paddingTop: '0.6rem' }}>\r\n            <Grid doubling>\r\n              <Grid.Row columns={1}>\r\n                <Grid.Column floated={'left'}>\r\n                  <p style={{ color: '#8860D0' }}>\r\n                    {props.internship.company}\r\n                  </p>\r\n                </Grid.Column>\r\n                <Grid.Column floated={'left'}>\r\n                  <Icon className='map marker alternate'/>\r\n                  <span>{props.internship.location.city}, {props.internship.location.state} {props.internship.location.zip}</span>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n\r\n            </Grid>\r\n          </Card.Meta>\r\n          <Card.Description style={{ paddingTop: '1rem' }}>\r\n            <Modal trigger={\r\n              <div align={'center'}>\r\n                <Button>Description</Button>\r\n              </div>\r\n            }>\r\n              <Modal.Header>Description</Modal.Header>\r\n              <Modal.Content>\r\n                <Modal.Description>\r\n                  {props.internship.description.split('\\n').map((item, key) =>\r\n                      <span key={key}>{item}<br/></span>)}\r\n                </Modal.Description>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                <Button primary>\r\n                  <Icon name='star'/>\r\n                  Add to Favorites\r\n                </Button>\r\n                <Button primary>\r\n                  Go to Listing <Icon name='chevron right'/>\r\n                </Button>\r\n              </Modal.Actions>\r\n            </Modal>\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          {props.internship.skills.map((skill) => (\r\n              hasSkill(skill)\r\n          ))}\r\n          {isRemote(props.internship.location.city)}\r\n        </Card.Content>\r\n        <Card.Content extra textAlign={'center'} style={{ paddingTop: '1rem' }}>\r\n          Posted: {formatDate(props.internship.posted)}\r\n        </Card.Content>\r\n        <Card.Content extra textAlign={'center'}>\r\n          <a href={props.internship.url}>\r\n            <Button color={'teal'} style={{ borderRadius: '10rem' }}>\r\n              Go to Listing: {siteName(props.internship.url)}\r\n            </Button>\r\n          </a>\r\n        </Card.Content>\r\n      </Card>\r\n  );\r\n}\r\n\r\nInternshipListingCard.propTypes = {\r\n  internship: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default InternshipListingCard;\r\n","import { Button, Grid, Icon, Label, Item, Header, Popup, Modal } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nfunction isRemote(remote) {\r\n  if (remote) {\r\n    return (\r\n        <Label circular style={{\r\n          backgroundColor: '#263763',\r\n          color: 'white',\r\n          margin: '0.2rem',\r\n        }}>\r\n          Remote\r\n        </Label>\r\n    );\r\n  }\r\n}\r\n\r\nfunction siteName(url) {\r\n  try {\r\n    if (url.includes('linkedin')) {\r\n      return 'LinkedIn';\r\n    }\r\n    if (url.includes('ziprecruiter')) {\r\n      return 'ZipRecruiter';\r\n    }\r\n    if (url.includes('monster')) {\r\n      return 'Monster';\r\n    }\r\n    if (url.includes('simplyhired')) {\r\n      return 'SimplyHired';\r\n    }\r\n    if (url.includes('internships')) {\r\n      return 'Chegg';\r\n    }\r\n    if (url.includes('youtern')) {\r\n      return 'Youtern';\r\n    }\r\n    if (url.includes('ihiretechnology')) {\r\n      return 'iHireTechnology';\r\n    }\r\n    if (url.includes('stackoverflow')) {\r\n      return 'iHireTechnology';\r\n    }\r\n    if (url.includes('glassdoor')) {\r\n      return 'Glassdoor';\r\n    }\r\n    if (url.includes('indeed')) {\r\n      return 'Indeed';\r\n    }\r\n    if (url.includes('angel')) {\r\n      return 'AngelList';\r\n    }\r\n    return 'NSF-REU';\r\n  } catch (e) {\r\n    return 'Unknown';\r\n\r\n  }\r\n}\r\n\r\nfunction hasSkill(skill) {\r\n  const studentSkills = ['react', 'software engineering'];\r\n\r\n  const has = {\r\n    margin: '0.2rem',\r\n    backgroundColor: '#5680E9',\r\n    color: 'white',\r\n  };\r\n  const notHave = {\r\n    margin: '0.2rem',\r\n    backgroundColor: 'rgb(244, 244, 244)',\r\n    color: '#8f8f8f',\r\n  };\r\n\r\n  if (studentSkills.includes(skill)) {\r\n    return (\r\n        <Label circular key={skill} style={has}>\r\n          {skill}\r\n        </Label>\r\n    );\r\n  }\r\n  return (\r\n      <Label circular key={skill} style={notHave}>\r\n        {skill}\r\n      </Label>\r\n  );\r\n}\r\n\r\nfunction formatDate(stringDate) {\r\n  const date = new Date(stringDate).toDateString();\r\n  if (date !== 'Invalid Date') {\r\n    return date;\r\n  }\r\n  return 'Unknown';\r\n\r\n}\r\n\r\nfunction changeBackground(e) {\r\n  e.currentTarget.style.backgroundColor = '#fafafa';\r\n  e.currentTarget.style.cursor = 'pointer';\r\n}\r\n\r\nfunction onLeave(e) {\r\n  e.currentTarget.style.backgroundColor = 'transparent';\r\n}\r\n\r\nfunction description(internshipDescription) {\r\n  try {\r\n    const noScriptDescript = internshipDescription.replace(/<script>(.*?)<\\/script>/gi, '');\r\n    return (\r\n         <span dangerouslySetInnerHTML={{ __html: noScriptDescript }}/>\r\n        // internshipDescription.split('\\n').map((item, key) => <span key={key}>{item}<br/></span>)\r\n    );\r\n  } catch (e) {\r\n    console.log('No description field.');\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction InternshipListingCard2(props) {\r\n\r\n  return (\r\n      <Item onMouseEnter={changeBackground} onMouseLeave={onLeave}\r\n            style={{ padding: '0rem 2rem 0rem 2rem' }}>\r\n        <Modal closeIcon trigger={\r\n          <Item.Content>\r\n            <Item.Header>\r\n              <a href={props.internship.url} target=\"_blank\" rel='noopener noreferrer'>\r\n                <Header as={'h3'} style={{ color: '#263763', paddingTop: '2rem' }}>\r\n                  {props.internship.position}\r\n                </Header>\r\n              </a>\r\n\r\n            </Item.Header>\r\n            <Item.Meta>\r\n              <Item.Meta>\r\n                <Grid doubling>\r\n                  <Grid.Row columns={1} style={{ paddingTop: '0.8rem' }}>\r\n                    <Grid.Column floated={'left'} style={{ paddingBottom: '0.3rem' }}>\r\n                      <p style={{ color: 'rgb(89, 119, 199)' }}>\r\n                        {props.internship.company}\r\n                      </p>\r\n                    </Grid.Column>\r\n                    <Grid.Column floated={'left'}>\r\n                      <Icon className='map marker alternate'/>\r\n                      <span>{props.internship.location.city}, {props.internship.location.state} {props.internship.location.zip} | {formatDate(props.internship.posted)}\r\n</span>\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n\r\n                </Grid>\r\n              </Item.Meta>\r\n            </Item.Meta>\r\n            <Item.Description style={{ paddingTop: '1rem', paddingBottom: '1rem' }}>\r\n              <div align={'left'}>\r\n                <Button size={'tiny'} style={{ backgroundColor: 'transparent', padding: '0rem' }}>\r\n                  From: {siteName(props.internship.url)}\r\n                </Button>\r\n              </div>\r\n\r\n            </Item.Description>\r\n            <Item.Extra>\r\n              {props.internship.skills.map((skill) => (\r\n                  hasSkill(skill)\r\n              ))}\r\n              {isRemote(props.internship.remote)}\r\n            </Item.Extra>\r\n            <Item.Extra style={{ paddingBottom: '2rem' }}>\r\n            </Item.Extra>\r\n          </Item.Content>\r\n        }>\r\n          <Modal.Header>Description</Modal.Header>\r\n          <Modal.Content>\r\n            <Modal.Description>\r\n              {/* <span dangerouslySetInnerHTML={{ __html: props.internship.description }}/> */}\r\n              {description(props.internship.description)}\r\n            </Modal.Description>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button style={{ backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n              <Icon name='star'/>\r\n              Add to Favorites\r\n            </Button>\r\n            <a href={props.internship.url} target=\"_blank\" rel='noopener noreferrer'>\r\n              <Button style={{ backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n                Go to Listing: {siteName(props.internship.url)}\r\n                <Icon name='chevron right'/>\r\n              </Button>\r\n            </a>\r\n          </Modal.Actions>\r\n        </Modal>\r\n        <Popup\r\n            content='Added to favorites!'\r\n            mouseLeaveDelay={200}\r\n            on='click'\r\n            trigger={\r\n              <Button style={{ backgroundColor: 'transparent' }}>\r\n                Add to favorites!\r\n              </Button>\r\n            }\r\n        />\r\n      </Item>\r\n  );\r\n}\r\n\r\nInternshipListingCard2.propTypes = {\r\n  internship: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default InternshipListingCard2;\r\n","import React from 'react';\r\nimport { Segment, Header, Dropdown, Label, Input, Form, Checkbox, Popup } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport InternshipsFilters from './InternshipFilters';\r\n\r\nfunction SearchInternshipFeature({ onChildClick, passedData, locationVal, companyVal, sortVal, searchQuery, skillsVal, isRemote }) {\r\n\r\n  const internships = new InternshipsFilters();\r\n  const data = internships.mergeData();\r\n\r\n  let locationChange = locationVal;\r\n  let companyChange = companyVal;\r\n  let sortChange = sortVal;\r\n  let searchQueryChange = searchQuery;\r\n  let skillChange = skillsVal;\r\n  let remoteCheck = isRemote;\r\n\r\n  const sortBy = [\r\n    { key: 'date', text: 'date', value: 'date' },\r\n    { key: 'internship', text: 'internship', value: 'internship' },\r\n    { key: 'company', text: 'company', value: 'company' },\r\n  ];\r\n\r\n  const location = internships.dropdownLocation(data);\r\n  const company = internships.dropdownCompany(data);\r\n\r\n  const setFilters = () => {\r\n    const remoteFilter = internships.isRemote(data, remoteCheck);\r\n    const searchFiltered = internships.filterBySearch(remoteFilter, searchQueryChange);\r\n    const skillsFiltered = internships.filterBySkills(searchFiltered, skillChange);\r\n    const locationFiltered = internships.filterByLocation(skillsFiltered, locationChange);\r\n    const companyFiltered = internships.filterByCompany(locationFiltered, companyChange);\r\n    const sorted = internships.sortedBy(companyFiltered, sortChange);\r\n    onChildClick(sorted, locationChange, companyChange, sortChange, searchQueryChange, skillChange, remoteCheck);\r\n    window.scrollTo({\r\n      top: 70,\r\n      left: 100,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    searchQueryChange = event.target.value;\r\n  };\r\n\r\n  const getRemote = () => {\r\n    if (remoteCheck) {\r\n      remoteCheck = false;\r\n    } else {\r\n      remoteCheck = true;\r\n    }\r\n    setFilters();\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setFilters();\r\n  };\r\n\r\n  const getLocation = (event, { value }) => {\r\n    locationChange = value;\r\n    setFilters();\r\n  };\r\n\r\n  const getCompany = (event, { value }) => {\r\n    companyChange = value;\r\n    setFilters();\r\n  };\r\n\r\n  const getSort = (event, { value }) => {\r\n    sortChange = value;\r\n    setFilters();\r\n  };\r\n\r\n  const getSkills = (event, { value }) => {\r\n    skillChange = value;\r\n    setFilters();\r\n  };\r\n\r\n  const sticky = {\r\n    position: '-webkit-sticky',\r\n    position: 'sticky',\r\n    top: '6.5rem',\r\n  };\r\n\r\n  const has = {\r\n    margin: '0.2rem',\r\n    backgroundColor: '#5680E9',\r\n    color: 'white',\r\n  };\r\n  const notHave = {\r\n    margin: '0.2rem',\r\n    backgroundColor: 'rgb(244, 244, 244)',\r\n    color: '#8f8f8f',\r\n  };\r\n\r\n  return (\r\n      <Segment style={sticky}>\r\n        <div style={{ paddingTop: '2rem' }}>\r\n          <Header>\r\n            <Header.Content>\r\n              Total results found: {internships.total(passedData)}\r\n            </Header.Content>\r\n          </Header>\r\n        </div>\r\n        <div style={{ paddingTop: '2rem' }}>\r\n          <Header>\r\n            <Header.Content>\r\n              Sort by {' '}\r\n              <Dropdown\r\n                  inline\r\n                  header='Sort by...'\r\n                  options={sortBy}\r\n                  defaultValue={sortBy[0].value}\r\n                  onChange={getSort}\r\n              />\r\n            </Header.Content>\r\n          </Header>\r\n        </div>\r\n        <div style={{ paddingTop: '2rem' }}>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Popup\r\n                trigger={<Input icon='search'\r\n                                iconPosition='left'\r\n                                placeholder='Search ...'\r\n                                onChange={handleSearchChange}\r\n                                fluid\r\n                />}\r\n                content='Press enter to search!'\r\n                on={'focus'}\r\n            />\r\n\r\n          </Form>\r\n          <div style={{ paddingTop: '2rem' }}>\r\n            <Header>Skills</Header>\r\n            <Dropdown\r\n                placeholder='Skills'\r\n                fluid\r\n                multiple\r\n                search\r\n                selection\r\n                options={internships.dropdownSkills()}\r\n                onChange={getSkills}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div style={{ paddingTop: '2rem' }}>\r\n          <Header>Location</Header>\r\n          <Dropdown placeholder='Location'\r\n                    onChange={getLocation}\r\n                    defaultValue={location[0].value}\r\n                    fluid selection options={internships.dropdownLocation(passedData)}\r\n                    search\r\n          />\r\n          <Checkbox style={{ paddingTop: '1rem' }} label='Remote'\r\n                    onClick={getRemote}/>\r\n        </div>\r\n\r\n        <div style={{ paddingTop: '2rem' }}>\r\n          <Header>Company</Header>\r\n          <Dropdown\r\n              placeholder='Select a company'\r\n              fluid selection options={internships.dropdownCompany(passedData)}\r\n              defaultValue={company[0].value}\r\n              onChange={getCompany}\r\n              search\r\n          />\r\n        </div>\r\n        <div style={{ paddingTop: '2rem', paddingBottom: '2rem' }} align={'center'}>\r\n          <Header>Key</Header>\r\n          <Label circular style={has}>\r\n            Have skill\r\n          </Label>\r\n          <Label circular style={notHave}>\r\n            Missing skill\r\n          </Label>\r\n        </div>\r\n      </Segment>\r\n  );\r\n}\r\n\r\nSearchInternshipFeature.propTypes = {\r\n  onChildClick: PropTypes.func.isRequired,\r\n  passedData: PropTypes.array.isRequired,\r\n  locationVal: PropTypes.string.isRequired,\r\n  companyVal: PropTypes.string.isRequired,\r\n  sortVal: PropTypes.string.isRequired,\r\n  searchQuery: PropTypes.string.isRequired,\r\n  skillsVal: PropTypes.array.isRequired,\r\n  isRemote: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default SearchInternshipFeature;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport _ from 'lodash';\r\nimport { Card, Container, Header, Icon, Grid, Pagination, Item } from 'semantic-ui-react';\r\nimport InternshipListingCard from './InternshipListingCard';\r\nimport InternshipListingCard2 from './InternshipListingCard2';\r\nimport SearchInternshipFeature from './SearchInternshipFeature';\r\nimport InternshipsFilters from './InternshipFilters';\r\n\r\nfunction InternshipListing() {\r\n\r\n  const internships = new InternshipsFilters();\r\n  const getInternshipData = internships.mergeData();\r\n\r\n  const [data, setData] = useState(getInternshipData);\r\n  const [paginatedData, setPaginatedData] = useState(getInternshipData.slice(0, 40));\r\n  const [location, setLocation] = useState('any');\r\n  const [company, setCompany] = useState('any');\r\n  const [sort, setSort] = useState('date');\r\n  const [search, setSearch] = useState('');\r\n  const [skills, setSkills] = useState([]);\r\n  const [remote, setRemote] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [height, setHeight] = useState(0);\r\n  const ref = useRef(null);\r\n\r\n  /* Passes data up from SearchInternshipFeature. SetPaginatedData allows data to be rendered\r\n  * for infinite scroll. */\r\n  function handleChildClick(passedData, locationVal, companyVal, sortVal, searchQueryVal, skillsVal, isRemote) {\r\n    setData(passedData);\r\n    setLocation(locationVal);\r\n    setCompany(companyVal);\r\n    setSort(sortVal);\r\n    setSearch(searchQueryVal);\r\n    setSkills(skillsVal);\r\n    setRemote(isRemote);\r\n    setPage(1);\r\n    setPaginatedData(passedData.slice(0, 40));\r\n  }\r\n\r\n  /* Grabs the height */\r\n  useEffect(() => {\r\n    setHeight(ref.current.clientHeight);\r\n  });\r\n\r\n  /* Infinite scrolling */\r\n  function handleScroll() {\r\n    window.onscroll = function () {\r\n      const scroll = window.innerHeight + window.pageYOffset;\r\n      // if we hit the bottom\r\n      if (scroll >= height - 500) {\r\n        // if there are still more items to be loaded\r\n        if (page <= Math.ceil(data.length / 40)) {\r\n          const newPage = page + 1;\r\n          setPage(newPage);\r\n          setPaginatedData(data.slice(0, newPage * 40));\r\n          // console.log('Current Page:', page);\r\n          // console.log('Total Pages:', Math.ceil(data.length / 40));\r\n          // console.log(paginatedData);\r\n          // console.log(\"you're at the bottom of the page\");\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /* Every single time we click a new page, it renders the new data set */\r\n  // const onChange = (e, pageInfo) => {\r\n  //   const page = pageInfo.activePage * 40;\r\n  //   setPaginatedData(data.slice(page - 40, page));\r\n  //   window.scrollTo({\r\n  //     top: 80,\r\n  //     left: 100,\r\n  //     behavior: 'smooth',\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n      <Container style={{ paddingTop: '5rem', marginLeft: '0.5rem', marginRight: '0.5rem' }}>\r\n        <Header as='h2' textAlign={'center'}\r\n                style={{ paddingBottom: '1rem', paddingTop: '3rem' }}>\r\n          <Header.Content>\r\n            <Icon name='graduation cap'/>\r\n            All Internships\r\n          </Header.Content>\r\n        </Header>\r\n        <Grid columns={'equal'} doubling stackable>\r\n          <Grid.Column width={4}>\r\n            <SearchInternshipFeature onChildClick={handleChildClick} passedData={data}\r\n                                     companyVal={company} locationVal={location} sortVal={sort}\r\n                                     searchQuery={search} skillsVal={skills} isRemote={remote}/>\r\n          </Grid.Column>\r\n\r\n          <Grid.Column>\r\n            {/*<Card.Group itemsPerRow={3} doubling stackable>*/}\r\n            {/*  {_.map(paginatedData, (internship, index) => <InternshipListingCard*/}\r\n            {/*      internship={internship} key={index}/>)}*/}\r\n            {/*</Card.Group>*/}\r\n\r\n            <div onScroll={handleScroll()} ref={ref}>\r\n              <Item.Group divided relaxed style={{ backgroundColor: 'white' }}>\r\n                {_.map(paginatedData, (internship, index) => <InternshipListingCard2\r\n                    internship={internship} key={index}/>)}\r\n              </Item.Group>\r\n            </div>\r\n\r\n          </Grid.Column>\r\n        </Grid>\r\n        <div align={'center'} style={{ paddingTop: '5rem', paddingBottom: '5rem' }}>\r\n          {/*<Pagination*/}\r\n          {/*    defaultActivePage={1}*/}\r\n          {/*    onPageChange={onChange}*/}\r\n          {/*    totalPages={Math.ceil(data.length / 40)}*/}\r\n          {/*/>*/}\r\n        </div>\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default InternshipListing;\r\n","import React from 'react';\r\nimport { Container, Table, Header } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass StatisticsRow extends React.Component {\r\n  render() {\r\n    const total = this.props.statistics.entries;\r\n    const position = ((this.props.statistics.position / total) * 100).toString().substring(0, 5);\r\n    const company = ((this.props.statistics.company / total) * 100).toString().substring(0, 5);\r\n    const contact = ((this.props.statistics.contact / total) * 100).toString().substring(0, 5);\r\n    const location = ((this.props.statistics.location / total) * 100).toString().substring(0, 5);\r\n    const posted = ((this.props.statistics.posted / total) * 100).toString().substring(0, 5);\r\n    const due = ((this.props.statistics.due / total) * 100).toString().substring(0, 5);\r\n    const start = ((this.props.statistics.start / total) * 100).toString().substring(0, 5);\r\n    const end = ((this.props.statistics.end / total) * 100).toString().substring(0, 5);\r\n    const compensation = ((this.props.statistics.compensation / total) * 100).toString().substring(0, 5);\r\n    const qualifications = ((this.props.statistics.qualifications / total) * 100).toString().substring(0, 5);\r\n    const skills = ((this.props.statistics.skills / total) * 100).toString().substring(0, 5);\r\n    const description = ((this.props.statistics.description / total) * 100).toString().substring(0, 5);\r\n\r\n    function lastRow(site) {\r\n      if (site === 'Total') {\r\n        return (\r\n            <Table.Row>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {site}\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {total}\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {position}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {company}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {contact}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {location}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {posted}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {due}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {start}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {end}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {compensation}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {qualifications}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {skills}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {description}%\r\n                </Header>\r\n              </Table.Cell>\r\n            </Table.Row>\r\n\r\n        );\r\n      } else {\r\n        return (\r\n            <Table.Row>\r\n              <Table.Cell>{site}</Table.Cell>\r\n              <Table.Cell>{total}</Table.Cell>\r\n              <Table.Cell>{position}%</Table.Cell>\r\n              <Table.Cell>{company}%</Table.Cell>\r\n              <Table.Cell>{contact}%</Table.Cell>\r\n              <Table.Cell>{location}%</Table.Cell>\r\n              <Table.Cell>{posted}%</Table.Cell>\r\n              <Table.Cell>{due}%</Table.Cell>\r\n              <Table.Cell>{start}%</Table.Cell>\r\n              <Table.Cell>{end}%</Table.Cell>\r\n              <Table.Cell>{compensation}%</Table.Cell>\r\n              <Table.Cell>{qualifications}%</Table.Cell>\r\n              <Table.Cell>{skills}%</Table.Cell>\r\n              <Table.Cell>{description}%</Table.Cell>\r\n            </Table.Row>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n        <>\r\n          {lastRow(this.props.statistics.site)}\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nStatisticsRow.propTypes = {\r\n  statistics: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default StatisticsRow;\r\n","import React from 'react';\r\nimport { Container, Table, Header } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport statisticData from './data/statistics.data';\r\nimport StatisticsRow from './StatisticsRow';\r\n\r\n/** A simple static component to render some text for the Statistics page. */\r\nclass Statistics extends React.Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <Container style={{ marginTop: '10rem', marginBottom: '4rem' }}>\r\n            <Header textAlign={'center'}\r\n                    as={'h2'}\r\n                    style={{ marginBottom: '2rem' }}>\r\n              Statistics\r\n            </Header>\r\n            <Table attached='top' celled>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Site</Table.HeaderCell>\r\n                  <Table.HeaderCell>Total</Table.HeaderCell>\r\n                  <Table.HeaderCell>Position</Table.HeaderCell>\r\n                  <Table.HeaderCell>Company</Table.HeaderCell>\r\n                  <Table.HeaderCell>Contact</Table.HeaderCell>\r\n                  <Table.HeaderCell>Location</Table.HeaderCell>\r\n                  <Table.HeaderCell>Posted</Table.HeaderCell>\r\n                  <Table.HeaderCell>Due</Table.HeaderCell>\r\n                  <Table.HeaderCell>Start</Table.HeaderCell>\r\n                  <Table.HeaderCell>End</Table.HeaderCell>\r\n                  <Table.HeaderCell>Compensation</Table.HeaderCell>\r\n                  <Table.HeaderCell>Qualifications</Table.HeaderCell>\r\n                  <Table.HeaderCell>Skills</Table.HeaderCell>\r\n                  <Table.HeaderCell>Description</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                {_.map((statisticData), (statistics, index) => <StatisticsRow\r\n                    statistics={statistics} key={index}/>)}\r\n              </Table.Body>\r\n            </Table>\r\n          </Container>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport { Container, Menu, Image, Icon, Dropdown } from 'semantic-ui-react';\r\nimport { Link, withRouter, NavLink } from 'react-router-dom';\r\n\r\n/** A simple static component to render some text for the NavBar page. */\r\nclass NavBar extends React.Component {\r\n  render() {\r\n    const linkStyle = {\r\n      color: '#263763',\r\n    };\r\n    return (\r\n        <Container>\r\n          <Menu className={'top meni fixed borderless'}\r\n                style={{ backgroundColor: '#C1C8E4', border: 0, boxShadow: '0 0 BLACK' }}>\r\n            <Menu.Item>\r\n              <a href={'/internbit'}>\r\n                <Image src={'images/logo.png'} size={'small'}/>\r\n              </a>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Link to='/internbit/all-internships' style={linkStyle}>All Internships</Link>\r\n            </Menu.Item>\r\n            <Menu.Item>Recommended Internships</Menu.Item>\r\n            <Menu.Item>\r\n              <Link to=\"/internbit/statistics\" style={linkStyle}>Statistics</Link>\r\n            </Menu.Item>\r\n            <Menu.Item position='right'>\r\n              <Dropdown text=\"John Foo\" pointing=\"top right\" icon={'user'}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item icon=\"user\" text=\"Profile\" as={NavLink} exact to={'/internbit/profile'} />\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n              {/*<Icon className='user circle'/>Profile*/}\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.css';\r\nimport './index.css';\r\n// import { Router } from '@reach/router';\r\nimport Landing from './Landing';\r\nimport InternshipListing from './InternshipListing';\r\nimport Statistics from './Statistcs';\r\nimport NavBar from './NavBar';\r\n\r\n/**\r\n * The top level layout for the site.\r\n */\r\nconst App = () => (\r\n    <Router>\r\n      <NavBar/>\r\n      <Switch>\r\n        <Route exact path={'/internbit'} component={Landing}/>\r\n        <Route exact path={'/internbit/all-internships'} component={InternshipListing}/>\r\n        <Route exact path={'/internbit/statistics'} component={Statistics}/>\r\n      </Switch>\r\n    </Router>\r\n);\r\n\r\nrender(<App/>, document.getElementById('root'));\r\n\r\n// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import 'semantic-ui-css/semantic.css';\r\n// import './index.css';\r\n// import InternshipListing from './InternshipListing';\r\n// import Statistics from './Statistcs';\r\n// import NavBar from './NavBar';\r\n//\r\n// /**\r\n//  * The top level layout for the site.\r\n//  */\r\n//\r\n// ReactDOM.render(\r\n//     <React.StrictMode>\r\n//       <NavBar/>\r\n//       <InternshipListing/>\r\n//       <Statistics/>\r\n//     </React.StrictMode>,\r\n//   // eslint-disable-next-line no-undef\r\n//   document.getElementById('root'),\r\n// );\r\n"],"sourceRoot":""}