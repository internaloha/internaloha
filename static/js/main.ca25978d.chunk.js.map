{"version":3,"sources":["InternshipListingCard.jsx","InternshipFilters.jsx","RecommendationScript.js","SearchInternshipFeature.jsx","InternshipListing.jsx","StatisticsRow.jsx","StatisticsChart.jsx","Statistics.jsx","NavBar.jsx","index.js"],"names":["formatDate","stringDate","date","moment","fromNow","InternshipListingCard","props","Card","className","Content","Header","textAlign","href","internship","url","target","rel","style","color","position","Meta","paddingTop","Grid","doubling","Row","columns","Column","floated","Icon","company","location","city","state","zip","posted","lastScraped","Description","overflow","maxHeight","internshipDescription","noScriptDescript","replace","dangerouslySetInnerHTML","__html","e","description","extra","skills","map","skill","selectedSkills","includes","Label","circular","key","margin","backgroundColor","hasSkill","remote","isRemote","Button","borderRadius","siteName","Popup","content","mouseLeaveDelay","on","trigger","marginTop","size","fontSize","Modal","closeIcon","Form","Field","Radio","label","name","value","checked","TextArea","placeholder","Actions","InternshipsFilters","total","data","length","_","concat","iHire","simplyData","internships","monsterData","linkedinData","youternData","glassData","indeedData","idealist","acm","aexpress","apple","zipData","ciscoData","stackOverflow","angelList","hawaiislack","companies","categories","flattenDeep","uniq","sort","number","groupBy","info","i","push","text","num","unshift","locationAmount","flattenSkills","uniqueSkills","orderBy","tags","exists","counter","list","toString","toLowerCase","searchQuery","input","arrLocations","filter","dropdownCareerInterest","sortedCollection","sortBy","career_interest_to_skill","o","career","join","Dropdown","Item","marginLeft","basic","inverted","SearchInternshipFeature","onChildClick","locationVal","companyVal","sortVal","skillsVal","careerVal","mergeData","locationChange","companyChange","sortChange","searchQueryChange","skillChange","remoteCheck","careerChange","setFilters","remoteFilter","searchFiltered","filterBySearch","companyFiltered","filterByCompany","sorted","sortedBy","recommendedData","careers","newState","careerSkills","k","j","totalSkills","foundTag","recommendation","console","log","window","scrollTo","top","left","behavior","getSort","event","Segment","width","onChange","onSubmit","fluid","multiple","selection","clearable","control","options","children","search","dropdownSkills","flexGrow","dropdownLocation","Checkbox","onClick","paddingBottom","paddingRight","lineHeight","display","as","InternshipListing","getInternshipData","useState","setData","paginatedData","setPaginatedData","setLocation","setCompany","setSort","setSearch","setSkills","setRemote","page","setPage","height","setHeight","setCareer","ref","useRef","totalListing","useEffect","current","clientHeight","Container","marginRight","stackable","maxWidth","marginBottom","align","getData","to","exact","passedData","searchQueryVal","slice","paddingLeft","onScroll","onscroll","innerHeight","pageYOffset","Math","ceil","newPage","Group","centered","index","StatisticsRow","site","this","statistics","substring","contact","due","start","end","compensation","qualifications","Table","Cell","Date","toDateString","React","Component","StatisticsChart","chart","Highcharts","title","credits","enabled","tooltip","shared","crosshairs","yAxis","allowDecimals","xAxis","accessibility","rangeDescription","labels","formatter","toLocaleString","dateStyle","legend","layout","verticalAlign","plotOptions","series","connectorAllowed","responsive","rules","condition","chartOptions","borderWidth","setState","id","Statistics","lowercaseFirstLetter","textContent","statisticData","string","charAt","statisticsCSV","arr","siteInfo","Set","dates","showErrorIcon","oldNumber","currentNum","prevNum","icon","Tab","menu","vertical","grid","paneWidth","tabWidth","panes","chartData","allData","keys","Object","types","arrays","obj","formatInfo","menuItem","render","Pane","attached","celled","sortable","HeaderCell","Body","NavBar","Menu","border","boxShadow","Image","src","withRouter","App","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.ca25978d.chunk.js","sourcesContent":["import {\n  Button,\n  Card,\n  Grid,\n  Icon,\n  Label,\n  Modal,\n  Popup,\n  Form,\n  Radio,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport React from 'react';\n\n// eslint-disable-next-line consistent-return\nfunction isRemote(remote) {\n  if (remote) {\n    return (\n        <Label circular style={{\n          backgroundColor: '#263763',\n          color: 'white',\n          margin: '0.2rem',\n        }}>\n          Remote\n        </Label>\n    );\n  }\n}\n\nfunction hasSkill(skill, selectedSkills) {\n  const studentSkills = selectedSkills;\n  const has = {\n    margin: '0.2rem',\n    backgroundColor: '#5680E9',\n    color: 'white',\n  };\n  const notHave = {\n    margin: '0.2rem',\n    backgroundColor: 'rgb(244, 244, 244)',\n    color: '#8f8f8f',\n  };\n  if (studentSkills.includes(skill)) {\n    return (\n        <Label circular key={skill} style={has}>\n          {skill}\n        </Label>\n    );\n  }\n  return (\n      <Label circular key={skill} style={notHave}>\n        {skill}\n      </Label>\n  );\n}\n\nfunction formatDate(stringDate) {\n  if (typeof stringDate === 'undefined') {\n    return 'N/A';\n  }\n  const date = moment(stringDate).fromNow();\n  if (date !== 'Invalid Date') {\n    return date;\n  }\n  return 'Unknown';\n}\n\nfunction description(internshipDescription) {\n  try {\n    const noScriptDescript = internshipDescription.replace(/<script>(.*?)<\\/script>/gi, '');\n    return (\n        <span dangerouslySetInnerHTML={{ __html: noScriptDescript }}/>\n        // internshipDescription.split('\\n').map((item, key) => <span key={key}>{item}<br/></span>)\n    );\n  } catch (e) {\n    return '';\n  }\n}\n\nfunction siteName(url) {\n  try {\n    if (url.includes('linkedin')) {\n      return 'LinkedIn';\n    }\n    if (url.includes('ziprecruiter')) {\n      return 'ZipRecruiter';\n    }\n    if (url.includes('monster')) {\n      return 'Monster';\n    }\n    if (url.includes('simplyhired')) {\n      return 'SimplyHired';\n    }\n    if (url.includes('internships')) {\n      return 'Chegg';\n    }\n    if (url.includes('youtern')) {\n      return 'Youtern';\n    }\n    if (url.includes('ihiretechnology')) {\n      return 'iHireTechnology';\n    }\n    if (url.includes('stackoverflow')) {\n      return 'iHireTechnology';\n    }\n    if (url.includes('glassdoor')) {\n      return 'Glassdoor';\n    }\n    if (url.includes('indeed')) {\n      return 'Indeed';\n    }\n    if (url.includes('angel')) {\n      return 'AngelList';\n    }\n    if (url.includes('acm')) {\n      return 'ACM';\n    }\n    if (url.includes('apple')) {\n      return 'Apple';\n    }\n    if (url.includes('americanexpress')) {\n      return 'American Express';\n    }\n    if (url.includes('coolworks')) {\n      return 'Coolworks';\n    }\n    if (url.includes('slack')) {\n      return 'Hawaii Slack';\n    }\n    return 'NSF-REU';\n  } catch (e) {\n    return 'Unknown';\n  }\n}\n\nfunction InternshipListingCard(props) {\n  return (\n      <Card className={'listings'}>\n        <Card.Content>\n          <Card.Header textAlign={'center'}>\n            <a href={props.internship.url} target='_blank' rel=\"noopener noreferrer\">\n              <p style={{ color: '#263763' }}>\n                {props.internship.position}\n              </p>\n            </a>\n          </Card.Header>\n          <Card.Meta style={{ paddingTop: '0.6rem' }}>\n            <Grid doubling>\n              <Grid.Row columns={1}>\n                <Grid.Column floated={'left'}>\n                  <p>\n                    <Icon className='building'/>\n                    <span>{props.internship.company} </span>\n                  </p>\n                </Grid.Column>\n                <Grid.Column floated={'left'}>\n                  <Icon className='map marker alternate'/>\n                  <span>Internship Location: {props.internship.location.city}, {props.internship.location.state} {props.internship.location.zip}</span>\n                </Grid.Column>\n                <Grid.Column floated={'left'}>\n                  <Icon className='calendar alternate'/>\n                  <span>Posted: {formatDate(props.internship.posted)}</span>\n                </Grid.Column>\n                <Grid.Column floated={'left'}>\n                  <Icon className='calendar alternate'/>\n                  <span>Last Updated: {formatDate(props.internship.lastScraped)}</span>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Card.Meta>\n          <Card.Description style={{ paddingTop: '1rem' }}>\n            <div style={{ overflow: 'auto', maxHeight: '250px' }}>\n              {description(props.internship.description)}\n            </div>\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          {props.internship.skills.map((skill) => (\n              hasSkill(skill, props.selectedSkills)))}\n          {isRemote(props.internship.remote)}\n        </Card.Content>\n        <Card.Content extra textAlign={'center'}>\n          <a target='_blank' rel=\"noopener noreferrer\" href={props.internship.url}>\n            <Button style={{ borderRadius: '10rem' }}>\n              See Full Listing: {siteName(props.internship.url)}\n            </Button>\n          </a>\n          <div>\n            <Popup\n                content='Added to favorites!'\n                mouseLeaveDelay={200}\n                on='click'\n                trigger={\n                  <button className=\"ui icon button\" style={{ marginTop: '1em', size: '100%', maxHeight: '50px', backgroundColor: 'transparent' }}>\n                    <i className=\"heart icon\" style={{ fontSize: '100%' }}/>\n                  </button>\n                }\n            />\n            <Modal closeIcon trigger={\n              <button className=\"ui icon button\" style={{ marginTop: '1em', size: '100%', maxHeight: '50px', backgroundColor: 'transparent' }}>\n                <i className=\"exclamation triangle icon\" style={{ fontSize: '100%' }}/>\n              </button>\n            }>\n              <Modal.Header>Report a Problem</Modal.Header>\n              <Modal.Content>\n                <Modal.Description>\n                  <Form>\n                    <Form.Field>\n                      <Radio\n                          label='Broken Link'\n                          name='radioGroup'\n                          value='this'\n                          checked={'this'}\n                      />\n                    </Form.Field>\n                    <Form.Field>\n                      <Radio\n                          label='Missing Data Fields'\n                          name='radioGroup'\n                          value='that'\n                          checked={'that'}\n                      />\n                    </Form.Field>\n                    <Form.TextArea label='Other' placeholder='Explain the error here. Feel free to provide screenshots or links.' />\n                  </Form>\n                </Modal.Description>\n              </Modal.Content>\n              <Modal.Actions>\n                <Button style={{ backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\n                  Report\n                </Button>\n              </Modal.Actions>\n            </Modal>\n          </div>\n        </Card.Content>\n      </Card>\n  );\n}\n\nInternshipListingCard.propTypes = {\n  internship: PropTypes.object.isRequired,\n  selectedSkills: PropTypes.object.isRequired,\n};\n\nexport default InternshipListingCard;\n","import _ from 'lodash';\nimport linkedinData from './data/linkedin.parsed.data';\nimport simplyData from './data/simplyHired.parsed.data';\nimport zipData from './data/ziprecruiter.parsed.data';\nimport monsterData from './data/monster.parsed.data';\nimport youternData from './data/youtern.parsed.data';\nimport iHire from './data/iHireTech.parsed.data';\nimport glassData from './data/glassdoor.parsed.data.json';\nimport indeedData from './data/indeed.parsed.data';\nimport apple from './data/apple.parsed.data';\nimport aexpress from './data/aexpress.parsed.data';\nimport acm from './data/acm.parsed.data';\nimport idealist from './data/idealist.parsed.data';\nimport internships from './data/internships.parsed.data.json';\nimport ciscoData from './data/cisco.parsed.data.json';\nimport stackOverflow from './data/stackoverflow.parsed.data.json';\nimport angelList from './data/angellist.parsed.data.json';\nimport hawaiislack from './data/hawaiislack.parsed.data.json';\n\nclass InternshipsFilters {\n  /* Returns total number of internship listing */\n  total = (data) => data.length;\n\n  lastScraped = (data) => data[0].lastScraped;\n\n  mergeData() {\n    let data = [];\n    data = _.concat(data, iHire);\n    data = _.concat(data, simplyData);\n    data = _.concat(data, internships);\n    data = _.concat(data, monsterData);\n    data = _.concat(data, linkedinData);\n    data = _.concat(data, youternData);\n    data = _.concat(data, glassData);\n    data = _.concat(data, indeedData);\n    data = _.concat(data, idealist);\n    data = _.concat(data, acm);\n    data = _.concat(data, aexpress);\n    data = _.concat(data, apple);\n    data = _.concat(data, zipData);\n    data = _.concat(data, ciscoData);\n    data = _.concat(data, stackOverflow);\n    data = _.concat(data, angelList);\n    data = _.concat(data, hawaiislack);\n    return data;\n  }\n\n  getData(name) {\n    let data = [];\n    if (name === 'iHire') {\n      data = _.concat(data, iHire);\n    }\n    if (name === 'SimplyHired') {\n      data = _.concat(data, simplyData);\n    }\n    if (name === 'Chegg') {\n      data = _.concat(data, internships);\n    }\n    if (name === 'Monster') {\n      data = _.concat(data, monsterData);\n    }\n    if (name === 'LinkedIn') {\n      data = _.concat(data, linkedinData);\n    }\n    if (name === 'Youtern') {\n      data = _.concat(data, youternData);\n    }\n    if (name === 'Glassdoor') {\n      data = _.concat(data, glassData);\n    }\n    if (name === 'Indeed') {\n      data = _.concat(data, indeedData);\n    }\n    if (name === 'Idealist') {\n      data = _.concat(data, idealist);\n    }\n    if (name === 'ACM') {\n      data = _.concat(data, acm);\n    }\n    if (name === 'AExpress') {\n      data = _.concat(data, aexpress);\n    }\n    if (name === 'Apple') {\n      data = _.concat(data, apple);\n    }\n    if (name === 'ZipRecruiter') {\n      data = _.concat(data, zipData);\n    }\n    if (name === 'Cisco') {\n      data = _.concat(data, ciscoData);\n    }\n    if (name === 'StackOverflow') {\n      data = _.concat(data, stackOverflow);\n    }\n    if (name === 'AngelList') {\n      data = _.concat(data, angelList);\n    }\n    if (name === 'HawaiiSlack') {\n      data = _.concat(data, hawaiislack);\n    }\n    return data;\n  }\n\n  /* Returns array of companies for us to be able to pass into semantic ui's dropdown. Format:\n  * key: unique key of the company\n  * text: Text that shows up in dropdown\n  * value: value used to search\n  * num: the number of internships with said company */\n  dropdownCompany(data) {\n    let companies = _.map(data, 'company');\n    const categories = _.flattenDeep(companies);\n    companies = _.uniq(categories).sort();\n    const number = _.groupBy(data, 'company');\n    const info = [];\n    for (let i = 0; i < companies.length; i++) {\n      info.push({\n        key: companies[i],\n        text: `${companies[i]} (${number[companies[i]].length})`,\n        value: companies[i],\n        num: number[companies[i]].length,\n      });\n    }\n    // Adding any parameter to front of array\n    info.unshift({\n      key: 'any',\n      text: 'Any',\n      value: 'any',\n    });\n    return info;\n  }\n\n  /* Returns array of companies for us to be able to pass into semantic ui's dropdown. Format:\n * key: unique key of the company\n * text: Text that shows up in dropdown\n * value: value used to search\n * num: the number of internships with said company */\n  dropdownLocation(data) {\n    let location = _.map(data, 'location.state');\n    const categories = _.flattenDeep(location);\n    location = _.uniq(categories).sort();\n    const number = _.groupBy(data, 'location.state');\n    const info = [];\n    for (let i = 0; i < location.length; i++) {\n      const locationAmount = number[location[i]].length;\n      info.push({\n        key: location[i],\n        text: `${location[i]} (${locationAmount})`,\n        value: location[i],\n        num: number[location[i]].length,\n      });\n    }\n    return info;\n  }\n\n  /* Returns array of skills for us to be able to pass into semantic ui's dropdown. Format:\n* key: unique key of the skill\n* text: Text that shows up in dropdown\n* value: value used to search\n* num: the number of internships with the associated skills */\n  dropdownSkills(data) {\n    const skills = _.map(data, 'skills');\n    const flattenSkills = _.flattenDeep(skills);\n    const uniqueSkills = _.uniq(flattenSkills).sort();\n    const number = _.groupBy(flattenSkills);\n    const info = [];\n    for (let i = 0; i < uniqueSkills.length; i++) {\n      info.push({\n        key: uniqueSkills[i],\n        text: `${uniqueSkills[i]} (${number[uniqueSkills[i]].length})`,\n        value: uniqueSkills[i],\n        num: number[uniqueSkills[i]].length,\n      });\n    }\n    return info;\n  }\n\n  /* Sorts list by given parameters */\n  sortedBy(data, value) {\n    if (value === 'posted') {\n      return _.orderBy(data, [({ posted }) => posted || ''], ['desc']);\n    }\n    if (value === 'company') {\n      return _.orderBy(data, ['company'], ['asc']);\n    }\n    if (value === 'internship') {\n      return _.orderBy(data, ['position'], ['asc']);\n    }\n    return _.orderBy(data, [({ posted }) => posted || ''], ['desc']);\n  }\n\n  /* Returns a list based on skill/tags inputs */\n  filterBySkills(data, tags) {\n    if (tags.length === 0) {\n      return data;\n    }\n    const skills = [];\n    let exists = false;\n    let counter = 0;\n    for (let i = 0; i < data.length; i++) {\n      // if any of the tags exist in data set, push it to skills and go to next\n      while (counter < tags.length && exists === false) {\n        if (data[i].skills.includes(tags[counter])) {\n          skills.push(data[i]);\n          exists = true;\n        }\n        counter++;\n      }\n      counter = 0;\n      exists = false;\n    }\n    return skills;\n  }\n\n  /* Returns a sorted list by company name */\n  filterByCompany(data, company) {\n    if (company === 'any' || company.length === 0) {\n      return data;\n    }\n    const list = [];\n    for (let i = 0; i < data.length; i++) {\n      const companies = data[i].company;\n      const lowercase = companies.toString().toLowerCase();\n      if (lowercase.includes(company.toString().toLowerCase())) {\n        list.push(data[i]);\n      }\n    }\n    return list;\n  }\n\n  /* Returns a list based on search query */\n  filterBySearch(data, searchQuery) {\n    if (searchQuery.length === 0) {\n      return data;\n    }\n    const list = [];\n    for (let i = 0; i < data.length; i++) {\n      const position = data[i].position;\n      const lowercase = position.toString().toLowerCase();\n      if (lowercase.includes(searchQuery.toString().toLowerCase())) {\n        list.push(data[i]);\n      }\n    }\n    return list;\n  }\n\n  /* Returns a sorted list by location */\n  filterByLocation(data, input) {\n    if (input.length === 0) {\n      return data;\n    }\n    let arrLocations = [];\n    for (let i = 0; i < input.length; i++) {\n      arrLocations = arrLocations.concat(_.filter(data, ['location.state', input[i]]));\n    }\n    return arrLocations;\n  }\n\n  isRemote(data, value) {\n    if (value === false) {\n      return data;\n    }\n     return _.filter(data, ['remote', true]);\n  }\n}\n\nexport default InternshipsFilters;\n","import natural from 'natural';\nimport React from 'react';\nimport _ from 'lodash';\nimport {\n  Popup,\n  Dropdown,\n} from 'semantic-ui-react';\nimport career_interest_to_skill from './career_interest_to_skill';\n\nfunction test(data) {\n  const TfIdf = natural.TfIdf;\n  const tfidf = new TfIdf();\n\n  for (let i = 0; i < data.length; i++) {\n    tfidf.addDocument(data[i].description);\n  }\n\n  const tfidfData = [];\n\n  // tfidf.addDocument('this document is about node.');\n  // tfidf.addDocument('this document is about ruby.');\n  // tfidf.addDocument('this document is about ruby and node.');\n  // tfidf.addDocument('this document is about node. it has node examples');\n\n  console.log('javascript full-stack css hmtl --------------------------------');\n\n  tfidf.tfidfs('javascript full-stack css hmtl ', function (i, measure) {\n    //  console.log('document #' + i + ' is ' + measure);\n    if (measure > 6) {\n      console.log(`document #${i} is ${measure}`);\n      tfidfData.push(data[i]);\n    }\n  });\n\n  // console.log(tfidfData);\n  return tfidfData;\n\n  // console.log('ruby --------------------------------');\n  // tfidf.tfidfs('ruby', function (i, measure) {\n  //   console.log('document #' + i + ' is ' + measure);\n  // });\n}\n\nfunction dropdownCareerInterest() {\n\n  const sortedCollection = _.sortBy(career_interest_to_skill, [function (o) { return o.career; }]);\n\n  const info = [];\n  for (let i = 0; i < sortedCollection.length; i++) {\n    const skills = sortedCollection[i].skills.join(', ');\n    info.push({\n      key: sortedCollection[i].career,\n      text: sortedCollection[i].career,\n      value: sortedCollection[i].career,\n      content: (\n          <Popup content={`Associated Skills: ${skills}`}\n                 trigger={<Dropdown.Item>\n            {sortedCollection[i].career}</Dropdown.Item>}\n                 style={{ marginLeft: '12%' }}\n                 position={'right center'}\n                 basic inverted\n          />\n      ),\n    });\n  }\n  return info;\n}\n\nfunction recommendation(tags, careers, data, location) {\n\n  if (tags.length === 0 && careers.length === 0) {\n    if (location.length !== 0) {\n      let arrLocations = [];\n      for (let i = 0; i < location.length; i++) {\n        const newState = _.filter(data, ['location.state', location[i]]);\n        arrLocations = arrLocations.concat(newState);\n      }\n      return arrLocations;\n    }\n    return data;\n\n  }\n\n  const skills = [];\n\n  let careerSkills = [];\n  for (let i = 0; i < career_interest_to_skill.length; i++) {\n    for (let k = 0; k < careers.length; k++) {\n      if (careers[k] === career_interest_to_skill[i].career) {\n        for (let j = 0; j < career_interest_to_skill[i].skills.length; j++) {\n          careerSkills.push(career_interest_to_skill[i].skills[j]);\n        }\n      }\n    }\n  }\n\n  careerSkills = _.uniq(careerSkills);\n\n  // const lowerCaseTags = [];\n\n  // for (let i = 0; i < tags.length; i++) {\n  //   lowerCaseTags.push(tags[i].toString().toLowerCase());\n  // }\n\n  const totalSkills = _.uniq(careerSkills.concat(tags));\n\n  // console.log(totalSkills);\n\n  for (let i = 0; i < data.length; i++) {\n    let foundTag = false;\n    let num = 0;\n    let total = 0;\n    for (let j = 0; j < data[i].skills.length; j++) {\n      for (let k = 0; k < totalSkills.length; k++) {\n        if (data[i].skills[j].includes(totalSkills[k])) {\n          num++;\n          foundTag = true;\n        }\n      }\n      total = data[i].skills.length;\n    }\n    if (foundTag === true) {\n\n      // eslint-disable-next-line no-param-reassign\n      data[i].recommendation = num / total;\n      skills.push(data[i]);\n    }\n  }\n\n  const sorted = _.orderBy(skills, ['recommendation'], ['desc']);\n\n  // console.log(sorted);\n\n// for (let i = 0; i < data.length; i++) {\n//   // if any of the tags exist in data set, push it to skills and go to next\n//   while (counter < totalSkills.length && exists === false) {\n//     if (data[i].skills.includes(totalSkills[counter])) {\n//       skills.push(data[i]);\n//       exists = true;\n//     }\n//     counter++;\n//   }\n//   counter = 0;\n//   exists = false;\n// }\n// console.log(skills);\n  console.log(location);\n\n  if (location.length === 0) {\n    return sorted;\n  }\n\n  // if (location.length === 1) {\n  //   return _.filter(sorted, ['location.state', location]);\n  // } else {\n  let arrLocations = [];\n  for (let i = 0; i < location.length; i++) {\n    arrLocations = arrLocations.concat(_.filter(sorted, ['location.state', location[i]]));\n  }\n  return arrLocations;\n  // }\n  //\n  // console.log(sorted);\n  // console.log(_.filter(sorted, ['location.state', location]));\n  // return _.filter(sorted, ['location.state', location]);\n\n}\n\nfunction isRemoteFunc(data, value) {\n  if (value === false) {\n    return data;\n  }\n  console.log(_.filter(data, ['remote', true]));\n  return _.filter(data, ['remote', true]);\n}\n\nexport { recommendation, dropdownCareerInterest, test, isRemoteFunc };\n","import React from 'react';\nimport {\n  Segment,\n  Header,\n  Dropdown,\n  Label,\n  Form,\n  Checkbox,\n  Grid,\n} from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport InternshipsFilters from './InternshipFilters';\nimport { dropdownCareerInterest, recommendation } from './RecommendationScript';\n\nfunction SearchInternshipFeature({\n                                   onChildClick,\n                                   locationVal,\n                                   companyVal,\n                                   sortVal,\n                                   searchQuery,\n                                   skillsVal,\n                                   isRemote,\n                                   careerVal,\n                                 }) {\n  const internships = new InternshipsFilters();\n  const data = internships.mergeData();\n  let locationChange = locationVal;\n  const companyChange = companyVal;\n  let sortChange = sortVal;\n  const searchQueryChange = searchQuery;\n  let skillChange = skillsVal;\n  let remoteCheck = isRemote;\n  let careerChange = careerVal;\n  const sortBy = [\n    { key: 'posted', text: 'Posted Date', value: 'posted' },\n    { key: 'internship', text: 'Internship Title', value: 'internship' },\n    { key: 'company', text: 'Company', value: 'company' },\n  ];\n  const setFilters = () => {\n    const remoteFilter = internships.isRemote(data, remoteCheck);\n    const searchFiltered = internships.filterBySearch(remoteFilter, searchQueryChange);\n    const companyFiltered = internships.filterByCompany(searchFiltered, companyChange);\n    const sorted = internships.sortedBy(companyFiltered, sortChange);\n    const recommendedData = recommendation(skillChange, careerChange, sorted, locationChange);\n    onChildClick(recommendedData, locationChange, companyChange, sortChange, searchQueryChange, skillChange, remoteCheck, careerChange);\n    window.scrollTo({\n      top: 30,\n      left: 100,\n      behavior: 'smooth',\n    });\n  };\n  const getRemote = () => {\n    remoteCheck = !remoteCheck;\n    setFilters();\n  };\n  const handleSubmit = () => {\n    setFilters();\n  };\n  const getLocation = (event, { value }) => {\n    locationChange = value;\n    setFilters();\n  };\n  const getSort = (event, { value }) => {\n    sortChange = value;\n    setFilters();\n  };\n  const getSkills = (event, { value }) => {\n    skillChange = value;\n    setFilters();\n  };\n  const getCareerInterest = (event, { value }) => {\n    careerChange = value;\n    setFilters();\n  };\n  const has = {\n    margin: '0.2rem',\n    backgroundColor: '#5680E9',\n    color: 'white',\n  };\n  const notHave = {\n    margin: '0.2rem',\n    backgroundColor: 'rgb(244, 244, 244)',\n    color: '#8f8f8f',\n  };\n  return (\n    <Segment style={{ width: '100%', borderRadius: '10px', marginTop: '3rem' }}>\n      <Grid columns={'equal'}>\n        <Grid.Row>\n          <Grid.Column>\n            <p>\n              <p>\n                <Form>\n                  <Form.Field>\n                    Sort By:\n                  </Form.Field>\n                  <Form.Radio\n                    label={sortBy[0].text}\n                    value={sortBy[0].value}\n                    name='sortBy'\n                    checked={sortChange === sortBy[0].value}\n                    onChange={getSort}\n                  />\n                  <Form.Radio\n                    label={sortBy[1].text}\n                    value={sortBy[1].value}\n                    name='sortBy'\n                    checked={sortChange === sortBy[1].value}\n                    onChange={getSort}\n                  />\n                  <Form.Radio\n                    label={sortBy[2].text}\n                    value={sortBy[2].value}\n                    name='sortBy'\n                    checked={sortChange === sortBy[2].value}\n                    onChange={getSort}\n                  />\n                </Form>\n              </p>\n            </p>\n          </Grid.Column>\n          <Grid.Column>\n            <Form onSubmit={handleSubmit}>\n              <Form.Dropdown\n                fluid multiple selection clearable\n                control={Dropdown}\n                options={dropdownCareerInterest()}\n                label={{ children: 'Career Interest' }}\n                placeholder='Career Interest'\n                search\n                onChange={getCareerInterest}>\n              </Form.Dropdown>\n            </Form>\n          </Grid.Column>\n          <Grid.Column>\n            <Form>\n              <Form.Field\n                label={{ children: 'Skills' }}\n                placeholder='Skills'\n                search\n                fluid multiple selection clearable\n                control={Dropdown}\n                options={internships.dropdownSkills(data)}\n                onChange={getSkills}\n                style={{ flexGrow: 0 }}\n              />\n            </Form>\n          </Grid.Column>\n          <Grid.Column>\n            <Form>\n              <Form.Field placeholder='Location'\n                          label={{ children: 'Location' }}\n                          onChange={getLocation}\n                          fluid multiple selection clearable\n                          options={internships.dropdownLocation(data)}\n                          control={Dropdown}\n                          style={{ flexGrow: 0 }}\n              />\n            </Form>\n            <Checkbox style={{ paddingTop: '1rem' }} label='Remote'\n                      onClick={getRemote}/>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column textAlign={'right'}>\n            <Grid.Row>\n              <div style={{ paddingBottom: '0', paddingRight: '0.5rem' }}>\n                <Header style={{\n                  paddingBottom: '0', margin: '0 0 0 0', paddingRight: '0.5rem',\n                  paddingTop: '0.3rem', lineHeight: '10px',\n                  display: 'inline-block',\n                }} as={'h4'}>\n                  Key:\n                </Header>\n                <Label circular style={has}>\n                  Has skill\n                </Label>\n                <Label circular style={notHave}>\n                  Missing skill\n                </Label>\n              </div>\n            </Grid.Row>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n  );\n}\n\nSearchInternshipFeature.propTypes = {\n  onChildClick: PropTypes.func.isRequired,\n  passedData: PropTypes.array.isRequired,\n  locationVal: PropTypes.string.isRequired,\n  companyVal: PropTypes.string.isRequired,\n  sortVal: PropTypes.string.isRequired,\n  searchQuery: PropTypes.string.isRequired,\n  skillsVal: PropTypes.array.isRequired,\n  isRemote: PropTypes.bool.isRequired,\n  careerVal: PropTypes.array.isRequired,\n};\n\nexport default SearchInternshipFeature;\n","import React, { useState, useEffect, useRef } from 'react';\nimport _ from 'lodash';\nimport { Card, Container, Grid, Header, Segment } from 'semantic-ui-react';\nimport { NavLink } from 'react-router-dom';\nimport moment from 'moment';\nimport InternshipListingCard from './InternshipListingCard';\nimport SearchInternshipFeature from './SearchInternshipFeature';\nimport InternshipsFilters from './InternshipFilters';\n\nfunction InternshipListing() {\n  const internships = new InternshipsFilters();\n  const getInternshipData = internships.mergeData();\n  const [data, setData] = useState('');\n  const [paginatedData, setPaginatedData] = useState('');\n  const [location, setLocation] = useState([]);\n  const [company, setCompany] = useState('any');\n  const [sort, setSort] = useState('');\n  const [search, setSearch] = useState('');\n  const [skills, setSkills] = useState([]);\n  const [remote, setRemote] = useState(false);\n  const [page, setPage] = useState(1);\n  const [height, setHeight] = useState(0);\n  const [career, setCareer] = useState([]);\n  const ref = useRef(null);\n  const totalListing = getInternshipData.length;\n  const lastScraped = moment(getInternshipData[0].lastScraped).fromNow();\n\n  /* Passes data up from SearchInternshipFeature. SetPaginatedData allows data to be rendered\n  * for infinite scroll. */\n  function handleChildClick(passedData, locationVal, companyVal, sortVal, searchQueryVal, skillsVal, isRemote, careerVal) {\n    setData(passedData);\n    setLocation(locationVal);\n    setCompany(companyVal);\n    setCareer(careerVal);\n    setSort(sortVal);\n    setSearch(searchQueryVal);\n    setSkills(skillsVal);\n    setRemote(isRemote);\n    setPage(1);\n    setPaginatedData(passedData.slice(0, 40));\n  }\n\n  /* Grabs the height */\n  useEffect(() => {\n    setHeight(ref.current.clientHeight);\n  }, [ref]);\n\n  /* Infinite scrolling */\n  function handleScroll() {\n    window.onscroll = function () {\n      const scroll = window.innerHeight + window.pageYOffset;\n      // if we hit the bottom\n      if (scroll >= height - 500) {\n        // if there are still more items to be loaded\n        if (page <= Math.ceil(data.length / 40)) {\n          const newPage = page + 1;\n          setPage(newPage);\n          setPaginatedData(data.slice(0, newPage * 40));\n        }\n      }\n    };\n  }\n\n  return (\n      <Container fluid style={{ paddingTop: '5rem', marginLeft: '0.5rem', marginRight: '0.5rem' }}>\n        <Grid columns={'equal'} doubling stackable>\n          <Grid.Row style={{ maxWidth: '70%', margin: 'auto', paddingTop: '20px', marginBottom: '-40px' }}>\n            <Segment>\n              <h2 style={{ align: 'center' }}>\n                Welcome to InternAloha!\n              </h2>\n              <Grid.Column>\n                <p> InternAloha is a tool developed as part of the <a href=\"https://radgrad.org\">RadGrad Project</a> to improve the undergraduate computer\n                  science degree experience by simplifying the internship discovery process.</p>\n                <p> InternAloha regularly visits a large number of Internship and corporate sites and gathers\n                  information on computer science internships, with a focus on internships suitable to Hawaii students.\n                  Our hope is that you find InternAloha to be a superior way to find relevant internships based on your\n                  interests.</p>\n                <p>Right now, the InternAloha database contains a total of {totalListing} listings, broken down as follows: <br/>\n                  ACM ({internships.getData('ACM').length}),\n                  Angel List ({internships.getData('AngelList').length}),\n                  American Express ({internships.getData('AExpress').length}),\n                  Apple ({internships.getData('Apple').length}),\n                  Chegg Internships ({internships.getData('Chegg').length}),\n                  Cisco ({internships.getData('Cisco').length}),\n                  Glassdoor ({internships.getData('Glassdoor').length}),\n                  Hawaii Slack ({internships.getData('HawaiiSlack').length}),\n                  Idealist ({internships.getData('Idealist').length}),\n                  Indeed ({internships.getData('Indeed').length}),\n                  LinkedIn ({internships.getData('LinkedIn').length}),\n                  Monster ({internships.getData('Monster').length}),\n                  Simply Hired ({internships.getData('SimplyHired').length}),\n                  Stack Overflow ({internships.getData('StackOverflow').length}),\n                  Student Opportunity Center (0),\n                  Youtern ({internships.getData('Youtern').length}),\n                  Zip Recruiter ({internships.getData('ZipRecruiter').length})</p>\n                <p>InternAloha collected this information {lastScraped}. </p>\n                <p>We also collect statistics on the sites scraped. For more information, see\n                  <NavLink to=\"/statistics\" exact> statistics.</NavLink>\n                </p>\n                <p>If you have comments or question about InternAloha, please feel free to visit our\n                  <a href=\"https://internaloha.github.io/documentation/\"> home page</a>. </p>\n              </Grid.Column>\n            </Segment>\n          </Grid.Row>\n          <Grid.Row style={{ maxWidth: '70%', margin: 'auto' }}>\n            <SearchInternshipFeature onChildClick={handleChildClick} passedData={data}\n                                     companyVal={company} locationVal={location} sortVal={sort}\n                                     searchQuery={search} skillsVal={skills} isRemote={remote} careerVal={career}/>\n          </Grid.Row>\n          <Grid.Row style={{ maxWidth: '80%', margin: 'auto', paddingBottom: '0px' }}>\n            <Header style={{ paddingLeft: '105px', paddingTop: '20px' }}>\n              Results: {internships.total(data)}\n            </Header>\n          </Grid.Row>\n          <Grid.Row style={{ maxWidth: '80%', margin: 'auto' }}>\n            <div onScroll={handleScroll()} ref={ref}>\n              <Card.Group doubling centered stackable>\n                {_.map(paginatedData, (internship, index) => <InternshipListingCard\n                  selectedSkills={skills} internship={internship} key={index}/>)}\n              </Card.Group>\n            </div>\n          </Grid.Row>\n        </Grid>\n      </Container>\n  );\n}\n\nexport default InternshipListing;\n","import React from 'react';\nimport { Table, Header } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nclass StatisticsRow extends React.Component {\n\n  render() {\n    const total = this.props.statistics.index;\n    const position = ((this.props.statistics.position / total) * 100).toString().substring(0, 5);\n    const company = ((this.props.statistics.company / total) * 100).toString().substring(0, 5);\n    const contact = ((this.props.statistics.contact / total) * 100).toString().substring(0, 5);\n    const location = ((this.props.statistics.location / total) * 100).toString().substring(0, 5);\n    const posted = ((this.props.statistics.posted / total) * 100).toString().substring(0, 5);\n    const due = ((this.props.statistics.due / total) * 100).toString().substring(0, 5);\n    const start = ((this.props.statistics.start / total) * 100).toString().substring(0, 5);\n    const end = ((this.props.statistics.end / total) * 100).toString().substring(0, 5);\n    const compensation = ((this.props.statistics.compensation / total) * 100).toString().substring(0, 5);\n    const qualifications = ((this.props.statistics.qualifications / total) * 100).toString().substring(0, 5);\n    const skills = ((this.props.statistics.skills / total) * 100).toString().substring(0, 5);\n    const description = ((this.props.statistics.description / total) * 100).toString().substring(0, 5);\n    const lastScraped = this.props.statistics.lastScraped;\n\n    function formatDate(stringDate) {\n      const date = new Date(stringDate).toDateString();\n      if (date !== 'Invalid Date') {\n        return date;\n      }\n      return 'N/A';\n    }\n\n    function lastRow(site) {\n      if (site === 'Total') {\n        return (\n            <Table.Row>\n              <Table.Cell>\n                <Header as='h4'>\n                  {site}\n                </Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header as='h4'>\n                  N/A\n                </Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header as='h4' >\n                  {total}\n                </Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header as='h4' >\n                  {position}%\n                </Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header as='h4' >\n                  {company}%\n                </Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header as='h4'>\n                  {contact}%\n                </Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header as='h4' >\n                  {location}%\n                </Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header as='h4' >\n                  {posted}%\n                </Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header as='h4' >\n                  {due}%\n                </Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header as='h4' >\n                  {start}%\n                </Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header as='h4'>\n                  {end}%\n                </Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header as='h4' >\n                  {compensation}%\n                </Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header as='h4'>\n                  {qualifications}%\n                </Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header as='h4' >\n                  {skills}%\n                </Header>\n              </Table.Cell>\n              <Table.Cell>\n                <Header as='h4' >\n                  {description}%\n                </Header>\n              </Table.Cell>\n            </Table.Row>\n        );\n      } return (\n            <Table.Row>\n              <Table.Cell>{site}</Table.Cell>\n              <Table.Cell>{formatDate(lastScraped)}</Table.Cell>\n              <Table.Cell>{total}</Table.Cell>\n              <Table.Cell>{position}%</Table.Cell>\n              <Table.Cell>{company}%</Table.Cell>\n              <Table.Cell>{contact}%</Table.Cell>\n              <Table.Cell>{location}%</Table.Cell>\n              <Table.Cell>{posted}%</Table.Cell>\n              <Table.Cell>{due}%</Table.Cell>\n              <Table.Cell>{start}%</Table.Cell>\n              <Table.Cell>{end}%</Table.Cell>\n              <Table.Cell>{compensation}%</Table.Cell>\n              <Table.Cell>{qualifications}%</Table.Cell>\n              <Table.Cell>{skills}%</Table.Cell>\n              <Table.Cell>{description}%</Table.Cell>\n            </Table.Row>\n        );\n    }\n    return (\n        <>\n          {lastRow(this.props.statistics.site)}\n        </>\n    );\n  }\n}\n\nStatisticsRow.propTypes = {\n  statistics: PropTypes.object.isRequired,\n};\n\nexport default StatisticsRow;\n","import React from 'react';\nimport Highcharts from 'highcharts';\nimport PropTypes from 'prop-types';\n\nclass StatisticsChart extends React.Component {\n  constructor(props) {\n    super(props);\n    // Init state.\n    this.state = { chart: {} };\n  }\n\n  componentDidMount() {\n    const _this = this;\n    // Init chart with data from props.\n    const chart = Highcharts.chart(this.props.statistics.name, {\n\n      title: {\n        text: `Number of Listings Scraped: ${this.props.statistics.name}`,\n      },\n      credits: {\n        enabled: false,\n      },\n      tooltip: {\n        shared: true,\n        crosshairs: true,\n      },\n      yAxis: {\n        allowDecimals: false,\n        title: {\n          text: 'Number of Listings Scraped',\n        },\n      },\n      xAxis: {\n        accessibility: {\n          rangeDescription: 'Scraper Performance',\n        },\n        title: {\n          text: 'Over Time',\n        },\n        categories: _this.props.date,\n        labels: {\n          formatter: function () {\n            return new Date(this.value).toLocaleString('en-US', { dateStyle: 'short' });\n          },\n        },\n      },\n\n      legend: {\n        layout: 'vertical',\n        align: 'right',\n        verticalAlign: 'middle',\n      },\n\n      plotOptions: {\n        series: {\n          label: {\n            connectorAllowed: false,\n          },\n        },\n      },\n\n      series: _this.props.statistics.data,\n\n      responsive: {\n        rules: [{\n          condition: {\n            maxWidth: 500,\n          },\n          chartOptions: {\n            legend: {\n              align: 'left',\n              verticalAlign: 'top',\n              borderWidth: 0,\n            },\n          },\n        }],\n      },\n    });\n    this.setState({ chart: chart });\n  }\n\n  render() {\n    return <div>\n      <div style={{ position: 'sticky' }} id={this.props.statistics.name}/>\n    </div>;\n  }\n}\n\nStatisticsChart.propTypes = {\n  statistics: PropTypes.object.isRequired,\n  date: PropTypes.array.isRequired,\n};\n\nexport default StatisticsChart;\n","import React from 'react';\nimport { Container, Header, Icon, Label, Tab, Table } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport statisticData from './statistics/statistics.data';\nimport statisticsCSV from './statistics/statistics-csv';\nimport StatisticsRow from './StatisticsRow';\nimport StatisticsChart from './StatisticsChart';\n\n/** A simple static component to render some text for the Statistics page. */\nclass Statistics extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      statistics: statisticData,\n    };\n  }\n\n   lowercaseFirstLetter(string) {\n    return string.charAt(0).toLowerCase() + string.slice(1);\n  }\n\n  onClick = (event) => {\n    let value = this.lowercaseFirstLetter(event.target.textContent);\n    value = value.replace(/ +/g, '');\n    this.setState({ statistics: _.orderBy(statisticData, value, ['desc']) });\n  };\n\n  render() {\n\n    function getData(info) {\n      delete statisticsCSV.siteName;\n      const arrays = _.map(statisticsCSV, function (site) {\n        const arr = [];\n        const siteInfo = _.map(site, function (data) {\n          arr.push(data[info]);\n          return arr;\n        });\n        return [...new Set(siteInfo)];\n      });\n      return arrays;\n    }\n\n    function formatInfo() {\n      const chartData = [];\n      const allData = [];\n      const keys = Object.keys(statisticsCSV);\n      const types = [\n        'lastScraped', 'position', 'company', 'contact', 'location', 'posted', 'due', 'start',\n        'end', 'compensation', 'qualifications', 'skills', 'remote', 'index', 'url', 'description'];\n      for (let i = 0; i < types.length; i++) {\n        const arrays = getData(types[i]);\n        allData.push(arrays);\n      }\n      for (let i = 0; i < keys.length; i++) {\n        const info = [];\n        for (let j = 0; j < keys.length; j++) {\n          if (allData && allData[j]) {\n            const obj = {\n              name: types[j],\n              data: allData[j][i][0],\n            };\n            info.push(obj);\n          }\n        }\n        chartData.push({\n          name: keys[i],\n          data: info,\n        });\n      }\n      return chartData;\n    }\n\n    const dates = getData('lastScraped');\n\n    function getPercentageChange(oldNumber, newNumber) {\n      const decreaseValue = oldNumber - newNumber;\n\n      return (decreaseValue / oldNumber) * 100;\n    }\n\n    function showErrorIcon(site) {\n      const url = site.data[14].data;\n      const currentNum = url[url.length - 1];\n      const prevNum = url.length >= 2 ? url[url.length - 2] : 0;\n      const total = getPercentageChange(currentNum, prevNum);\n      const icon = total <= -10 ? 'warning sign' : '';\n      return {\n        color: 'blue',\n        key: site.name, icon: icon,\n        content: (\n          <div>\n            {site.name}\n            <Label style={{ backgroundColor: '#ffffff00' }}>{url[url.length - 1]}</Label>\n          </div>\n        ),\n      };\n    }\n\n    function getPanes() {\n      return formatInfo('url').map((site, index) => (\n        {\n          menuItem: (showErrorIcon(site)),\n          render: () => <Tab.Pane style={{ backgroundColor: 'white' }}>\n            <StatisticsChart\n              statistics={site} key={index} date={dates[index][0]}/>\n          </Tab.Pane>,\n        }));\n    }\n\n    return (\n        <div>\n          <Container style={{ marginTop: '10rem', marginBottom: '4rem' }}>\n            <Header textAlign={'center'}\n                    as={'h2'}\n                    style={{ marginBottom: '2rem' }}>\n              Statistics\n            </Header>\n            <Tab\n              menu={{ fluid: true, vertical: true }}\n              grid = {{ paneWidth: 13, tabWidth: 3 }}\n              panes={getPanes()} />\n             <Table attached='top' celled sortable>\n              <Table.Header onClick={(event) => this.onClick(event)}>\n                <Table.Row>\n                  <Table.HeaderCell>Site\n                    <Icon name='angle down' />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>Last Scraped\n                    <Icon name='angle down' />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>Entries\n                    <Icon name='angle down' />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>Position\n                    <Icon name='angle down' />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>Company\n                    <Icon name='angle down' />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>Contact\n                    <Icon name='angle down' />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>Location\n                    <Icon name='angle down' />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>Posted\n                    <Icon name='angle down' />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>Due\n                    <Icon name='angle down' />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>Start\n                    <Icon name='angle down' />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>End\n                    <Icon name='angle down' />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>Compensation\n                    <Icon name='angle down' />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>Qualifications\n                    <Icon name='angle down' />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>Skills\n                    <Icon name='angle down' />\n                  </Table.HeaderCell>\n                  <Table.HeaderCell>Description\n                    <Icon name='angle down' />\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                 {_.map((this.state.statistics), (statistics, index) => <StatisticsRow\n                    statistics={statistics} key={index}/>)}\n              </Table.Body>\n             </Table>\n          </Container>\n        </div>\n    );\n  }\n}\n\nexport default Statistics;\n","import React from 'react';\nimport { Container, Menu, Image } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\n\n/** A simple static component to render some text for the NavBar page. */\nclass NavBar extends React.Component {\n  render() {\n    return (\n        <Container>\n          <Menu className={'top meni fixed borderless'}\n                style={{ backgroundColor: '#C1C8E4', border: 0, boxShadow: '0 0 BLACK' }}>\n            <Menu.Item>\n              <a href={'/internaloha'}>\n                <Image src={'images/logo.png'} size={'small'}/>\n              </a>\n            </Menu.Item>\n          </Menu>\n        </Container>\n    );\n  }\n}\n\nexport default withRouter(NavBar);\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.css';\nimport './index.css';\n// import Landing from './Landing';\nimport InternshipListing from './InternshipListing';\nimport Statistics from './Statistics';\nimport NavBar from './NavBar';\n// import Profile from './Profile';\n// import JobCart from './JobCart';\n// import EditProfile from './EditProfile';\n// import RecommendedInternships from './RecommendedInternships';\n\n/**\n * The top level layout for the site.\n */\nconst App = () => (\n    <Router>\n      <NavBar/>\n      <Switch>\n        {/* <Route exact path={'/'} component={Landing}/> */}\n        <Route exact path={'/internaloha'} component={InternshipListing}/>\n        <Route exact path={'/all-internships'} component={InternshipListing}/>\n        <Route exact path={'/statistics'} component={Statistics}/>\n        {/* <Route exact path={'/profile'} component={Profile}/> */}\n        {/* <Route exact path={'/applications'} component={JobCart}/> */}\n        {/* <Route exact path={'/edit-profile'} component={EditProfile}/> */}\n      </Switch>\n    </Router>\n);\n\nrender(<App/>, document.getElementById('root'));\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import 'semantic-ui-css/semantic.css';\n// import './index.css';\n// import InternshipListing from './InternshipListing';\n// import Statistics from './Statistcs';\n// import NavBar from './NavBar';\n//\n// /**\n//  * The top level layout for the site.\n//  */\n//\n// ReactDOM.render(\n//     <React.StrictMode>\n//       <NavBar/>\n//       <InternshipListing/>\n//       <Statistics/>\n//     </React.StrictMode>,\n//   // eslint-disable-next-line no-undef\n//   document.getElementById('root'),\n// );\n"],"sourceRoot":""}