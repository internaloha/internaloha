{"version":3,"sources":["InternshipListingCard.jsx","InternshipFilters.jsx","RecommendationScript.js","SearchInternshipFeature.jsx","InternshipListing.jsx","StatisticsRow.jsx","Statistcs.jsx","NavBar.jsx","index.js"],"names":["formatDate","stringDate","date","moment","fromNow","InternshipListingCard","props","Card","className","Content","Header","textAlign","href","internship","url","target","rel","style","color","position","Meta","paddingTop","Grid","doubling","Row","columns","Column","floated","Icon","company","location","city","state","zip","posted","lastScraped","Description","overflow","maxHeight","internshipDescription","noScriptDescript","replace","dangerouslySetInnerHTML","__html","e","description","extra","skills","map","skill","includes","Label","circular","key","margin","backgroundColor","hasSkill","remote","isRemote","Button","borderRadius","siteName","Popup","content","mouseLeaveDelay","on","trigger","marginTop","size","fontSize","Modal","closeIcon","Form","Field","Radio","label","name","value","checked","TextArea","placeholder","Actions","InternshipsFilters","total","data","length","_","concat","iHire","zipData","simplyData","monsterData","linkedinData","youternData","glassData","indeedData","idealist","ACM","coolworks","aexpress","apple","companies","categories","flattenDeep","uniq","sort","number","groupBy","info","i","push","text","num","unshift","locationAmount","flattenSkills","uniqueSkills","orderBy","tags","exists","counter","list","toString","toLowerCase","searchQuery","input","arrLocations","filter","dropdownCareerInterest","sortedCollection","sortBy","career_interest_to_skill","o","career","join","Dropdown","Item","marginLeft","basic","inverted","SearchInternshipFeature","onChildClick","locationVal","companyVal","sortVal","skillsVal","careerVal","internships","mergeData","locationChange","companyChange","sortChange","searchQueryChange","skillChange","remoteCheck","careerChange","setFilters","remoteFilter","searchFiltered","filterBySearch","companyFiltered","filterByCompany","sorted","sortedBy","recommendedData","careers","newState","careerSkills","k","j","totalSkills","foundTag","recommendation","console","log","window","scrollTo","top","left","behavior","handleSubmit","Segment","width","inline","header","options","defaultValue","onChange","event","onSubmit","icon","iconPosition","fluid","control","Input","children","multiple","selection","clearable","search","dropdownSkills","flexGrow","dropdownLocation","Checkbox","onClick","paddingBottom","paddingRight","lineHeight","display","as","InternshipListing","getInternshipData","useState","setData","slice","paginatedData","setPaginatedData","setLocation","setCompany","setSort","setSearch","setSkills","setRemote","page","setPage","height","setHeight","setCareer","ref","useRef","useEffect","current","clientHeight","Container","marginRight","stackable","maxWidth","passedData","searchQueryVal","paddingLeft","onScroll","onscroll","innerHeight","pageYOffset","Math","ceil","newPage","Group","centered","index","StatisticsRow","site","this","statistics","entries","substring","contact","due","start","end","compensation","qualifications","Table","Cell","Date","toDateString","React","Component","Statistics","lowercaseFirstLetter","textContent","setState","statisticData","string","charAt","marginBottom","attached","celled","sortable","HeaderCell","Body","NavBar","Menu","border","boxShadow","Image","src","withRouter","App","exact","path","component","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe3324a7.chunk.js","sourcesContent":["import {\r\n  Button,\r\n  Card,\r\n  Grid,\r\n  Icon,\r\n  Label,\r\n  Modal,\r\n  Popup,\r\n  Form,\r\n  Radio,\r\n} from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\n\r\n// eslint-disable-next-line consistent-return\r\nfunction isRemote(remote) {\r\n  if (remote) {\r\n    return (\r\n        <Label circular style={{\r\n          backgroundColor: '#263763',\r\n          color: 'white',\r\n          margin: '0.2rem',\r\n        }}>\r\n          Remote\r\n        </Label>\r\n    );\r\n  }\r\n}\r\n\r\nfunction hasSkill(skill) {\r\n  const studentSkills = ['machine learning', 'software engineering'];\r\n  const has = {\r\n    margin: '0.2rem',\r\n    backgroundColor: '#5680E9',\r\n    color: 'white',\r\n  };\r\n  const notHave = {\r\n    margin: '0.2rem',\r\n    backgroundColor: 'rgb(244, 244, 244)',\r\n    color: '#8f8f8f',\r\n  };\r\n  if (studentSkills.includes(skill)) {\r\n    return (\r\n        <Label circular key={skill} style={has}>\r\n          {skill}\r\n        </Label>\r\n    );\r\n  }\r\n  return (\r\n      <Label circular key={skill} style={notHave}>\r\n        {skill}\r\n      </Label>\r\n  );\r\n}\r\n\r\nfunction formatDate(stringDate) {\r\n  if (typeof stringDate === 'undefined') {\r\n    return 'N/A';\r\n  }\r\n  const date = moment(stringDate).fromNow();\r\n  if (date !== 'Invalid Date') {\r\n    return date;\r\n  }\r\n  return 'Unknown';\r\n}\r\n\r\nfunction description(internshipDescription) {\r\n  try {\r\n    const noScriptDescript = internshipDescription.replace(/<script>(.*?)<\\/script>/gi, '');\r\n    return (\r\n        <span dangerouslySetInnerHTML={{ __html: noScriptDescript }}/>\r\n        // internshipDescription.split('\\n').map((item, key) => <span key={key}>{item}<br/></span>)\r\n    );\r\n  } catch (e) {\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction siteName(url) {\r\n  try {\r\n    if (url.includes('linkedin')) {\r\n      return 'LinkedIn';\r\n    }\r\n    if (url.includes('ziprecruiter')) {\r\n      return 'ZipRecruiter';\r\n    }\r\n    if (url.includes('monster')) {\r\n      return 'Monster';\r\n    }\r\n    if (url.includes('simplyhired')) {\r\n      return 'SimplyHired';\r\n    }\r\n    if (url.includes('internships')) {\r\n      return 'Chegg';\r\n    }\r\n    if (url.includes('youtern')) {\r\n      return 'Youtern';\r\n    }\r\n    if (url.includes('ihiretechnology')) {\r\n      return 'iHireTechnology';\r\n    }\r\n    if (url.includes('stackoverflow')) {\r\n      return 'iHireTechnology';\r\n    }\r\n    if (url.includes('glassdoor')) {\r\n      return 'Glassdoor';\r\n    }\r\n    if (url.includes('indeed')) {\r\n      return 'Indeed';\r\n    }\r\n    if (url.includes('angel')) {\r\n      return 'AngelList';\r\n    }\r\n    if (url.includes('acm')) {\r\n      return 'ACM';\r\n    }\r\n    if (url.includes('apple')) {\r\n      return 'Apple';\r\n    }\r\n    if (url.includes('americanexpress')) {\r\n      return 'American Express';\r\n    }\r\n    if (url.includes('coolworks')) {\r\n      return 'Coolworks';\r\n    }\r\n    if (url.includes('slack')) {\r\n      return 'Hawaii Slack';\r\n    }\r\n    return 'NSF-REU';\r\n  } catch (e) {\r\n    return 'Unknown';\r\n  }\r\n}\r\n\r\nfunction InternshipListingCard(props) {\r\n  return (\r\n      <Card className={'listings'}>\r\n        <Card.Content>\r\n          <Card.Header textAlign={'center'}>\r\n            <a href={props.internship.url} target='_blank' rel=\"noopener noreferrer\">\r\n              <p style={{ color: '#263763' }}>\r\n                {props.internship.position}\r\n              </p>\r\n            </a>\r\n          </Card.Header>\r\n          <Card.Meta style={{ paddingTop: '0.6rem' }}>\r\n            <Grid doubling>\r\n              <Grid.Row columns={1}>\r\n                <Grid.Column floated={'left'}>\r\n                  <p>\r\n                    <Icon className='building'/>\r\n                    <span>{props.internship.company} </span>\r\n                  </p>\r\n                </Grid.Column>\r\n                <Grid.Column floated={'left'}>\r\n                  <Icon className='map marker alternate'/>\r\n                  <span>Internship Location: {props.internship.location.city}, {props.internship.location.state} {props.internship.location.zip}</span>\r\n                </Grid.Column>\r\n                <Grid.Column floated={'left'}>\r\n                  <Icon className='calendar alternate'/>\r\n                  <span>Posted: {formatDate(props.internship.posted)}</span>\r\n                </Grid.Column>\r\n                <Grid.Column floated={'left'}>\r\n                  <Icon className='calendar alternate'/>\r\n                  <span>Last Updated: {formatDate(props.internship.lastScraped)}</span>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n\r\n            </Grid>\r\n          </Card.Meta>\r\n          <Card.Description style={{ paddingTop: '1rem' }}>\r\n            <div style={{ overflow: 'auto', maxHeight: '250px' }}>\r\n              {description(props.internship.description)}\r\n            </div>\r\n\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          {props.internship.skills.map((skill) => (\r\n              hasSkill(skill)\r\n          ))}\r\n          {isRemote(props.internship.remote)}\r\n        </Card.Content>\r\n        <Card.Content extra textAlign={'center'}>\r\n          <a target='_blank' rel=\"noopener noreferrer\" href={props.internship.url}>\r\n            <Button style={{ borderRadius: '10rem' }}>\r\n              See Full Listing: {siteName(props.internship.url)}\r\n            </Button>\r\n          </a>\r\n          <div>\r\n            <Popup\r\n                content='Added to favorites!'\r\n                mouseLeaveDelay={200}\r\n                on='click'\r\n                trigger={\r\n                  <button className=\"ui icon button\" style={{ marginTop: '1em', size: '100%', maxHeight: '50px', backgroundColor: 'transparent' }}>\r\n                    <i className=\"heart icon\" style={{ fontSize: '100%' }}/>\r\n                  </button>\r\n                }\r\n            />\r\n            <Modal closeIcon trigger={\r\n              <button className=\"ui icon button\" style={{ marginTop: '1em', size: '100%', maxHeight: '50px', backgroundColor: 'transparent' }}>\r\n                <i className=\"exclamation triangle icon\" style={{ fontSize: '100%' }}/>\r\n              </button>\r\n            }>\r\n              <Modal.Header>Report a Problem</Modal.Header>\r\n              <Modal.Content>\r\n                <Modal.Description>\r\n                  <Form>\r\n                    <Form.Field>\r\n                      <Radio\r\n                          label='Broken Link'\r\n                          name='radioGroup'\r\n                          value='this'\r\n                          checked={'this'}\r\n                      />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <Radio\r\n                          label='Missing Data Fields'\r\n                          name='radioGroup'\r\n                          value='that'\r\n                          checked={'that'}\r\n                      />\r\n                    </Form.Field>\r\n                    <Form.TextArea label='Other' placeholder='Explain the error here. Feel free to provide screenshots or links.' />\r\n                  </Form>\r\n                </Modal.Description>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                <Button style={{ backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n                  Report\r\n                </Button>\r\n              </Modal.Actions>\r\n            </Modal>\r\n          </div>\r\n        </Card.Content>\r\n      </Card>\r\n  );\r\n}\r\n\r\nInternshipListingCard.propTypes = {\r\n  internship: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default InternshipListingCard;\r\n","import _ from 'lodash';\r\nimport linkedinData from './data/linkedin.parsed.data';\r\nimport simplyData from './data/simplyHired.parsed.data';\r\nimport zipData from './data/ziprecruiter.parsed.data';\r\nimport monsterData from './data/monster.parsed.data';\r\nimport youternData from './data/youtern.parsed.data';\r\nimport iHire from './data/iHireTech.parsed.data';\r\nimport glassData from './data/glassdoor.parsed.data';\r\nimport indeedData from './data/indeed.parsed.data';\r\nimport apple from './data/apple.parsed.data';\r\nimport aexpress from './data/aexpress.parsed.data';\r\nimport ACM from './data/acm.parsed.data';\r\nimport idealist from './data/idealist.parsed.data';\r\nimport coolworks from './data/coolworks.parsed.data';\r\n\r\nclass InternshipsFilters {\r\n  /* Returns total number of internship listing */\r\n  total = (data) => data.length;\r\n\r\n  lastScraped = (data) => data[0].lastScraped;\r\n\r\n  mergeData() {\r\n    let data = [];\r\n    data = _.concat(data, iHire);\r\n    data = _.concat(zipData, simplyData);\r\n    data = _.concat(data, monsterData);\r\n    data = _.concat(data, linkedinData);\r\n    data = _.concat(data, youternData);\r\n    data = _.concat(data, glassData);\r\n    data = _.concat(data, indeedData);\r\n    data = _.concat(data, idealist);\r\n    data = _.concat(data, ACM);\r\n    data = _.concat(data, coolworks);\r\n    data = _.concat(data, aexpress);\r\n    data = _.concat(data, apple);\r\n    return data;\r\n  }\r\n\r\n  /* Returns array of companies for us to be able to pass into semantic ui's dropdown. Format:\r\n  * key: unique key of the company\r\n  * text: Text that shows up in dropdown\r\n  * value: value used to search\r\n  * num: the number of internships with said company */\r\n  dropdownCompany(data) {\r\n    let companies = _.map(data, 'company');\r\n    const categories = _.flattenDeep(companies);\r\n    companies = _.uniq(categories).sort();\r\n    const number = _.groupBy(data, 'company');\r\n    const info = [];\r\n    for (let i = 0; i < companies.length; i++) {\r\n      info.push({\r\n        key: companies[i],\r\n        text: `${companies[i]} (${number[companies[i]].length})`,\r\n        value: companies[i],\r\n        num: number[companies[i]].length,\r\n      });\r\n    }\r\n    // Adding any parameter to front of array\r\n    info.unshift({\r\n      key: 'any',\r\n      text: 'Any',\r\n      value: 'any',\r\n    });\r\n    return info;\r\n  }\r\n\r\n  /* Returns array of companies for us to be able to pass into semantic ui's dropdown. Format:\r\n * key: unique key of the company\r\n * text: Text that shows up in dropdown\r\n * value: value used to search\r\n * num: the number of internships with said company */\r\n  dropdownLocation(data) {\r\n    let location = _.map(data, 'location.state');\r\n    const categories = _.flattenDeep(location);\r\n    location = _.uniq(categories).sort();\r\n    const number = _.groupBy(data, 'location.state');\r\n    const info = [];\r\n    for (let i = 0; i < location.length; i++) {\r\n      const locationAmount = number[location[i]].length;\r\n      info.push({\r\n        key: location[i],\r\n        text: `${location[i]} (${locationAmount})`,\r\n        value: location[i],\r\n        num: number[location[i]].length,\r\n      });\r\n    }\r\n    return info;\r\n  }\r\n\r\n  /* Returns array of skills for us to be able to pass into semantic ui's dropdown. Format:\r\n* key: unique key of the skill\r\n* text: Text that shows up in dropdown\r\n* value: value used to search\r\n* num: the number of internships with the associated skills */\r\n  dropdownSkills(data) {\r\n    const skills = _.map(data, 'skills');\r\n    const flattenSkills = _.flattenDeep(skills);\r\n    const uniqueSkills = _.uniq(flattenSkills).sort();\r\n    const number = _.groupBy(flattenSkills);\r\n    const info = [];\r\n    for (let i = 0; i < uniqueSkills.length; i++) {\r\n      info.push({\r\n        key: uniqueSkills[i],\r\n        text: `${uniqueSkills[i]} (${number[uniqueSkills[i]].length})`,\r\n        value: uniqueSkills[i],\r\n        num: number[uniqueSkills[i]].length,\r\n      });\r\n    }\r\n    return info;\r\n  }\r\n\r\n  /* Sorts list by given parameters */\r\n  sortedBy(data, value) {\r\n    if (value === 'date') {\r\n      return _.orderBy(data, ['posted'], ['desc']);\r\n    }\r\n    if (value === 'company') {\r\n      return _.orderBy(data, ['company'], ['asc']);\r\n    }\r\n    return _.orderBy(data, ['position'], ['asc']);\r\n  }\r\n\r\n  /* Returns a list based on skill/tags inputs */\r\n  filterBySkills(data, tags) {\r\n    if (tags.length === 0) {\r\n      return data;\r\n    }\r\n    const skills = [];\r\n    let exists = false;\r\n    let counter = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      // if any of the tags exist in data set, push it to skills and go to next\r\n      while (counter < tags.length && exists === false) {\r\n        if (data[i].skills.includes(tags[counter])) {\r\n          skills.push(data[i]);\r\n          exists = true;\r\n        }\r\n        counter++;\r\n      }\r\n      counter = 0;\r\n      exists = false;\r\n    }\r\n    return skills;\r\n  }\r\n\r\n  /* Returns a sorted list by company name */\r\n  filterByCompany(data, company) {\r\n    if (company === 'any' || company.length === 0) {\r\n      return data;\r\n    }\r\n    const list = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      const companies = data[i].company;\r\n      const lowercase = companies.toString().toLowerCase();\r\n      if (lowercase.includes(company.toString().toLowerCase())) {\r\n        list.push(data[i]);\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n\r\n  /* Returns a list based on search query */\r\n  filterBySearch(data, searchQuery) {\r\n    if (searchQuery.length === 0) {\r\n      return data;\r\n    }\r\n    const list = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      const position = data[i].position;\r\n      const lowercase = position.toString().toLowerCase();\r\n      if (lowercase.includes(searchQuery.toString().toLowerCase())) {\r\n        list.push(data[i]);\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n\r\n  /* Returns a sorted list by location */\r\n  filterByLocation(data, input) {\r\n    if (input.length === 0) {\r\n      return data;\r\n    }\r\n    let arrLocations = [];\r\n    for (let i = 0; i < input.length; i++) {\r\n      arrLocations = arrLocations.concat(_.filter(data, ['location.state', input[i]]));\r\n    }\r\n    return arrLocations;\r\n  }\r\n\r\n  isRemote(data, value) {\r\n    if (value === false) {\r\n      return data;\r\n    }\r\n     return _.filter(data, ['remote', true]);\r\n  }\r\n}\r\n\r\nexport default InternshipsFilters;\r\n","import natural from 'natural';\r\nimport React from 'react';\r\nimport _ from 'lodash';\r\nimport {\r\n  Popup,\r\n  Dropdown,\r\n} from 'semantic-ui-react';\r\nimport career_interest_to_skill from './career_interest_to_skill';\r\n\r\nfunction test(data) {\r\n  const TfIdf = natural.TfIdf;\r\n  const tfidf = new TfIdf();\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    tfidf.addDocument(data[i].description);\r\n  }\r\n\r\n  const tfidfData = [];\r\n\r\n  // tfidf.addDocument('this document is about node.');\r\n  // tfidf.addDocument('this document is about ruby.');\r\n  // tfidf.addDocument('this document is about ruby and node.');\r\n  // tfidf.addDocument('this document is about node. it has node examples');\r\n\r\n  console.log('javascript full-stack css hmtl --------------------------------');\r\n\r\n  tfidf.tfidfs('javascript full-stack css hmtl ', function (i, measure) {\r\n    //  console.log('document #' + i + ' is ' + measure);\r\n    if (measure > 6) {\r\n      console.log(`document #${i} is ${measure}`);\r\n      tfidfData.push(data[i]);\r\n    }\r\n  });\r\n\r\n  // console.log(tfidfData);\r\n  return tfidfData;\r\n\r\n  // console.log('ruby --------------------------------');\r\n  // tfidf.tfidfs('ruby', function (i, measure) {\r\n  //   console.log('document #' + i + ' is ' + measure);\r\n  // });\r\n}\r\n\r\nfunction dropdownCareerInterest() {\r\n\r\n  const sortedCollection = _.sortBy(career_interest_to_skill, [function (o) { return o.career; }]);\r\n\r\n  const info = [];\r\n  for (let i = 0; i < sortedCollection.length; i++) {\r\n    const skills = sortedCollection[i].skills.join(', ');\r\n    info.push({\r\n      key: sortedCollection[i].career,\r\n      text: sortedCollection[i].career,\r\n      value: sortedCollection[i].career,\r\n      content: (\r\n          <Popup content={`Associated Skills: ${skills}`}\r\n                 trigger={<Dropdown.Item>\r\n            {sortedCollection[i].career}</Dropdown.Item>}\r\n                 style={{ marginLeft: '12%' }}\r\n                 position={'right center'}\r\n                 basic inverted\r\n          />\r\n      ),\r\n    });\r\n  }\r\n  return info;\r\n}\r\n\r\nfunction recommendation(tags, careers, data, location) {\r\n\r\n  if (tags.length === 0 && careers.length === 0) {\r\n    if (location.length !== 0) {\r\n      let arrLocations = [];\r\n      for (let i = 0; i < location.length; i++) {\r\n        const newState = _.filter(data, ['location.state', location[i]]);\r\n        arrLocations = arrLocations.concat(newState);\r\n      }\r\n      return arrLocations;\r\n    }\r\n    return data;\r\n\r\n  }\r\n\r\n  const skills = [];\r\n\r\n  let careerSkills = [];\r\n  for (let i = 0; i < career_interest_to_skill.length; i++) {\r\n    for (let k = 0; k < careers.length; k++) {\r\n      if (careers[k] === career_interest_to_skill[i].career) {\r\n        for (let j = 0; j < career_interest_to_skill[i].skills.length; j++) {\r\n          careerSkills.push(career_interest_to_skill[i].skills[j]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  careerSkills = _.uniq(careerSkills);\r\n\r\n  // const lowerCaseTags = [];\r\n\r\n  // for (let i = 0; i < tags.length; i++) {\r\n  //   lowerCaseTags.push(tags[i].toString().toLowerCase());\r\n  // }\r\n\r\n  const totalSkills = _.uniq(careerSkills.concat(tags));\r\n\r\n  // console.log(totalSkills);\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    let foundTag = false;\r\n    let num = 0;\r\n    let total = 0;\r\n    for (let j = 0; j < data[i].skills.length; j++) {\r\n      for (let k = 0; k < totalSkills.length; k++) {\r\n        if (data[i].skills[j].includes(totalSkills[k])) {\r\n          num++;\r\n          foundTag = true;\r\n        }\r\n      }\r\n      total = data[i].skills.length;\r\n    }\r\n    if (foundTag === true) {\r\n\r\n      // eslint-disable-next-line no-param-reassign\r\n      data[i].recommendation = num / total;\r\n      skills.push(data[i]);\r\n    }\r\n  }\r\n\r\n  const sorted = _.orderBy(skills, ['recommendation'], ['desc']);\r\n\r\n  // console.log(sorted);\r\n\r\n// for (let i = 0; i < data.length; i++) {\r\n//   // if any of the tags exist in data set, push it to skills and go to next\r\n//   while (counter < totalSkills.length && exists === false) {\r\n//     if (data[i].skills.includes(totalSkills[counter])) {\r\n//       skills.push(data[i]);\r\n//       exists = true;\r\n//     }\r\n//     counter++;\r\n//   }\r\n//   counter = 0;\r\n//   exists = false;\r\n// }\r\n// console.log(skills);\r\n  console.log(location);\r\n\r\n  if (location.length === 0) {\r\n    return sorted;\r\n  }\r\n\r\n  // if (location.length === 1) {\r\n  //   return _.filter(sorted, ['location.state', location]);\r\n  // } else {\r\n  let arrLocations = [];\r\n  for (let i = 0; i < location.length; i++) {\r\n    arrLocations = arrLocations.concat(_.filter(sorted, ['location.state', location[i]]));\r\n  }\r\n  return arrLocations;\r\n  // }\r\n  //\r\n  // console.log(sorted);\r\n  // console.log(_.filter(sorted, ['location.state', location]));\r\n  // return _.filter(sorted, ['location.state', location]);\r\n\r\n}\r\n\r\nfunction isRemoteFunc(data, value) {\r\n  if (value === false) {\r\n    return data;\r\n  }\r\n  console.log(_.filter(data, ['remote', true]));\r\n  return _.filter(data, ['remote', true]);\r\n}\r\n\r\nexport { recommendation, dropdownCareerInterest, test, isRemoteFunc };\r\n","import React from 'react';\r\nimport {\r\n  Segment,\r\n  Header,\r\n  Dropdown,\r\n  Label,\r\n  Input,\r\n  Form,\r\n  Checkbox,\r\n  Popup,\r\n  Grid,\r\n} from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport InternshipsFilters from './InternshipFilters';\r\nimport { dropdownCareerInterest, recommendation } from './RecommendationScript';\r\n\r\nfunction SearchInternshipFeature({\r\n                                   onChildClick,\r\n                                   locationVal,\r\n                                   companyVal,\r\n                                   sortVal,\r\n                                   searchQuery,\r\n                                   skillsVal,\r\n                                   isRemote,\r\n                                   careerVal,\r\n                                 }) {\r\n  const internships = new InternshipsFilters();\r\n  const data = internships.mergeData();\r\n  let locationChange = locationVal;\r\n  let companyChange = companyVal;\r\n  let sortChange = sortVal;\r\n  let searchQueryChange = searchQuery;\r\n  let skillChange = skillsVal;\r\n  let remoteCheck = isRemote;\r\n  let careerChange = careerVal;\r\n  const sortBy = [\r\n    { key: 'date', text: 'posted', value: 'date' },\r\n    { key: 'internship', text: 'internship', value: 'internship' },\r\n    { key: 'company', text: 'company', value: 'company' },\r\n  ];\r\n  const setFilters = () => {\r\n    const remoteFilter = internships.isRemote(data, remoteCheck);\r\n    const searchFiltered = internships.filterBySearch(remoteFilter, searchQueryChange);\r\n    const companyFiltered = internships.filterByCompany(searchFiltered, companyChange);\r\n    const sorted = internships.sortedBy(companyFiltered, sortChange);\r\n    const recommendedData = recommendation(skillChange, careerChange, sorted, locationChange);\r\n    onChildClick(recommendedData, locationChange, companyChange, sortChange, searchQueryChange, skillChange, remoteCheck, careerChange);\r\n    window.scrollTo({\r\n      top: 30,\r\n      left: 100,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n  const handleSearchChange = (event) => {\r\n    searchQueryChange = event.target.value;\r\n  };\r\n  const handleCompanyChange = (event) => {\r\n    companyChange = event.target.value;\r\n  };\r\n  const getRemote = () => {\r\n    remoteCheck = !remoteCheck;\r\n    setFilters();\r\n  };\r\n  const handleSubmit = () => {\r\n    setFilters();\r\n  };\r\n  const getLocation = (event, { value }) => {\r\n    locationChange = value;\r\n    setFilters();\r\n  };\r\n  const getSort = (event, { value }) => {\r\n    sortChange = value;\r\n    setFilters();\r\n  };\r\n  const getSkills = (event, { value }) => {\r\n    skillChange = value;\r\n    setFilters();\r\n  };\r\n  const getCareerInterest = (event, { value }) => {\r\n    careerChange = value;\r\n    setFilters();\r\n  };\r\n  const has = {\r\n    margin: '0.2rem',\r\n    backgroundColor: '#5680E9',\r\n    color: 'white',\r\n  };\r\n  const notHave = {\r\n    margin: '0.2rem',\r\n    backgroundColor: 'rgb(244, 244, 244)',\r\n    color: '#8f8f8f',\r\n  };\r\n  return (\r\n    <Segment style={{ width: '100%', borderRadius: '10px', marginTop: '3rem' }}>\r\n      <Grid columns={'equal'}>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <p>\r\n              <p>\r\n                Sort by {' '}\r\n                <Dropdown\r\n                  inline\r\n                  header='Sort by...'\r\n                  options={sortBy}\r\n                  defaultValue={sortBy[0].value}\r\n                  onChange={getSort}\r\n                />\r\n              </p>\r\n            </p>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Form onSubmit={handleSubmit}>\r\n              <Popup\r\n                trigger={\r\n                  <Form>\r\n                    <Form.Field icon='search'\r\n                                iconPosition='left'\r\n                                placeholder='Search ...'\r\n                                onChange={handleSearchChange}\r\n                                fluid\r\n                                control={Input}\r\n                                label={{ children: 'Search' }}\r\n                    />\r\n                  </Form>\r\n                }\r\n                content='Press enter to search by internship titles!'\r\n                on={'focus'}\r\n              />\r\n            </Form>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Dropdown\r\n                fluid multiple selection clearable\r\n                control={Dropdown}\r\n                options={dropdownCareerInterest()}\r\n                label={{ children: 'Career Interest' }}\r\n                placeholder='Career Interest'\r\n                search\r\n                onChange={getCareerInterest}>\r\n              </Form.Dropdown>\r\n            </Form>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Form>\r\n              <Form.Field\r\n                label={{ children: 'Skills' }}\r\n                placeholder='Skills'\r\n                search\r\n                fluid multiple selection clearable\r\n                control={Dropdown}\r\n                options={internships.dropdownSkills(data)}\r\n                onChange={getSkills}\r\n                style={{ flexGrow: 0 }}\r\n              />\r\n            </Form>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Form>\r\n              <Form.Field placeholder='Location'\r\n                          label={{ children: 'Location' }}\r\n                          onChange={getLocation}\r\n                          fluid multiple selection clearable\r\n                          options={internships.dropdownLocation(data)}\r\n                          control={Dropdown}\r\n                          style={{ flexGrow: 0 }}\r\n              />\r\n            </Form>\r\n            <Checkbox style={{ paddingTop: '1rem' }} label='Remote'\r\n                      onClick={getRemote}/>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Field icon='home'\r\n                          label={{ children: 'Company' }}\r\n                          control={Input}\r\n                          iconPosition='left'\r\n                          placeholder='Company'\r\n                          onChange={handleCompanyChange}\r\n                          fluid\r\n              />\r\n            </Form>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Header style={{ paddingBottom: '0', marginTop: '0rem' }}>\r\n              Last Updated: {moment(internships.lastScraped(data)).fromNow()}\r\n            </Header>\r\n          </Grid.Column>\r\n          <Grid.Column textAlign={'right'}>\r\n            <Grid.Row>\r\n              <div style={{ paddingBottom: '0', paddingRight: '0.5rem' }}>\r\n                <Header style={{\r\n                  paddingBottom: '0', margin: '0 0 0 0', paddingRight: '0.5rem',\r\n                  paddingTop: '0.3rem', lineHeight: '10px',\r\n                  display: 'inline-block',\r\n                }} as={'h4'}>\r\n                  Key:\r\n                </Header>\r\n                <Label circular style={has}>\r\n                  Has skill\r\n                </Label>\r\n                <Label circular style={notHave}>\r\n                  Missing skill\r\n                </Label>\r\n              </div>\r\n            </Grid.Row>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n}\r\n\r\nSearchInternshipFeature.propTypes = {\r\n  onChildClick: PropTypes.func.isRequired,\r\n  passedData: PropTypes.array.isRequired,\r\n  locationVal: PropTypes.string.isRequired,\r\n  companyVal: PropTypes.string.isRequired,\r\n  sortVal: PropTypes.string.isRequired,\r\n  searchQuery: PropTypes.string.isRequired,\r\n  skillsVal: PropTypes.array.isRequired,\r\n  isRemote: PropTypes.bool.isRequired,\r\n  careerVal: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default SearchInternshipFeature;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport _ from 'lodash';\r\nimport { Card, Container, Grid, Header } from 'semantic-ui-react';\r\nimport InternshipListingCard from './InternshipListingCard';\r\nimport SearchInternshipFeature from './SearchInternshipFeature';\r\nimport InternshipsFilters from './InternshipFilters';\r\n\r\nfunction InternshipListing() {\r\n  const internships = new InternshipsFilters();\r\n  const getInternshipData = internships.mergeData();\r\n  const [data, setData] = useState(getInternshipData);\r\n  const [paginatedData, setPaginatedData] = useState(getInternshipData.slice(0, 40));\r\n  const [location, setLocation] = useState([]);\r\n  const [company, setCompany] = useState('any');\r\n  const [sort, setSort] = useState('date');\r\n  const [search, setSearch] = useState('');\r\n  const [skills, setSkills] = useState([]);\r\n  const [remote, setRemote] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [height, setHeight] = useState(0);\r\n  const [career, setCareer] = useState([]);\r\n  const ref = useRef(null);\r\n\r\n  /* Passes data up from SearchInternshipFeature. SetPaginatedData allows data to be rendered\r\n  * for infinite scroll. */\r\n  function handleChildClick(passedData, locationVal, companyVal, sortVal, searchQueryVal, skillsVal, isRemote, careerVal) {\r\n    setData(passedData);\r\n    setLocation(locationVal);\r\n    setCompany(companyVal);\r\n    setCareer(careerVal);\r\n    setSort(sortVal);\r\n    setSearch(searchQueryVal);\r\n    setSkills(skillsVal);\r\n    setRemote(isRemote);\r\n    setPage(1);\r\n    setPaginatedData(passedData.slice(0, 40));\r\n  }\r\n\r\n  /* Grabs the height */\r\n  useEffect(() => {\r\n    setHeight(ref.current.clientHeight);\r\n  });\r\n\r\n  /* Infinite scrolling */\r\n  function handleScroll() {\r\n    window.onscroll = function () {\r\n      const scroll = window.innerHeight + window.pageYOffset;\r\n      // if we hit the bottom\r\n      if (scroll >= height - 500) {\r\n        // if there are still more items to be loaded\r\n        if (page <= Math.ceil(data.length / 40)) {\r\n          const newPage = page + 1;\r\n          setPage(newPage);\r\n          setPaginatedData(data.slice(0, newPage * 40));\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  return (\r\n      <Container fluid style={{ paddingTop: '5rem', marginLeft: '0.5rem', marginRight: '0.5rem' }}>\r\n        <Grid columns={'equal'} doubling stackable>\r\n          <Grid.Row style={{ maxWidth: '80%', margin: 'auto' }}>\r\n            <SearchInternshipFeature onChildClick={handleChildClick} passedData={data}\r\n                                     companyVal={company} locationVal={location} sortVal={sort}\r\n                                     searchQuery={search} skillsVal={skills} isRemote={remote} careerVal={career}/>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ maxWidth: '80%', margin: 'auto', paddingBottom: '0px' }}>\r\n            <Header style={{ paddingLeft: '105px', paddingTop: '20px' }}>\r\n              Total Results: {internships.total(data)}\r\n            </Header>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ maxWidth: '80%', margin: 'auto' }}>\r\n            <div onScroll={handleScroll()} ref={ref}>\r\n              <Card.Group doubling centered stackable>\r\n                {_.map(paginatedData, (internship, index) => <InternshipListingCard\r\n                  internship={internship} key={index}/>)}\r\n              </Card.Group>\r\n            </div>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default InternshipListing;\r\n","import React from 'react';\r\nimport { Table, Header } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass StatisticsRow extends React.Component {\r\n\r\n  render() {\r\n    const total = this.props.statistics.entries;\r\n    const position = ((this.props.statistics.position / total) * 100).toString().substring(0, 5);\r\n    const company = ((this.props.statistics.company / total) * 100).toString().substring(0, 5);\r\n    const contact = ((this.props.statistics.contact / total) * 100).toString().substring(0, 5);\r\n    const location = ((this.props.statistics.location / total) * 100).toString().substring(0, 5);\r\n    const posted = ((this.props.statistics.posted / total) * 100).toString().substring(0, 5);\r\n    const due = ((this.props.statistics.due / total) * 100).toString().substring(0, 5);\r\n    const start = ((this.props.statistics.start / total) * 100).toString().substring(0, 5);\r\n    const end = ((this.props.statistics.end / total) * 100).toString().substring(0, 5);\r\n    const compensation = ((this.props.statistics.compensation / total) * 100).toString().substring(0, 5);\r\n    const qualifications = ((this.props.statistics.qualifications / total) * 100).toString().substring(0, 5);\r\n    const skills = ((this.props.statistics.skills / total) * 100).toString().substring(0, 5);\r\n    const description = ((this.props.statistics.description / total) * 100).toString().substring(0, 5);\r\n    const lastScraped = this.props.statistics.lastScraped;\r\n\r\n    function formatDate(stringDate) {\r\n      const date = new Date(stringDate).toDateString();\r\n      if (date !== 'Invalid Date') {\r\n        return date;\r\n      }\r\n      return 'N/A';\r\n    }\r\n\r\n    function lastRow(site) {\r\n      if (site === 'Total') {\r\n        return (\r\n            <Table.Row>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {site}\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  N/A\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {total}\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {position}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {company}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {contact}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {location}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {posted}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {due}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {start}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {end}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {compensation}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {qualifications}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {skills}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {description}%\r\n                </Header>\r\n              </Table.Cell>\r\n            </Table.Row>\r\n        );\r\n      } return (\r\n            <Table.Row>\r\n              <Table.Cell>{site}</Table.Cell>\r\n              <Table.Cell>{formatDate(lastScraped)}</Table.Cell>\r\n              <Table.Cell>{total}</Table.Cell>\r\n              <Table.Cell>{position}%</Table.Cell>\r\n              <Table.Cell>{company}%</Table.Cell>\r\n              <Table.Cell>{contact}%</Table.Cell>\r\n              <Table.Cell>{location}%</Table.Cell>\r\n              <Table.Cell>{posted}%</Table.Cell>\r\n              <Table.Cell>{due}%</Table.Cell>\r\n              <Table.Cell>{start}%</Table.Cell>\r\n              <Table.Cell>{end}%</Table.Cell>\r\n              <Table.Cell>{compensation}%</Table.Cell>\r\n              <Table.Cell>{qualifications}%</Table.Cell>\r\n              <Table.Cell>{skills}%</Table.Cell>\r\n              <Table.Cell>{description}%</Table.Cell>\r\n            </Table.Row>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n          {lastRow(this.props.statistics.site)}\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nStatisticsRow.propTypes = {\r\n  statistics: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default StatisticsRow;\r\n","import React from 'react';\r\nimport { Container, Table, Header, Icon } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport statisticData from './data/statistics.data';\r\nimport StatisticsRow from './StatisticsRow';\r\n\r\n/** A simple static component to render some text for the Statistics page. */\r\nclass Statistics extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      statistics: statisticData,\r\n    };\r\n  }\r\n\r\n   lowercaseFirstLetter(string) {\r\n    return string.charAt(0).toLowerCase() + string.slice(1);\r\n  }\r\n\r\n  onClick = (event) => {\r\n    let value = this.lowercaseFirstLetter(event.target.textContent);\r\n    value = value.replace(/ +/g, '');\r\n    this.setState({ statistics: _.orderBy(statisticData, value, ['desc']) });\r\n    console.log(this.state.statistics);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <Container style={{ marginTop: '10rem', marginBottom: '4rem' }}>\r\n            <Header textAlign={'center'}\r\n                    as={'h2'}\r\n                    style={{ marginBottom: '2rem' }}>\r\n              Statistics\r\n            </Header>\r\n            <Table attached='top' celled sortable>\r\n              <Table.Header onClick={(event) => this.onClick(event)}>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Site\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Last Scraped\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Entries\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Position\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Company\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Contact\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Location\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Posted\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Due\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Start\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>End\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Compensation\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Qualifications\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Skills\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Description\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                {_.map((this.state.statistics), (statistics, index) => <StatisticsRow\r\n                    statistics={statistics} key={index}/>)}\r\n              </Table.Body>\r\n            </Table>\r\n          </Container>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport { Container, Menu, Image } from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n/** A simple static component to render some text for the NavBar page. */\r\nclass NavBar extends React.Component {\r\n  render() {\r\n    return (\r\n        <Container>\r\n          <Menu className={'top meni fixed borderless'}\r\n                style={{ backgroundColor: '#C1C8E4', border: 0, boxShadow: '0 0 BLACK' }}>\r\n            <Menu.Item>\r\n              <a href={'/internaloha'}>\r\n                <Image src={'images/logo.png'} size={'small'}/>\r\n              </a>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.css';\r\nimport './index.css';\r\n// import Landing from './Landing';\r\nimport InternshipListing from './InternshipListing';\r\nimport Statistics from './Statistcs';\r\nimport NavBar from './NavBar';\r\n// import Profile from './Profile';\r\n// import JobCart from './JobCart';\r\n// import EditProfile from './EditProfile';\r\n// import RecommendedInternships from './RecommendedInternships';\r\n\r\n/**\r\n * The top level layout for the site.\r\n */\r\nconst App = () => (\r\n    <Router>\r\n      <NavBar/>\r\n      <Switch>\r\n        {/* <Route exact path={'/'} component={Landing}/> */}\r\n        <Route exact path={'/internaloha'} component={InternshipListing}/>\r\n        <Route exact path={'/all-internships'} component={InternshipListing}/>\r\n        <Route exact path={'/statistics'} component={Statistics}/>\r\n        {/* <Route exact path={'/profile'} component={Profile}/> */}\r\n        {/* <Route exact path={'/applications'} component={JobCart}/> */}\r\n        {/* <Route exact path={'/edit-profile'} component={EditProfile}/> */}\r\n      </Switch>\r\n    </Router>\r\n);\r\n\r\nrender(<App/>, document.getElementById('root'));\r\n\r\n// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import 'semantic-ui-css/semantic.css';\r\n// import './index.css';\r\n// import InternshipListing from './InternshipListing';\r\n// import Statistics from './Statistcs';\r\n// import NavBar from './NavBar';\r\n//\r\n// /**\r\n//  * The top level layout for the site.\r\n//  */\r\n//\r\n// ReactDOM.render(\r\n//     <React.StrictMode>\r\n//       <NavBar/>\r\n//       <InternshipListing/>\r\n//       <Statistics/>\r\n//     </React.StrictMode>,\r\n//   // eslint-disable-next-line no-undef\r\n//   document.getElementById('root'),\r\n// );\r\n"],"sourceRoot":""}