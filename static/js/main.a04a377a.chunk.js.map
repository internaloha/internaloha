{"version":3,"sources":["InternshipListingCard.jsx","InternshipFilters.jsx","RecommendationScript.js","SearchInternshipFeature.jsx","InternshipListing.jsx","StatisticsRow.jsx","StatisticsChart.jsx","Statistics.jsx","NavBar.jsx","index.js"],"names":["formatDate","stringDate","date","moment","fromNow","InternshipListingCard","props","Card","className","Content","Header","textAlign","href","internship","url","target","rel","style","color","position","Meta","paddingTop","Grid","doubling","Row","columns","Column","floated","Icon","company","location","city","state","zip","posted","lastScraped","Description","overflow","maxHeight","internshipDescription","noScriptDescript","replace","dangerouslySetInnerHTML","__html","e","description","extra","skills","map","skill","selectedSkills","includes","Label","circular","key","margin","backgroundColor","hasSkill","remote","isRemote","Button","borderRadius","siteName","Popup","content","mouseLeaveDelay","on","trigger","marginTop","size","fontSize","Modal","closeIcon","Form","Field","Radio","label","name","value","checked","TextArea","placeholder","Actions","InternshipsFilters","total","data","length","_","concat","iHire","simplyData","internships","monsterData","linkedinData","youternData","glassData","indeedData","idealist","acm","coolworks","aexpress","apple","zipData","ciscoData","stackOverflow","angelList","hawaiislack","companies","categories","flattenDeep","uniq","sort","number","groupBy","info","i","push","text","num","unshift","locationAmount","flattenSkills","uniqueSkills","orderBy","tags","exists","counter","list","toString","toLowerCase","searchQuery","input","arrLocations","filter","dropdownCareerInterest","sortedCollection","sortBy","career_interest_to_skill","o","career","join","Dropdown","Item","marginLeft","basic","inverted","SearchInternshipFeature","onChildClick","locationVal","companyVal","sortVal","skillsVal","careerVal","mergeData","locationChange","companyChange","sortChange","searchQueryChange","skillChange","remoteCheck","careerChange","setFilters","remoteFilter","searchFiltered","filterBySearch","companyFiltered","filterByCompany","sorted","sortedBy","recommendedData","careers","newState","careerSkills","k","j","totalSkills","foundTag","recommendation","console","log","window","scrollTo","top","left","behavior","getSort","event","Segment","width","id","onChange","onSubmit","fluid","multiple","selection","clearable","control","options","children","search","dropdownSkills","flexGrow","dropdownLocation","Checkbox","onClick","paddingBottom","paddingRight","lineHeight","display","as","InternshipListing","getInternshipData","useState","setData","slice","paginatedData","setPaginatedData","setLocation","setCompany","setSort","setSearch","setSkills","setRemote","page","setPage","height","setHeight","setCareer","ref","useRef","totalListing","useEffect","current","clientHeight","Container","marginRight","stackable","maxWidth","marginBottom","align","getData","passedData","searchQueryVal","paddingLeft","onScroll","onscroll","innerHeight","pageYOffset","Math","ceil","newPage","Group","centered","index","StatisticsRow","site","this","statistics","substring","contact","due","start","end","compensation","qualifications","Table","Cell","Date","toDateString","React","Component","StatisticsChart","chart","Highcharts","title","credits","enabled","tooltip","shared","crosshairs","yAxis","allowDecimals","xAxis","accessibility","rangeDescription","labels","formatter","toLocaleString","dateStyle","legend","layout","verticalAlign","plotOptions","series","connectorAllowed","responsive","rules","condition","chartOptions","borderWidth","setState","Statistics","lowercaseFirstLetter","textContent","statisticData","string","charAt","statisticsCSV","arr","siteInfo","Set","dates","chartData","allData","keys","Object","types","arrays","obj","formatInfo","attached","celled","sortable","HeaderCell","Body","NavBar","Menu","border","boxShadow","Image","src","withRouter","App","exact","path","component","render","document","getElementById"],"mappings":"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","file":"static/js/main.a04a377a.chunk.js","sourcesContent":["import {\r\n  Button,\r\n  Card,\r\n  Grid,\r\n  Icon,\r\n  Label,\r\n  Modal,\r\n  Popup,\r\n  Form,\r\n  Radio,\r\n} from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\n\r\n// eslint-disable-next-line consistent-return\r\nfunction isRemote(remote) {\r\n  if (remote) {\r\n    return (\r\n        <Label circular style={{\r\n          backgroundColor: '#263763',\r\n          color: 'white',\r\n          margin: '0.2rem',\r\n        }}>\r\n          Remote\r\n        </Label>\r\n    );\r\n  }\r\n}\r\n\r\nfunction hasSkill(skill, selectedSkills) {\r\n  const studentSkills = selectedSkills;\r\n  const has = {\r\n    margin: '0.2rem',\r\n    backgroundColor: '#5680E9',\r\n    color: 'white',\r\n  };\r\n  const notHave = {\r\n    margin: '0.2rem',\r\n    backgroundColor: 'rgb(244, 244, 244)',\r\n    color: '#8f8f8f',\r\n  };\r\n  if (studentSkills.includes(skill)) {\r\n    return (\r\n        <Label circular key={skill} style={has}>\r\n          {skill}\r\n        </Label>\r\n    );\r\n  }\r\n  return (\r\n      <Label circular key={skill} style={notHave}>\r\n        {skill}\r\n      </Label>\r\n  );\r\n}\r\n\r\nfunction formatDate(stringDate) {\r\n  if (typeof stringDate === 'undefined') {\r\n    return 'N/A';\r\n  }\r\n  const date = moment(stringDate).fromNow();\r\n  if (date !== 'Invalid Date') {\r\n    return date;\r\n  }\r\n  return 'Unknown';\r\n}\r\n\r\nfunction description(internshipDescription) {\r\n  try {\r\n    const noScriptDescript = internshipDescription.replace(/<script>(.*?)<\\/script>/gi, '');\r\n    return (\r\n        <span dangerouslySetInnerHTML={{ __html: noScriptDescript }}/>\r\n        // internshipDescription.split('\\n').map((item, key) => <span key={key}>{item}<br/></span>)\r\n    );\r\n  } catch (e) {\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction siteName(url) {\r\n  try {\r\n    if (url.includes('linkedin')) {\r\n      return 'LinkedIn';\r\n    }\r\n    if (url.includes('ziprecruiter')) {\r\n      return 'ZipRecruiter';\r\n    }\r\n    if (url.includes('monster')) {\r\n      return 'Monster';\r\n    }\r\n    if (url.includes('simplyhired')) {\r\n      return 'SimplyHired';\r\n    }\r\n    if (url.includes('internships')) {\r\n      return 'Chegg';\r\n    }\r\n    if (url.includes('youtern')) {\r\n      return 'Youtern';\r\n    }\r\n    if (url.includes('ihiretechnology')) {\r\n      return 'iHireTechnology';\r\n    }\r\n    if (url.includes('stackoverflow')) {\r\n      return 'iHireTechnology';\r\n    }\r\n    if (url.includes('glassdoor')) {\r\n      return 'Glassdoor';\r\n    }\r\n    if (url.includes('indeed')) {\r\n      return 'Indeed';\r\n    }\r\n    if (url.includes('angel')) {\r\n      return 'AngelList';\r\n    }\r\n    if (url.includes('acm')) {\r\n      return 'ACM';\r\n    }\r\n    if (url.includes('apple')) {\r\n      return 'Apple';\r\n    }\r\n    if (url.includes('americanexpress')) {\r\n      return 'American Express';\r\n    }\r\n    if (url.includes('coolworks')) {\r\n      return 'Coolworks';\r\n    }\r\n    if (url.includes('slack')) {\r\n      return 'Hawaii Slack';\r\n    }\r\n    return 'NSF-REU';\r\n  } catch (e) {\r\n    return 'Unknown';\r\n  }\r\n}\r\n\r\nfunction InternshipListingCard(props) {\r\n  return (\r\n      <Card className={'listings'}>\r\n        <Card.Content>\r\n          <Card.Header textAlign={'center'}>\r\n            <a href={props.internship.url} target='_blank' rel=\"noopener noreferrer\">\r\n              <p style={{ color: '#263763' }}>\r\n                {props.internship.position}\r\n              </p>\r\n            </a>\r\n          </Card.Header>\r\n          <Card.Meta style={{ paddingTop: '0.6rem' }}>\r\n            <Grid doubling>\r\n              <Grid.Row columns={1}>\r\n                <Grid.Column floated={'left'}>\r\n                  <p>\r\n                    <Icon className='building'/>\r\n                    <span>{props.internship.company} </span>\r\n                  </p>\r\n                </Grid.Column>\r\n                <Grid.Column floated={'left'}>\r\n                  <Icon className='map marker alternate'/>\r\n                  <span>Internship Location: {props.internship.location.city}, {props.internship.location.state} {props.internship.location.zip}</span>\r\n                </Grid.Column>\r\n                <Grid.Column floated={'left'}>\r\n                  <Icon className='calendar alternate'/>\r\n                  <span>Posted: {formatDate(props.internship.posted)}</span>\r\n                </Grid.Column>\r\n                <Grid.Column floated={'left'}>\r\n                  <Icon className='calendar alternate'/>\r\n                  <span>Last Updated: {formatDate(props.internship.lastScraped)}</span>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Card.Meta>\r\n          <Card.Description style={{ paddingTop: '1rem' }}>\r\n            <div style={{ overflow: 'auto', maxHeight: '250px' }}>\r\n              {description(props.internship.description)}\r\n            </div>\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          {props.internship.skills.map((skill) => (\r\n              hasSkill(skill, props.selectedSkills)))}\r\n          {isRemote(props.internship.remote)}\r\n        </Card.Content>\r\n        <Card.Content extra textAlign={'center'}>\r\n          <a target='_blank' rel=\"noopener noreferrer\" href={props.internship.url}>\r\n            <Button style={{ borderRadius: '10rem' }}>\r\n              See Full Listing: {siteName(props.internship.url)}\r\n            </Button>\r\n          </a>\r\n          <div>\r\n            <Popup\r\n                content='Added to favorites!'\r\n                mouseLeaveDelay={200}\r\n                on='click'\r\n                trigger={\r\n                  <button className=\"ui icon button\" style={{ marginTop: '1em', size: '100%', maxHeight: '50px', backgroundColor: 'transparent' }}>\r\n                    <i className=\"heart icon\" style={{ fontSize: '100%' }}/>\r\n                  </button>\r\n                }\r\n            />\r\n            <Modal closeIcon trigger={\r\n              <button className=\"ui icon button\" style={{ marginTop: '1em', size: '100%', maxHeight: '50px', backgroundColor: 'transparent' }}>\r\n                <i className=\"exclamation triangle icon\" style={{ fontSize: '100%' }}/>\r\n              </button>\r\n            }>\r\n              <Modal.Header>Report a Problem</Modal.Header>\r\n              <Modal.Content>\r\n                <Modal.Description>\r\n                  <Form>\r\n                    <Form.Field>\r\n                      <Radio\r\n                          label='Broken Link'\r\n                          name='radioGroup'\r\n                          value='this'\r\n                          checked={'this'}\r\n                      />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <Radio\r\n                          label='Missing Data Fields'\r\n                          name='radioGroup'\r\n                          value='that'\r\n                          checked={'that'}\r\n                      />\r\n                    </Form.Field>\r\n                    <Form.TextArea label='Other' placeholder='Explain the error here. Feel free to provide screenshots or links.' />\r\n                  </Form>\r\n                </Modal.Description>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                <Button style={{ backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n                  Report\r\n                </Button>\r\n              </Modal.Actions>\r\n            </Modal>\r\n          </div>\r\n        </Card.Content>\r\n      </Card>\r\n  );\r\n}\r\n\r\nInternshipListingCard.propTypes = {\r\n  internship: PropTypes.object.isRequired,\r\n  selectedSkills: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default InternshipListingCard;\r\n","import _ from 'lodash';\r\nimport linkedinData from './data/linkedin.parsed.data';\r\nimport simplyData from './data/simplyHired.parsed.data';\r\nimport zipData from './data/ziprecruiter.parsed.data';\r\nimport monsterData from './data/monster.parsed.data';\r\nimport youternData from './data/youtern.parsed.data';\r\nimport iHire from './data/iHireTech.parsed.data';\r\nimport glassData from './data/glassdoor.parsed.data.json';\r\nimport indeedData from './data/indeed.parsed.data';\r\nimport apple from './data/apple.parsed.data';\r\nimport aexpress from './data/aexpress.parsed.data';\r\nimport acm from './data/acm.parsed.data';\r\nimport idealist from './data/idealist.parsed.data';\r\nimport coolworks from './data/coolworks.parsed.data';\r\nimport internships from './data/internships.parsed.data.json';\r\nimport ciscoData from './data/cisco.parsed.data.json';\r\nimport stackOverflow from './data/stackoverflow.parsed.data.json';\r\nimport angelList from './data/angellist.parsed.data.json';\r\nimport hawaiislack from './data/hawaiislack.parsed.data.json';\r\n\r\nclass InternshipsFilters {\r\n  /* Returns total number of internship listing */\r\n  total = (data) => data.length;\r\n\r\n  lastScraped = (data) => data[0].lastScraped;\r\n\r\n  mergeData() {\r\n    let data = [];\r\n    data = _.concat(data, iHire);\r\n    data = _.concat(data, simplyData);\r\n    data = _.concat(data, internships);\r\n    data = _.concat(data, monsterData);\r\n    data = _.concat(data, linkedinData);\r\n    data = _.concat(data, youternData);\r\n    data = _.concat(data, glassData);\r\n    data = _.concat(data, indeedData);\r\n    data = _.concat(data, idealist);\r\n    data = _.concat(data, acm);\r\n    data = _.concat(data, coolworks);\r\n    data = _.concat(data, aexpress);\r\n    data = _.concat(data, apple);\r\n    data = _.concat(data, zipData);\r\n    data = _.concat(data, ciscoData);\r\n    data = _.concat(data, stackOverflow);\r\n    data = _.concat(data, angelList);\r\n    data = _.concat(data, hawaiislack);\r\n    return data;\r\n  }\r\n\r\n  getData(name) {\r\n    let data = [];\r\n    if (name === 'iHire') {\r\n      data = _.concat(data, iHire);\r\n    }\r\n    if (name === 'SimplyHired') {\r\n      data = _.concat(data, simplyData);\r\n    }\r\n    if (name === 'Chegg') {\r\n      data = _.concat(data, internships);\r\n    }\r\n    if (name === 'Monster') {\r\n      data = _.concat(data, monsterData);\r\n    }\r\n    if (name === 'LinkedIn') {\r\n      data = _.concat(data, linkedinData);\r\n    }\r\n    if (name === 'Youtern') {\r\n      data = _.concat(data, youternData);\r\n    }\r\n    if (name === 'Glassdoor') {\r\n      data = _.concat(data, glassData);\r\n    }\r\n    if (name === 'Indeed') {\r\n      data = _.concat(data, indeedData);\r\n    }\r\n    if (name === 'Idealist') {\r\n      data = _.concat(data, idealist);\r\n    }\r\n    if (name === 'ACM') {\r\n      data = _.concat(data, acm);\r\n    }\r\n    if (name === 'Coolworks') {\r\n      data = _.concat(data, coolworks);\r\n    }\r\n    if (name === 'AExpress') {\r\n      data = _.concat(data, aexpress);\r\n    }\r\n    if (name === 'Apple') {\r\n      data = _.concat(data, apple);\r\n    }\r\n    if (name === 'ZipRecruiter') {\r\n      data = _.concat(data, zipData);\r\n    }\r\n    if (name === 'Cisco') {\r\n      data = _.concat(data, ciscoData);\r\n    }\r\n    if (name === 'StackOverflow') {\r\n      data = _.concat(data, stackOverflow);\r\n    }\r\n    if (name === 'AngelList') {\r\n      data = _.concat(data, angelList);\r\n    }\r\n    if (name === 'HawaiiSlack') {\r\n      data = _.concat(data, hawaiislack);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /* Returns array of companies for us to be able to pass into semantic ui's dropdown. Format:\r\n  * key: unique key of the company\r\n  * text: Text that shows up in dropdown\r\n  * value: value used to search\r\n  * num: the number of internships with said company */\r\n  dropdownCompany(data) {\r\n    let companies = _.map(data, 'company');\r\n    const categories = _.flattenDeep(companies);\r\n    companies = _.uniq(categories).sort();\r\n    const number = _.groupBy(data, 'company');\r\n    const info = [];\r\n    for (let i = 0; i < companies.length; i++) {\r\n      info.push({\r\n        key: companies[i],\r\n        text: `${companies[i]} (${number[companies[i]].length})`,\r\n        value: companies[i],\r\n        num: number[companies[i]].length,\r\n      });\r\n    }\r\n    // Adding any parameter to front of array\r\n    info.unshift({\r\n      key: 'any',\r\n      text: 'Any',\r\n      value: 'any',\r\n    });\r\n    return info;\r\n  }\r\n\r\n  /* Returns array of companies for us to be able to pass into semantic ui's dropdown. Format:\r\n * key: unique key of the company\r\n * text: Text that shows up in dropdown\r\n * value: value used to search\r\n * num: the number of internships with said company */\r\n  dropdownLocation(data) {\r\n    let location = _.map(data, 'location.state');\r\n    const categories = _.flattenDeep(location);\r\n    location = _.uniq(categories).sort();\r\n    const number = _.groupBy(data, 'location.state');\r\n    const info = [];\r\n    for (let i = 0; i < location.length; i++) {\r\n      const locationAmount = number[location[i]].length;\r\n      info.push({\r\n        key: location[i],\r\n        text: `${location[i]} (${locationAmount})`,\r\n        value: location[i],\r\n        num: number[location[i]].length,\r\n      });\r\n    }\r\n    return info;\r\n  }\r\n\r\n  /* Returns array of skills for us to be able to pass into semantic ui's dropdown. Format:\r\n* key: unique key of the skill\r\n* text: Text that shows up in dropdown\r\n* value: value used to search\r\n* num: the number of internships with the associated skills */\r\n  dropdownSkills(data) {\r\n    const skills = _.map(data, 'skills');\r\n    const flattenSkills = _.flattenDeep(skills);\r\n    const uniqueSkills = _.uniq(flattenSkills).sort();\r\n    const number = _.groupBy(flattenSkills);\r\n    const info = [];\r\n    for (let i = 0; i < uniqueSkills.length; i++) {\r\n      info.push({\r\n        key: uniqueSkills[i],\r\n        text: `${uniqueSkills[i]} (${number[uniqueSkills[i]].length})`,\r\n        value: uniqueSkills[i],\r\n        num: number[uniqueSkills[i]].length,\r\n      });\r\n    }\r\n    return info;\r\n  }\r\n\r\n  /* Sorts list by given parameters */\r\n  sortedBy(data, value) {\r\n    if (value === 'posted') {\r\n      return _.orderBy(data, ['posted'], ['desc']);\r\n    }\r\n    if (value === 'company') {\r\n      return _.orderBy(data, ['company'], ['asc']);\r\n    }\r\n    if (value === 'internship') {\r\n      return _.orderBy(data, ['position'], ['asc']);\r\n    }\r\n    return _.orderBy(data, ['posted'], ['desc']);\r\n  }\r\n\r\n  /* Returns a list based on skill/tags inputs */\r\n  filterBySkills(data, tags) {\r\n    if (tags.length === 0) {\r\n      return data;\r\n    }\r\n    const skills = [];\r\n    let exists = false;\r\n    let counter = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      // if any of the tags exist in data set, push it to skills and go to next\r\n      while (counter < tags.length && exists === false) {\r\n        if (data[i].skills.includes(tags[counter])) {\r\n          skills.push(data[i]);\r\n          exists = true;\r\n        }\r\n        counter++;\r\n      }\r\n      counter = 0;\r\n      exists = false;\r\n    }\r\n    return skills;\r\n  }\r\n\r\n  /* Returns a sorted list by company name */\r\n  filterByCompany(data, company) {\r\n    if (company === 'any' || company.length === 0) {\r\n      return data;\r\n    }\r\n    const list = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      const companies = data[i].company;\r\n      const lowercase = companies.toString().toLowerCase();\r\n      if (lowercase.includes(company.toString().toLowerCase())) {\r\n        list.push(data[i]);\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n\r\n  /* Returns a list based on search query */\r\n  filterBySearch(data, searchQuery) {\r\n    if (searchQuery.length === 0) {\r\n      return data;\r\n    }\r\n    const list = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      const position = data[i].position;\r\n      const lowercase = position.toString().toLowerCase();\r\n      if (lowercase.includes(searchQuery.toString().toLowerCase())) {\r\n        list.push(data[i]);\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n\r\n  /* Returns a sorted list by location */\r\n  filterByLocation(data, input) {\r\n    if (input.length === 0) {\r\n      return data;\r\n    }\r\n    let arrLocations = [];\r\n    for (let i = 0; i < input.length; i++) {\r\n      arrLocations = arrLocations.concat(_.filter(data, ['location.state', input[i]]));\r\n    }\r\n    return arrLocations;\r\n  }\r\n\r\n  isRemote(data, value) {\r\n    if (value === false) {\r\n      return data;\r\n    }\r\n     return _.filter(data, ['remote', true]);\r\n  }\r\n}\r\n\r\nexport default InternshipsFilters;\r\n","import natural from 'natural';\r\nimport React from 'react';\r\nimport _ from 'lodash';\r\nimport {\r\n  Popup,\r\n  Dropdown,\r\n} from 'semantic-ui-react';\r\nimport career_interest_to_skill from './career_interest_to_skill';\r\n\r\nfunction test(data) {\r\n  const TfIdf = natural.TfIdf;\r\n  const tfidf = new TfIdf();\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    tfidf.addDocument(data[i].description);\r\n  }\r\n\r\n  const tfidfData = [];\r\n\r\n  // tfidf.addDocument('this document is about node.');\r\n  // tfidf.addDocument('this document is about ruby.');\r\n  // tfidf.addDocument('this document is about ruby and node.');\r\n  // tfidf.addDocument('this document is about node. it has node examples');\r\n\r\n  console.log('javascript full-stack css hmtl --------------------------------');\r\n\r\n  tfidf.tfidfs('javascript full-stack css hmtl ', function (i, measure) {\r\n    //  console.log('document #' + i + ' is ' + measure);\r\n    if (measure > 6) {\r\n      console.log(`document #${i} is ${measure}`);\r\n      tfidfData.push(data[i]);\r\n    }\r\n  });\r\n\r\n  // console.log(tfidfData);\r\n  return tfidfData;\r\n\r\n  // console.log('ruby --------------------------------');\r\n  // tfidf.tfidfs('ruby', function (i, measure) {\r\n  //   console.log('document #' + i + ' is ' + measure);\r\n  // });\r\n}\r\n\r\nfunction dropdownCareerInterest() {\r\n\r\n  const sortedCollection = _.sortBy(career_interest_to_skill, [function (o) { return o.career; }]);\r\n\r\n  const info = [];\r\n  for (let i = 0; i < sortedCollection.length; i++) {\r\n    const skills = sortedCollection[i].skills.join(', ');\r\n    info.push({\r\n      key: sortedCollection[i].career,\r\n      text: sortedCollection[i].career,\r\n      value: sortedCollection[i].career,\r\n      content: (\r\n          <Popup content={`Associated Skills: ${skills}`}\r\n                 trigger={<Dropdown.Item>\r\n            {sortedCollection[i].career}</Dropdown.Item>}\r\n                 style={{ marginLeft: '12%' }}\r\n                 position={'right center'}\r\n                 basic inverted\r\n          />\r\n      ),\r\n    });\r\n  }\r\n  return info;\r\n}\r\n\r\nfunction recommendation(tags, careers, data, location) {\r\n\r\n  if (tags.length === 0 && careers.length === 0) {\r\n    if (location.length !== 0) {\r\n      let arrLocations = [];\r\n      for (let i = 0; i < location.length; i++) {\r\n        const newState = _.filter(data, ['location.state', location[i]]);\r\n        arrLocations = arrLocations.concat(newState);\r\n      }\r\n      return arrLocations;\r\n    }\r\n    return data;\r\n\r\n  }\r\n\r\n  const skills = [];\r\n\r\n  let careerSkills = [];\r\n  for (let i = 0; i < career_interest_to_skill.length; i++) {\r\n    for (let k = 0; k < careers.length; k++) {\r\n      if (careers[k] === career_interest_to_skill[i].career) {\r\n        for (let j = 0; j < career_interest_to_skill[i].skills.length; j++) {\r\n          careerSkills.push(career_interest_to_skill[i].skills[j]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  careerSkills = _.uniq(careerSkills);\r\n\r\n  // const lowerCaseTags = [];\r\n\r\n  // for (let i = 0; i < tags.length; i++) {\r\n  //   lowerCaseTags.push(tags[i].toString().toLowerCase());\r\n  // }\r\n\r\n  const totalSkills = _.uniq(careerSkills.concat(tags));\r\n\r\n  // console.log(totalSkills);\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    let foundTag = false;\r\n    let num = 0;\r\n    let total = 0;\r\n    for (let j = 0; j < data[i].skills.length; j++) {\r\n      for (let k = 0; k < totalSkills.length; k++) {\r\n        if (data[i].skills[j].includes(totalSkills[k])) {\r\n          num++;\r\n          foundTag = true;\r\n        }\r\n      }\r\n      total = data[i].skills.length;\r\n    }\r\n    if (foundTag === true) {\r\n\r\n      // eslint-disable-next-line no-param-reassign\r\n      data[i].recommendation = num / total;\r\n      skills.push(data[i]);\r\n    }\r\n  }\r\n\r\n  const sorted = _.orderBy(skills, ['recommendation'], ['desc']);\r\n\r\n  // console.log(sorted);\r\n\r\n// for (let i = 0; i < data.length; i++) {\r\n//   // if any of the tags exist in data set, push it to skills and go to next\r\n//   while (counter < totalSkills.length && exists === false) {\r\n//     if (data[i].skills.includes(totalSkills[counter])) {\r\n//       skills.push(data[i]);\r\n//       exists = true;\r\n//     }\r\n//     counter++;\r\n//   }\r\n//   counter = 0;\r\n//   exists = false;\r\n// }\r\n// console.log(skills);\r\n  console.log(location);\r\n\r\n  if (location.length === 0) {\r\n    return sorted;\r\n  }\r\n\r\n  // if (location.length === 1) {\r\n  //   return _.filter(sorted, ['location.state', location]);\r\n  // } else {\r\n  let arrLocations = [];\r\n  for (let i = 0; i < location.length; i++) {\r\n    arrLocations = arrLocations.concat(_.filter(sorted, ['location.state', location[i]]));\r\n  }\r\n  return arrLocations;\r\n  // }\r\n  //\r\n  // console.log(sorted);\r\n  // console.log(_.filter(sorted, ['location.state', location]));\r\n  // return _.filter(sorted, ['location.state', location]);\r\n\r\n}\r\n\r\nfunction isRemoteFunc(data, value) {\r\n  if (value === false) {\r\n    return data;\r\n  }\r\n  console.log(_.filter(data, ['remote', true]));\r\n  return _.filter(data, ['remote', true]);\r\n}\r\n\r\nexport { recommendation, dropdownCareerInterest, test, isRemoteFunc };\r\n","import React from 'react';\r\nimport {\r\n  Segment,\r\n  Header,\r\n  Dropdown,\r\n  Label,\r\n  Form,\r\n  Checkbox,\r\n  Grid, Radio,\r\n} from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport InternshipsFilters from './InternshipFilters';\r\nimport { dropdownCareerInterest, recommendation } from './RecommendationScript';\r\n\r\nfunction SearchInternshipFeature({\r\n                                   onChildClick,\r\n                                   locationVal,\r\n                                   companyVal,\r\n                                   sortVal,\r\n                                   searchQuery,\r\n                                   skillsVal,\r\n                                   isRemote,\r\n                                   careerVal,\r\n                                 }) {\r\n  const internships = new InternshipsFilters();\r\n  const data = internships.mergeData();\r\n  let locationChange = locationVal;\r\n  const companyChange = companyVal;\r\n  let sortChange = sortVal;\r\n  const searchQueryChange = searchQuery;\r\n  let skillChange = skillsVal;\r\n  let remoteCheck = isRemote;\r\n  let careerChange = careerVal;\r\n  const sortBy = [\r\n    { key: 'posted', text: 'Posted Date', value: 'posted' },\r\n    { key: 'internship', text: 'Internship (A-Z)', value: 'internship' },\r\n    { key: 'company', text: 'Company (A-Z)', value: 'company' },\r\n  ];\r\n  const setFilters = () => {\r\n    const remoteFilter = internships.isRemote(data, remoteCheck);\r\n    const searchFiltered = internships.filterBySearch(remoteFilter, searchQueryChange);\r\n    const companyFiltered = internships.filterByCompany(searchFiltered, companyChange);\r\n    const sorted = internships.sortedBy(companyFiltered, sortChange);\r\n    const recommendedData = recommendation(skillChange, careerChange, sorted, locationChange);\r\n    onChildClick(recommendedData, locationChange, companyChange, sortChange, searchQueryChange, skillChange, remoteCheck, careerChange);\r\n    window.scrollTo({\r\n      top: 30,\r\n      left: 100,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n  const getRemote = () => {\r\n    remoteCheck = !remoteCheck;\r\n    setFilters();\r\n  };\r\n  const handleSubmit = () => {\r\n    setFilters();\r\n  };\r\n  const getLocation = (event, { value }) => {\r\n    locationChange = value;\r\n    setFilters();\r\n  };\r\n  const getSort = (event, { value }) => {\r\n    sortChange = value;\r\n    setFilters();\r\n  };\r\n  const getSkills = (event, { value }) => {\r\n    skillChange = value;\r\n    setFilters();\r\n  };\r\n  const getCareerInterest = (event, { value }) => {\r\n    careerChange = value;\r\n    setFilters();\r\n  };\r\n  const has = {\r\n    margin: '0.2rem',\r\n    backgroundColor: '#5680E9',\r\n    color: 'white',\r\n  };\r\n  const notHave = {\r\n    margin: '0.2rem',\r\n    backgroundColor: 'rgb(244, 244, 244)',\r\n    color: '#8f8f8f',\r\n  };\r\n  return (\r\n    <Segment style={{ width: '100%', borderRadius: '10px', marginTop: '3rem' }}>\r\n      <Grid columns={'equal'}>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <p>\r\n              <p>\r\n                <Form>\r\n                  <Form.Field>\r\n                    Sort By: {''}\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <Radio\r\n                      label={sortBy[0].text}\r\n                      value={sortBy[0].value}\r\n                      checked={sortChange === sortBy[0].value}\r\n                      id=\"1\"\r\n                      onChange={getSort}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <Radio\r\n                      label= {sortBy[1].text}\r\n                      value={sortBy[1].value}\r\n                      checked={sortChange === sortBy[1].value}\r\n                      id=\"2\"\r\n                      onChange={getSort}\r\n                    />\r\n                  </Form.Field>\r\n                  <Form.Field>\r\n                    <Radio\r\n                      label= {sortBy[2].text}\r\n                      value={sortBy[2].value}\r\n                      checked={sortChange === sortBy[2].value}\r\n                      id=\"3\"\r\n                      onChange={getSort}\r\n                    />\r\n                  </Form.Field>\r\n                </Form>\r\n              </p>\r\n            </p>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Dropdown\r\n                fluid multiple selection clearable\r\n                control={Dropdown}\r\n                options={dropdownCareerInterest()}\r\n                label={{ children: 'Career Interest' }}\r\n                placeholder='Career Interest'\r\n                search\r\n                onChange={getCareerInterest}>\r\n              </Form.Dropdown>\r\n            </Form>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Form>\r\n              <Form.Field\r\n                label={{ children: 'Skills' }}\r\n                placeholder='Skills'\r\n                search\r\n                fluid multiple selection clearable\r\n                control={Dropdown}\r\n                options={internships.dropdownSkills(data)}\r\n                onChange={getSkills}\r\n                style={{ flexGrow: 0 }}\r\n              />\r\n            </Form>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Form>\r\n              <Form.Field placeholder='Location'\r\n                          label={{ children: 'Location' }}\r\n                          onChange={getLocation}\r\n                          fluid multiple selection clearable\r\n                          options={internships.dropdownLocation(data)}\r\n                          control={Dropdown}\r\n                          style={{ flexGrow: 0 }}\r\n              />\r\n            </Form>\r\n            <Checkbox style={{ paddingTop: '1rem' }} label='Remote'\r\n                      onClick={getRemote}/>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column textAlign={'right'}>\r\n            <Grid.Row>\r\n              <div style={{ paddingBottom: '0', paddingRight: '0.5rem' }}>\r\n                <Header style={{\r\n                  paddingBottom: '0', margin: '0 0 0 0', paddingRight: '0.5rem',\r\n                  paddingTop: '0.3rem', lineHeight: '10px',\r\n                  display: 'inline-block',\r\n                }} as={'h4'}>\r\n                  Key:\r\n                </Header>\r\n                <Label circular style={has}>\r\n                  Has skill\r\n                </Label>\r\n                <Label circular style={notHave}>\r\n                  Missing skill\r\n                </Label>\r\n              </div>\r\n            </Grid.Row>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n}\r\n\r\nSearchInternshipFeature.propTypes = {\r\n  onChildClick: PropTypes.func.isRequired,\r\n  passedData: PropTypes.array.isRequired,\r\n  locationVal: PropTypes.string.isRequired,\r\n  companyVal: PropTypes.string.isRequired,\r\n  sortVal: PropTypes.string.isRequired,\r\n  searchQuery: PropTypes.string.isRequired,\r\n  skillsVal: PropTypes.array.isRequired,\r\n  isRemote: PropTypes.bool.isRequired,\r\n  careerVal: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default SearchInternshipFeature;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport _ from 'lodash';\r\nimport { Card, Container, Grid, Header, Segment } from 'semantic-ui-react';\r\nimport moment from 'moment';\r\nimport InternshipListingCard from './InternshipListingCard';\r\nimport SearchInternshipFeature from './SearchInternshipFeature';\r\nimport InternshipsFilters from './InternshipFilters';\r\n\r\nfunction InternshipListing() {\r\n  const internships = new InternshipsFilters();\r\n  const getInternshipData = internships.mergeData();\r\n  const [data, setData] = useState(getInternshipData);\r\n  const [paginatedData, setPaginatedData] = useState(getInternshipData.slice(0, 40));\r\n  const [location, setLocation] = useState([]);\r\n  const [company, setCompany] = useState('any');\r\n  const [sort, setSort] = useState('posted');\r\n  const [search, setSearch] = useState('');\r\n  const [skills, setSkills] = useState([]);\r\n  const [remote, setRemote] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [height, setHeight] = useState(0);\r\n  const [career, setCareer] = useState([]);\r\n  const ref = useRef(null);\r\n  const totalListing = getInternshipData.length;\r\n  const lastScraped = moment(getInternshipData[0].lastScraped).fromNow();\r\n\r\n  /* Passes data up from SearchInternshipFeature. SetPaginatedData allows data to be rendered\r\n  * for infinite scroll. */\r\n  function handleChildClick(passedData, locationVal, companyVal, sortVal, searchQueryVal, skillsVal, isRemote, careerVal) {\r\n    setData(passedData);\r\n    setLocation(locationVal);\r\n    setCompany(companyVal);\r\n    setCareer(careerVal);\r\n    setSort(sortVal);\r\n    setSearch(searchQueryVal);\r\n    setSkills(skillsVal);\r\n    setRemote(isRemote);\r\n    setPage(1);\r\n    setPaginatedData(passedData.slice(0, 40));\r\n  }\r\n\r\n  /* Grabs the height */\r\n  useEffect(() => {\r\n    setHeight(ref.current.clientHeight);\r\n  });\r\n\r\n  /* Infinite scrolling */\r\n  function handleScroll() {\r\n    window.onscroll = function () {\r\n      const scroll = window.innerHeight + window.pageYOffset;\r\n      // if we hit the bottom\r\n      if (scroll >= height - 500) {\r\n        // if there are still more items to be loaded\r\n        if (page <= Math.ceil(data.length / 40)) {\r\n          const newPage = page + 1;\r\n          setPage(newPage);\r\n          setPaginatedData(data.slice(0, newPage * 40));\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  return (\r\n      <Container fluid style={{ paddingTop: '5rem', marginLeft: '0.5rem', marginRight: '0.5rem' }}>\r\n        <Grid columns={'equal'} doubling stackable>\r\n          <Grid.Row style={{ maxWidth: '70%', margin: 'auto', paddingTop: '20px', marginBottom: '-40px' }}>\r\n            <Segment>\r\n              <h2 style={{ align: 'center' }}>\r\n                Welcome to InternAloha!\r\n              </h2>\r\n              <Grid.Column>\r\n                <p> InternAloha is a tool developed as part of the <a href=\"https://radgrad.org\">RadGrad Project</a> to improve the undergraduate computer\r\n                  science degree experience by simplifying the internship discovery process.</p>\r\n                <p> InternAloha regularly visits a large number of Internship and corporate sites and gathers\r\n                  information on computer science internships, with a focus on internships suitable to Hawaii students.\r\n                  Our hope is that you find InternAloha to be a superior way to find relevant internships based on your\r\n                  interests.</p>\r\n                <p>Right now, the InternAloha database contains a total of {totalListing} listings, broken down as follows: <br/>\r\n                  ACM ({internships.getData('ACM').length}),\r\n                  Angel List ({internships.getData('AngelList').length}),\r\n                  American Express ({internships.getData('AExpress').length}),\r\n                  Apple ({internships.getData('Apple').length}),\r\n                  Chegg Internships ({internships.getData('Chegg').length}),\r\n                  Cisco ({internships.getData('Cisco').length}),\r\n                  Glassdoor ({internships.getData('Glassdoor').length}),\r\n                  Hawaii Slack ({internships.getData('HawaiiSlack').length}),\r\n                  Idealist ({internships.getData('Idealist').length}),\r\n                  Indeed ({internships.getData('Indeed').length}),\r\n                  LinkedIn ({internships.getData('LinkedIn').length}),\r\n                  Monster ({internships.getData('Monster').length}),\r\n                  Simply Hired ({internships.getData('SimplyHired').length}),\r\n                  Stack Overflow ({internships.getData('StackOverflow').length}),\r\n                  Student Opportunity Center (0),\r\n                  Youtern ({internships.getData('Youtern').length}),\r\n                  Zip Recruiter ({internships.getData('ZipRecruiter').length})</p>\r\n                <p>InternAloha collected this information {lastScraped}. </p>\r\n                <p>If you have comments or question about InternAloha, please feel free to visit our\r\n                  <a href=\"https://internaloha.github.io/documentation/\"> home page</a>. </p>\r\n              </Grid.Column>\r\n            </Segment>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ maxWidth: '70%', margin: 'auto' }}>\r\n            <SearchInternshipFeature onChildClick={handleChildClick} passedData={data}\r\n                                     companyVal={company} locationVal={location} sortVal={sort}\r\n                                     searchQuery={search} skillsVal={skills} isRemote={remote} careerVal={career}/>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ maxWidth: '80%', margin: 'auto', paddingBottom: '0px' }}>\r\n            <Header style={{ paddingLeft: '105px', paddingTop: '20px' }}>\r\n              Results: {internships.total(data)}\r\n            </Header>\r\n          </Grid.Row>\r\n          <Grid.Row style={{ maxWidth: '80%', margin: 'auto' }}>\r\n            <div onScroll={handleScroll()} ref={ref}>\r\n              <Card.Group doubling centered stackable>\r\n                {_.map(paginatedData, (internship, index) => <InternshipListingCard\r\n                  selectedSkills={skills} internship={internship} key={index}/>)}\r\n              </Card.Group>\r\n            </div>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default InternshipListing;\r\n","import React from 'react';\r\nimport { Table, Header } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass StatisticsRow extends React.Component {\r\n\r\n  render() {\r\n    const total = this.props.statistics.index;\r\n    const position = ((this.props.statistics.position / total) * 100).toString().substring(0, 5);\r\n    const company = ((this.props.statistics.company / total) * 100).toString().substring(0, 5);\r\n    const contact = ((this.props.statistics.contact / total) * 100).toString().substring(0, 5);\r\n    const location = ((this.props.statistics.location / total) * 100).toString().substring(0, 5);\r\n    const posted = ((this.props.statistics.posted / total) * 100).toString().substring(0, 5);\r\n    const due = ((this.props.statistics.due / total) * 100).toString().substring(0, 5);\r\n    const start = ((this.props.statistics.start / total) * 100).toString().substring(0, 5);\r\n    const end = ((this.props.statistics.end / total) * 100).toString().substring(0, 5);\r\n    const compensation = ((this.props.statistics.compensation / total) * 100).toString().substring(0, 5);\r\n    const qualifications = ((this.props.statistics.qualifications / total) * 100).toString().substring(0, 5);\r\n    const skills = ((this.props.statistics.skills / total) * 100).toString().substring(0, 5);\r\n    const description = ((this.props.statistics.description / total) * 100).toString().substring(0, 5);\r\n    const lastScraped = this.props.statistics.lastScraped;\r\n\r\n    function formatDate(stringDate) {\r\n      const date = new Date(stringDate).toDateString();\r\n      if (date !== 'Invalid Date') {\r\n        return date;\r\n      }\r\n      return 'N/A';\r\n    }\r\n\r\n    function lastRow(site) {\r\n      if (site === 'Total') {\r\n        return (\r\n            <Table.Row>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {site}\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  N/A\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {total}\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {position}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {company}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {contact}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {location}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {posted}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {due}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {start}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {end}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {compensation}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {qualifications}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {skills}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {description}%\r\n                </Header>\r\n              </Table.Cell>\r\n            </Table.Row>\r\n        );\r\n      } return (\r\n            <Table.Row>\r\n              <Table.Cell>{site}</Table.Cell>\r\n              <Table.Cell>{formatDate(lastScraped)}</Table.Cell>\r\n              <Table.Cell>{total}</Table.Cell>\r\n              <Table.Cell>{position}%</Table.Cell>\r\n              <Table.Cell>{company}%</Table.Cell>\r\n              <Table.Cell>{contact}%</Table.Cell>\r\n              <Table.Cell>{location}%</Table.Cell>\r\n              <Table.Cell>{posted}%</Table.Cell>\r\n              <Table.Cell>{due}%</Table.Cell>\r\n              <Table.Cell>{start}%</Table.Cell>\r\n              <Table.Cell>{end}%</Table.Cell>\r\n              <Table.Cell>{compensation}%</Table.Cell>\r\n              <Table.Cell>{qualifications}%</Table.Cell>\r\n              <Table.Cell>{skills}%</Table.Cell>\r\n              <Table.Cell>{description}%</Table.Cell>\r\n            </Table.Row>\r\n        );\r\n    }\r\n    return (\r\n        <>\r\n          {lastRow(this.props.statistics.site)}\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nStatisticsRow.propTypes = {\r\n  statistics: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default StatisticsRow;\r\n","import React from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass StatisticsChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Init state.\r\n    this.state = { chart: {} };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const _this = this;\r\n    // Init chart with data from props.\r\n    const chart = Highcharts.chart(this.props.statistics.name, {\r\n\r\n      title: {\r\n        text: `Number of Listings Scraped: ${this.props.statistics.name}`,\r\n      },\r\n      credits: {\r\n        enabled: false,\r\n      },\r\n      tooltip: {\r\n        shared: true,\r\n        crosshairs: true,\r\n      },\r\n      yAxis: {\r\n        allowDecimals: false,\r\n        title: {\r\n          text: 'Number of Listings Scraped',\r\n        },\r\n      },\r\n      xAxis: {\r\n        accessibility: {\r\n          rangeDescription: 'Scraper Performance',\r\n        },\r\n        title: {\r\n          text: 'Over Time',\r\n        },\r\n        categories: _this.props.date,\r\n        labels: {\r\n          formatter: function () {\r\n            return new Date(this.value).toLocaleString('en-US', { dateStyle: 'short' });\r\n          },\r\n        },\r\n      },\r\n\r\n      legend: {\r\n        layout: 'vertical',\r\n        align: 'right',\r\n        verticalAlign: 'middle',\r\n      },\r\n\r\n      plotOptions: {\r\n        series: {\r\n          label: {\r\n            connectorAllowed: false,\r\n          },\r\n        },\r\n      },\r\n\r\n      series: _this.props.statistics.data,\r\n\r\n      responsive: {\r\n        rules: [{\r\n          condition: {\r\n            maxWidth: 500,\r\n          },\r\n          chartOptions: {\r\n            legend: {\r\n              align: 'left',\r\n              verticalAlign: 'top',\r\n              borderWidth: 0,\r\n            },\r\n          },\r\n        }],\r\n      },\r\n    });\r\n    this.setState({ chart: chart });\r\n  }\r\n\r\n  render() {\r\n    return <div id={this.props.statistics.name} />;\r\n  }\r\n}\r\n\r\nStatisticsChart.propTypes = {\r\n  statistics: PropTypes.object.isRequired,\r\n  date: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default StatisticsChart;\r\n","import React from 'react';\r\nimport { Container, Table, Header, Icon } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport statisticData from './statistics/statistics.data';\r\nimport statisticsCSV from './statistics/statistics-csv';\r\nimport StatisticsRow from './StatisticsRow';\r\nimport StatisticsChart from './StatisticsChart';\r\n\r\n/** A simple static component to render some text for the Statistics page. */\r\nclass Statistics extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      statistics: statisticData,\r\n    };\r\n  }\r\n\r\n   lowercaseFirstLetter(string) {\r\n    return string.charAt(0).toLowerCase() + string.slice(1);\r\n  }\r\n\r\n  onClick = (event) => {\r\n    let value = this.lowercaseFirstLetter(event.target.textContent);\r\n    value = value.replace(/ +/g, '');\r\n    this.setState({ statistics: _.orderBy(statisticData, value, ['desc']) });\r\n  };\r\n\r\n  render() {\r\n\r\n    function getData(info) {\r\n      delete statisticsCSV.siteName;\r\n      const arrays = _.map(statisticsCSV, function (site) {\r\n        const arr = [];\r\n        const siteInfo = _.map(site, function (data) {\r\n          arr.push(data[info]);\r\n          return arr;\r\n        });\r\n        return [...new Set(siteInfo)];\r\n      });\r\n      return arrays;\r\n    }\r\n\r\n    function formatInfo() {\r\n      const chartData = [];\r\n      const allData = [];\r\n      const keys = Object.keys(statisticsCSV);\r\n      const types = [\r\n        'lastScraped', 'position', 'company', 'contact', 'location', 'posted', 'due', 'start',\r\n        'end', 'compensation', 'qualifications', 'skills', 'remote', 'index', 'url', 'description'];\r\n      for (let i = 0; i < types.length; i++) {\r\n        const arrays = getData(types[i]);\r\n        allData.push(arrays);\r\n      }\r\n      for (let i = 0; i < keys.length; i++) {\r\n        const info = [];\r\n        for (let j = 0; j < keys.length; j++) {\r\n          const obj = {\r\n            name: types[j],\r\n            data: allData[j][i][0],\r\n          };\r\n          info.push(obj);\r\n        }\r\n        chartData.push({\r\n          name: keys[i],\r\n          data: info,\r\n        });\r\n      }\r\n      return chartData;\r\n    }\r\n\r\n    const dates = getData('lastScraped');\r\n\r\n    return (\r\n        <div>\r\n          <Container style={{ marginTop: '10rem', marginBottom: '4rem' }}>\r\n            <Header textAlign={'center'}\r\n                    as={'h2'}\r\n                    style={{ marginBottom: '2rem' }}>\r\n              Statistics\r\n            </Header>\r\n            {_.map((formatInfo('url')), (statistics, index) => <StatisticsChart\r\n              statistics={statistics} key={index} date={dates[index][0]}/>)}\r\n            {/* <StatisticsChart statistics={formatInfo()} date={statisticsCSV.acm[0].lastScraped}/> */}\r\n             <Table attached='top' celled sortable>\r\n              <Table.Header onClick={(event) => this.onClick(event)}>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Site\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Last Scraped\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Entries\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Position\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Company\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Contact\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Location\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Posted\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Due\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Start\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>End\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Compensation\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Qualifications\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Skills\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Description\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                 {_.map((this.state.statistics), (statistics, index) => <StatisticsRow\r\n                    statistics={statistics} key={index}/>)}\r\n              </Table.Body>\r\n             </Table>\r\n          </Container>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport { Container, Menu, Image } from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n/** A simple static component to render some text for the NavBar page. */\r\nclass NavBar extends React.Component {\r\n  render() {\r\n    return (\r\n        <Container>\r\n          <Menu className={'top meni fixed borderless'}\r\n                style={{ backgroundColor: '#C1C8E4', border: 0, boxShadow: '0 0 BLACK' }}>\r\n            <Menu.Item>\r\n              <a href={'/internaloha'}>\r\n                <Image src={'images/logo.png'} size={'small'}/>\r\n              </a>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.css';\r\nimport './index.css';\r\n// import Landing from './Landing';\r\nimport InternshipListing from './InternshipListing';\r\nimport Statistics from './Statistics';\r\nimport NavBar from './NavBar';\r\n// import Profile from './Profile';\r\n// import JobCart from './JobCart';\r\n// import EditProfile from './EditProfile';\r\n// import RecommendedInternships from './RecommendedInternships';\r\n\r\n/**\r\n * The top level layout for the site.\r\n */\r\nconst App = () => (\r\n    <Router>\r\n      <NavBar/>\r\n      <Switch>\r\n        {/* <Route exact path={'/'} component={Landing}/> */}\r\n        <Route exact path={'/internaloha'} component={InternshipListing}/>\r\n        <Route exact path={'/all-internships'} component={InternshipListing}/>\r\n        <Route exact path={'/statistics'} component={Statistics}/>\r\n        {/* <Route exact path={'/profile'} component={Profile}/> */}\r\n        {/* <Route exact path={'/applications'} component={JobCart}/> */}\r\n        {/* <Route exact path={'/edit-profile'} component={EditProfile}/> */}\r\n      </Switch>\r\n    </Router>\r\n);\r\n\r\nrender(<App/>, document.getElementById('root'));\r\n\r\n// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import 'semantic-ui-css/semantic.css';\r\n// import './index.css';\r\n// import InternshipListing from './InternshipListing';\r\n// import Statistics from './Statistcs';\r\n// import NavBar from './NavBar';\r\n//\r\n// /**\r\n//  * The top level layout for the site.\r\n//  */\r\n//\r\n// ReactDOM.render(\r\n//     <React.StrictMode>\r\n//       <NavBar/>\r\n//       <InternshipListing/>\r\n//       <Statistics/>\r\n//     </React.StrictMode>,\r\n//   // eslint-disable-next-line no-undef\r\n//   document.getElementById('root'),\r\n// );\r\n"],"sourceRoot":""}