{"version":3,"sources":["InternshipFilters.jsx","Landing.jsx","InternshipListingCard.jsx","InternshipListingCard2.jsx","RecommendationScript.js","SearchInternshipFeature.jsx","InternshipListing.jsx","StatisticsRow.jsx","Statistcs.jsx","NavBar.jsx","Profile.jsx","JobCart.jsx","EditProfile.jsx","RecommendedInternships.jsx","index.js"],"names":["InternshipsFilters","total","data","length","_","concat","iHire","zipData","simplyData","monsterData","linkedinData","youternData","glassData","indeedData","idealist","ACM","coolworks","aexpress","apple","companies","map","categories","flattenDeep","uniq","sort","number","groupBy","info","i","push","key","text","value","num","unshift","location","locationAmount","skills","flattenSkills","uniqueSkills","orderBy","tags","exists","counter","includes","company","list","toString","toLowerCase","searchQuery","position","input","arrLocations","filter","Landing","internships","mergeData","dropdownCompany","height","Math","max","document","documentElement","clientHeight","window","innerHeight","width","clientWidth","innerWidth","style","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","Container","textAlign","Image","src","size","centered","paddingTop","Statistic","Group","inverted","marginLeft","marginRight","Value","Label","Button","as","NavLink","to","marginTop","backgroundColor","color","React","Component","withRouter","formatDate","stringDate","date","moment","fromNow","InternshipListingCard","props","Card","className","Content","Header","href","internship","url","target","rel","Meta","Grid","doubling","Row","columns","Column","floated","Icon","city","state","zip","posted","lastScraped","Description","overflow","maxHeight","internshipDescription","noScriptDescript","replace","dangerouslySetInnerHTML","__html","e","console","log","description","extra","skill","circular","margin","hasSkill","remote","isRemote","borderRadius","siteName","index","Popup","content","mouseLeaveDelay","on","trigger","fontSize","Modal","closeIcon","Form","Field","Radio","label","name","checked","TextArea","placeholder","Actions","InternshipListingCard2","dropdownCareerInterest","sortedCollection","sortBy","career_interest_to_skill","o","career","join","Dropdown","Item","basic","recommendation","careers","newState","careerSkills","k","j","totalSkills","foundTag","sorted","SearchInternshipFeature","onChildClick","passedData","locationVal","companyVal","sortVal","skillsVal","careerVal","locationChange","companyChange","sortChange","searchQueryChange","skillChange","remoteCheck","careerChange","setFilters","recommendedData","remoteFilter","searchFiltered","filterBySearch","companyFiltered","filterByCompany","sortedBy","scrollTo","top","left","behavior","handleSubmit","Segment","inline","header","options","defaultValue","onChange","event","onSubmit","icon","iconPosition","fluid","control","Input","children","multiple","selection","clearable","search","dropdownSkills","flexGrow","dropdownLocation","Checkbox","onClick","paddingBottom","paddingRight","lineHeight","display","InternshipListing","getInternshipData","useState","setData","slice","paginatedData","setPaginatedData","setLocation","setCompany","setSort","setSearch","setSkills","setRemote","page","setPage","setHeight","setCareer","ref","useRef","useEffect","current","stackable","maxWidth","searchQueryVal","onScroll","onscroll","pageYOffset","ceil","newPage","StatisticsRow","site","this","statistics","entries","substring","contact","due","start","end","compensation","qualifications","Table","Cell","Date","toDateString","Statistics","lowercaseFirstLetter","textContent","setState","statisticData","string","charAt","marginBottom","attached","celled","sortable","HeaderCell","Body","NavBar","Menu","border","boxShadow","Profile","title","headerStyle","changeBackground","currentTarget","cursor","onLeave","renderLabels","padding","renderTab","careerPath","exact","interest","stretched","Progress","progress","onMouseEnter","onMouseLeave","dividing","course","opportunity","JobCart","status","align","Extra","swal","buttons","dangerMode","then","willDelete","EditProfile","notifications","widths","id","Select","toggle","RecommendedInternships","App","path","component","render","getElementById"],"mappings":"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","file":"static/js/main.365297cb.chunk.js","sourcesContent":["import _ from 'lodash';\r\nimport linkedinData from './data/linkedin.parsed.data';\r\nimport simplyData from './data/simplyHired.parsed.data';\r\nimport zipData from './data/ziprecruiter.parsed.data';\r\nimport cheggData from './data/internships.parsed.data';\r\nimport monsterData from './data/monster.parsed.data';\r\nimport youternData from './data/youtern.parsed.data';\r\nimport iHire from './data/iHireTech.parsed.data';\r\nimport glassData from './data/glassdoor.parsed.data';\r\nimport indeedData from './data/indeed.parsed.data';\r\nimport angelData from './data/angellist.parsed.data';\r\n// import manualData from './data/manualInput.parsed.data';\r\nimport apple from './data/apple.parsed.data';\r\nimport aexpress from './data/aexpress.parsed.data';\r\nimport ACM from './data/acm.parsed.data';\r\nimport stackoverflow from './data/stackoverflow.parsed.data';\r\nimport idealist from './data/idealist.parsed.data';\r\nimport coolworks from './data/coolworks.parsed.data';\r\n\r\nclass InternshipsFilters {\r\n\r\n  /* Returns total number of internship listing */\r\n  total = (data) => data.length;\r\n\r\n  mergeData() {\r\n    let data = [];\r\n    // data = _.concat(data, cheggData);\r\n    // data = _.concat(data, nsfData);\r\n    // data = _.concat(data, manualData);\r\n    // data = _.concat(data, stackoverflow);\r\n    data = _.concat(data, iHire);\r\n    data = _.concat(zipData, simplyData);\r\n    data = _.concat(data, monsterData);\r\n    data = _.concat(data, linkedinData);\r\n    data = _.concat(data, youternData);\r\n    data = _.concat(data, glassData);\r\n    data = _.concat(data, indeedData);\r\n    // data = _.concat(data, angelData);\r\n    data = _.concat(data, idealist);\r\n    data = _.concat(data, ACM);\r\n    data = _.concat(data, coolworks);\r\n    data = _.concat(data, aexpress);\r\n    data = _.concat(data, apple);\r\n\r\n    // console.log('zip:', zipData.length);\r\n    // console.log('simply:', simplyData.length);\r\n    // console.log('chegg:', cheggData.length);\r\n    // console.log('monster:', monsterData.length);\r\n    // console.log('linkedIn:', linkedinData.length);\r\n    // console.log('total:', data.length);\r\n    // let test = _.map(linkedinData, 'company');\r\n    // console.log(test.sort());\r\n    //\r\n    // let test2 = _.map(angelData, 'location.state');\r\n    //console.log(_.groupBy(test2));\r\n    //console.log(_.filter(angelData, ['location.state', '']));\r\n    return data;\r\n  }\r\n\r\n  /* Returns array of companies for us to be able to pass into semantic ui's dropdown. Format:\r\n  * key: unique key of the company\r\n  * text: Text that shows up in dropdown\r\n  * value: value used to search\r\n  * num: the number of internships with said company */\r\n  dropdownCompany(data) {\r\n    let companies = _.map(data, 'company');\r\n    const categories = _.flattenDeep(companies);\r\n    companies = _.uniq(categories).sort();\r\n\r\n    const number = _.groupBy(data, 'company');\r\n    const info = [];\r\n\r\n    for (let i = 0; i < companies.length; i++) {\r\n\r\n      info.push({\r\n        key: companies[i],\r\n        text: `${companies[i]} (${number[companies[i]].length})`,\r\n        value: companies[i],\r\n        num: number[companies[i]].length,\r\n      });\r\n    }\r\n\r\n    // Adding any parameter to front of array\r\n    info.unshift({\r\n      key: 'any',\r\n      text: 'Any',\r\n      value: 'any',\r\n    });\r\n\r\n    return info;\r\n  }\r\n\r\n  /* Returns array of companies for us to be able to pass into semantic ui's dropdown. Format:\r\n * key: unique key of the company\r\n * text: Text that shows up in dropdown\r\n * value: value used to search\r\n * num: the number of internships with said company */\r\n  dropdownLocation(data) {\r\n    let location = _.map(data, 'location.state');\r\n    // console.log(location);\r\n    const categories = _.flattenDeep(location);\r\n    location = _.uniq(categories).sort();\r\n    // console.log(location);\r\n\r\n    const number = _.groupBy(data, 'location.state');\r\n    const info = [];\r\n\r\n    for (let i = 0; i < location.length; i++) {\r\n\r\n      const locationAmount = number[location[i]].length;\r\n      // if (location[i] === 'Remote') {\r\n      //   locationAmount = _.filter(data, ['remote', true]).length\r\n      //       + number[location[i]].length;\r\n      //\r\n      // } else {\r\n      //   locationAmount = number[location[i]].length;\r\n      // }\r\n\r\n      info.push({\r\n        key: location[i],\r\n        text: `${location[i]} (${locationAmount})`,\r\n        value: location[i],\r\n        num: number[location[i]].length,\r\n      });\r\n    }\r\n\r\n    return info;\r\n  }\r\n\r\n  /* Returns array of skills for us to be able to pass into semantic ui's dropdown. Format:\r\n* key: unique key of the skill\r\n* text: Text that shows up in dropdown\r\n* value: value used to search\r\n* num: the number of internships with the associated skills */\r\n  dropdownSkills(data) {\r\n    const skills = _.map(data, 'skills');\r\n    // console.log(skills);\r\n    const flattenSkills = _.flattenDeep(skills);\r\n    // console.log(flattenSkills);\r\n    const uniqueSkills = _.uniq(flattenSkills).sort();\r\n    // console.log(uniqueSkills);\r\n\r\n    const number = _.groupBy(flattenSkills);\r\n    // console.log(number);\r\n\r\n    const info = [];\r\n\r\n    for (let i = 0; i < uniqueSkills.length; i++) {\r\n      info.push({\r\n        key: uniqueSkills[i],\r\n        text: `${uniqueSkills[i]} (${number[uniqueSkills[i]].length})`,\r\n        value: uniqueSkills[i],\r\n        num: number[uniqueSkills[i]].length,\r\n      });\r\n    }\r\n    return info;\r\n  }\r\n\r\n  /* Sorts list by given parameters */\r\n  sortedBy(data, value) {\r\n    if (value === 'date') {\r\n      return _.orderBy(data, ['posted'], ['desc']);\r\n    }\r\n    if (value === 'company') {\r\n      return _.orderBy(data, ['company'], ['asc']);\r\n    }\r\n    return _.orderBy(data, ['position'], ['asc']);\r\n  }\r\n\r\n  /* Returns a list based on skill/tags inputs */\r\n  filterBySkills(data, tags) {\r\n    if (tags.length === 0) {\r\n      return data;\r\n    }\r\n\r\n    const skills = [];\r\n    let exists = false;\r\n    let counter = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      // if any of the tags exist in data set, push it to skills and go to next\r\n      while (counter < tags.length && exists === false) {\r\n        if (data[i].skills.includes(tags[counter])) {\r\n          skills.push(data[i]);\r\n          exists = true;\r\n        }\r\n        counter++;\r\n      }\r\n      counter = 0;\r\n      exists = false;\r\n    }\r\n    return skills;\r\n  }\r\n\r\n  /* Returns a sorted list by company name */\r\n  filterByCompany(data, company) {\r\n    if (company === 'any' || company.length === 0) {\r\n      return data;\r\n    }\r\n    const list = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      const companies = data[i].company;\r\n      const lowercase = companies.toString().toLowerCase();\r\n      if (lowercase.includes(company.toString().toLowerCase())) {\r\n        list.push(data[i]);\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n\r\n  /* Returns a list based on search query */\r\n  filterBySearch(data, searchQuery) {\r\n    if (searchQuery.length === 0) {\r\n      return data;\r\n    }\r\n    const list = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      const position = data[i].position;\r\n      const lowercase = position.toString().toLowerCase();\r\n      if (lowercase.includes(searchQuery.toString().toLowerCase())) {\r\n        list.push(data[i]);\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n\r\n  /* Returns a sorted list by location */\r\n  filterByLocation(data, input) {\r\n    if (input.length === 0) {\r\n      return data;\r\n    }\r\n\r\n    let arrLocations = [];\r\n    for (let i = 0; i < input.length; i++) {\r\n      arrLocations = arrLocations.concat(_.filter(data, ['location.state', input[i]]));\r\n    }\r\n    return arrLocations;\r\n\r\n  }\r\n\r\n  isRemote(data, value) {\r\n    if (value === false) {\r\n      return data;\r\n    }\r\n     return _.filter(data, ['remote', true]);\r\n  }\r\n}\r\n\r\nexport default InternshipsFilters;\r\n","import React from 'react';\r\nimport { Container, Statistic, Image, Button } from 'semantic-ui-react';\r\nimport InternshipsFilters from './InternshipFilters';\r\nimport { Link, withRouter, NavLink } from 'react-router-dom';\r\n\r\n\r\n/** A simple static component to render some text for the landing page. */\r\nclass Landing extends React.Component {\r\n  render() {\r\n\r\n    const internships = new InternshipsFilters();\r\n    const data = internships.mergeData();\r\n    const companies = internships.dropdownCompany(data).length;\r\n\r\n    const background = {\r\n      backgroundImage: 'url(\"images/landingBG.png\")',\r\n      height: '100%',\r\n      backgroundPosition: 'center',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundSize: 'cover',\r\n    };\r\n\r\n    const height = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n    const width = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\n\r\n    return (\r\n        <div style={background}>\r\n          <div style={{ height: `${height}px` }}>\r\n            <Container textAlign={'center'}>\r\n              <Image src={'images/logo.png'} size={'medium'} centered style={{ paddingTop: '10rem' }}/>\r\n              <Statistic.Group inverted\r\n                               style={{ marginLeft: 'auto',\r\n                marginRight: 'auto' }}>\r\n                <Statistic size='huge'\r\n                           style={{ marginLeft: `${width / 4.3}px` }}>\r\n                  <Statistic.Value>{data.length}</Statistic.Value>\r\n                  <Statistic.Label>Internships</Statistic.Label>\r\n                </Statistic>\r\n                <Statistic size='huge'>\r\n                  <Statistic.Value>{companies}</Statistic.Value>\r\n                  <Statistic.Label>Companies</Statistic.Label>\r\n                </Statistic>\r\n              </Statistic.Group>\r\n                <Button\r\n                    as={NavLink}\r\n                    to={'/internbit/all-internships'}\r\n                    style={{ marginTop: '3rem', backgroundColor: '#8860D0', color: 'white' }}>\r\n                  Get connected today!\r\n                </Button>\r\n            </Container>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Landing);\r\n","import {\r\n  Button,\r\n  Card,\r\n  Grid,\r\n  Icon,\r\n  Label,\r\n  Modal,\r\n  Header,\r\n  Popup,\r\n  Form,\r\n  Radio, Item,\r\n} from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\n\r\nfunction isRemote(remote) {\r\n  if (remote) {\r\n    return (\r\n        <Label circular style={{\r\n          backgroundColor: '#263763',\r\n          color: 'white',\r\n          margin: '0.2rem',\r\n        }}>\r\n          Remote\r\n        </Label>\r\n    );\r\n  }\r\n}\r\n\r\nfunction hasSkill(skill) {\r\n  const studentSkills = ['machine learning', 'software engineering'];\r\n\r\n  const has = {\r\n    margin: '0.2rem',\r\n    backgroundColor: '#5680E9',\r\n    color: 'white',\r\n  };\r\n  const notHave = {\r\n    margin: '0.2rem',\r\n    backgroundColor: 'rgb(244, 244, 244)',\r\n    color: '#8f8f8f',\r\n  };\r\n\r\n  if (studentSkills.includes(skill)) {\r\n    return (\r\n        <Label circular key={skill} style={has}>\r\n          {skill}\r\n        </Label>\r\n    );\r\n  }\r\n  return (\r\n      <Label circular key={skill} style={notHave}>\r\n        {skill}\r\n      </Label>\r\n  );\r\n}\r\n\r\nfunction formatDate(stringDate) {\r\n\r\n  if (typeof stringDate === 'undefined') {\r\n    return 'N/A';\r\n  }\r\n\r\n  const date = moment(stringDate).fromNow();\r\n\r\n  if (date !== 'Invalid Date') {\r\n    return date;\r\n  }\r\n  return 'Unknown';\r\n}\r\n\r\nfunction description(internshipDescription) {\r\n  try {\r\n    const noScriptDescript = internshipDescription.replace(/<script>(.*?)<\\/script>/gi, '');\r\n    return (\r\n        <span dangerouslySetInnerHTML={{ __html: noScriptDescript }}/>\r\n        // internshipDescription.split('\\n').map((item, key) => <span key={key}>{item}<br/></span>)\r\n    );\r\n  } catch (e) {\r\n    console.log('No description field.');\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction siteName(url) {\r\n  try {\r\n    if (url.includes('linkedin')) {\r\n      return 'LinkedIn';\r\n    }\r\n    if (url.includes('ziprecruiter')) {\r\n      return 'ZipRecruiter';\r\n    }\r\n    if (url.includes('monster')) {\r\n      return 'Monster';\r\n    }\r\n    if (url.includes('simplyhired')) {\r\n      return 'SimplyHired';\r\n    }\r\n    if (url.includes('internships')) {\r\n      return 'Chegg';\r\n    }\r\n    if (url.includes('youtern')) {\r\n      return 'Youtern';\r\n    }\r\n    if (url.includes('ihiretechnology')) {\r\n      return 'iHireTechnology';\r\n    }\r\n    if (url.includes('stackoverflow')) {\r\n      return 'iHireTechnology';\r\n    }\r\n    if (url.includes('glassdoor')) {\r\n      return 'Glassdoor';\r\n    }\r\n    if (url.includes('indeed')) {\r\n      return 'Indeed';\r\n    }\r\n    if (url.includes('angel')) {\r\n      return 'AngelList';\r\n    }\r\n    if (url.includes('acm')) {\r\n      return 'ACM';\r\n    }\r\n    if (url.includes('apple')) {\r\n      return 'Apple';\r\n    }\r\n    if (url.includes('americanexpress')) {\r\n      return 'American Express';\r\n    }\r\n    if (url.includes('coolworks')) {\r\n      return 'Coolworks';\r\n    }\r\n    return 'NSF-REU';\r\n  } catch (e) {\r\n    return 'Unknown';\r\n\r\n  }\r\n}\r\n\r\nfunction InternshipListingCard(props) {\r\n\r\n  return (\r\n      <Card className={'listings'}>\r\n        <Card.Content>\r\n          <Card.Header textAlign={'center'}>\r\n            <a href={props.internship.url} target='_blank' rel=\"noopener noreferrer\">\r\n              <p style={{ color: '#263763' }}>\r\n                {props.internship.position}\r\n              </p>\r\n            </a>\r\n          </Card.Header>\r\n          <Card.Meta style={{ paddingTop: '0.6rem' }}>\r\n            <Grid doubling>\r\n              <Grid.Row columns={1}>\r\n                <Grid.Column floated={'left'}>\r\n                  <p>\r\n                    <Icon className='building'/>\r\n                    <span>{props.internship.company} </span>\r\n                  </p>\r\n                </Grid.Column>\r\n                <Grid.Column floated={'left'}>\r\n                  <Icon className='map marker alternate'/>\r\n                  <span>Internship Location: {props.internship.location.city}, {props.internship.location.state} {props.internship.location.zip}</span>\r\n                </Grid.Column>\r\n                <Grid.Column floated={'left'}>\r\n                  <Icon className='calendar alternate'/>\r\n                  <span>Posted: {formatDate(props.internship.posted)}</span>\r\n                </Grid.Column>\r\n                <Grid.Column floated={'left'}>\r\n                  <Icon className='calendar alternate'/>\r\n                  <span>Last Updated: {formatDate(props.internship.lastScraped)}</span>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n\r\n            </Grid>\r\n          </Card.Meta>\r\n          <Card.Description style={{ paddingTop: '1rem' }}>\r\n            <div style={{ overflow: 'auto', maxHeight: '250px' }}>\r\n              {description(props.internship.description)}\r\n            </div>\r\n\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          {props.internship.skills.map((skill) => (\r\n              hasSkill(skill)\r\n          ))}\r\n          {isRemote(props.internship.remote)}\r\n        </Card.Content>\r\n        <Card.Content extra textAlign={'center'}>\r\n          <a target='_blank' rel=\"noopener noreferrer\" href={props.internship.url}>\r\n            <Button style={{ borderRadius: '10rem' }}>\r\n              From: {siteName(props.internship.url)} Listing #{props.internship.index}\r\n            </Button>\r\n          </a>\r\n          <div>\r\n            <Popup\r\n                content='Added to favorites!'\r\n                mouseLeaveDelay={200}\r\n                on='click'\r\n                trigger={\r\n                  <button className=\"ui icon button\" style={{ marginTop: '1em', size: '100%', maxHeight: '50px', backgroundColor: 'transparent' }}>\r\n                    <i className=\"heart icon\" style={{ fontSize: '100%' }}/>\r\n                  </button>\r\n                }\r\n            />\r\n            <Modal closeIcon trigger={\r\n              <button className=\"ui icon button\" style={{ marginTop: '1em', size: '100%', maxHeight: '50px', backgroundColor: 'transparent' }}>\r\n                <i className=\"exclamation triangle icon\" style={{ fontSize: '100%' }}/>\r\n              </button>\r\n            }>\r\n              <Modal.Header>Report a Problem</Modal.Header>\r\n              <Modal.Content>\r\n                <Modal.Description>\r\n                  <Form>\r\n                    <Form.Field>\r\n                      <Radio\r\n                          label='Broken Link'\r\n                          name='radioGroup'\r\n                          value='this'\r\n                          checked={'this'}\r\n                          // onChange={}\r\n                      />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <Radio\r\n                          label='Missing Data Fields'\r\n                          name='radioGroup'\r\n                          value='that'\r\n                          checked={'that'}\r\n                          // onChange={}\r\n                      />\r\n                    </Form.Field>\r\n                    <Form.TextArea label='Other' placeholder='Explain the error here. Feel free to provide screenshots or links.' />\r\n                  </Form>\r\n                </Modal.Description>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                <Button style={{ backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n                  Report\r\n                </Button>\r\n              </Modal.Actions>\r\n            </Modal>\r\n          </div>\r\n\r\n        </Card.Content>\r\n      </Card>\r\n  );\r\n}\r\n\r\nInternshipListingCard.propTypes = {\r\n  internship: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default InternshipListingCard;\r\n","import { Button, Grid, Icon, Label, Item, Header, Popup, Modal, Form, Radio } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport swal from 'sweetalert';\r\n\r\nfunction isRemote(remote) {\r\n  if (remote) {\r\n    return (\r\n        <Label circular style={{\r\n          backgroundColor: '#263763',\r\n          color: 'white',\r\n          margin: '0.2rem',\r\n        }}>\r\n          Remote\r\n        </Label>\r\n    );\r\n  }\r\n}\r\n\r\nfunction siteName(url) {\r\n  try {\r\n    if (url.includes('linkedin')) {\r\n      return 'LinkedIn';\r\n    }\r\n    if (url.includes('ziprecruiter')) {\r\n      return 'ZipRecruiter';\r\n    }\r\n    if (url.includes('monster')) {\r\n      return 'Monster';\r\n    }\r\n    if (url.includes('simplyhired')) {\r\n      return 'SimplyHired';\r\n    }\r\n    if (url.includes('internships')) {\r\n      return 'Chegg';\r\n    }\r\n    if (url.includes('youtern')) {\r\n      return 'Youtern';\r\n    }\r\n    if (url.includes('ihiretechnology')) {\r\n      return 'iHireTechnology';\r\n    }\r\n    if (url.includes('stackoverflow')) {\r\n      return 'iHireTechnology';\r\n    }\r\n    if (url.includes('glassdoor')) {\r\n      return 'Glassdoor';\r\n    }\r\n    if (url.includes('indeed')) {\r\n      return 'Indeed';\r\n    }\r\n    if (url.includes('angel')) {\r\n      return 'AngelList';\r\n    }\r\n    if (url.includes('acm')) {\r\n      return 'ACM';\r\n    }\r\n    if (url.includes('apple')) {\r\n      return 'Apple';\r\n    }\r\n    if (url.includes('americanexpress')) {\r\n      return 'American Express';\r\n    }\r\n    if (url.includes('coolworks')) {\r\n      return 'Coolworks';\r\n    }\r\n    return 'NSF-REU';\r\n  } catch (e) {\r\n    return 'Unknown';\r\n\r\n  }\r\n}\r\n\r\nfunction hasSkill(skill, hasSkills) {\r\n\r\n  if (typeof (hasSkills) === 'undefined') {\r\n    hasSkills = ['react', 'software engineering'];\r\n  }\r\n  const studentSkills = ['react', 'software engineering'];\r\n\r\n  const has = {\r\n    margin: '0.2rem',\r\n    backgroundColor: '#5680E9',\r\n    color: 'white',\r\n  };\r\n  const notHave = {\r\n    margin: '0.2rem',\r\n    backgroundColor: 'rgb(244, 244, 244)',\r\n    color: '#8f8f8f',\r\n  };\r\n\r\n  if (hasSkills.includes(skill)) {\r\n    return (\r\n        <Label circular key={skill} style={has}>\r\n          {skill}\r\n        </Label>\r\n    );\r\n  }\r\n  return (\r\n      <Label circular key={skill} style={notHave}>\r\n        {skill}\r\n      </Label>\r\n  );\r\n}\r\n\r\nfunction formatDate(stringDate) {\r\n  const date = new Date(stringDate).toDateString();\r\n  if (date !== 'Invalid Date') {\r\n    return date;\r\n  }\r\n  return 'Unknown';\r\n}\r\n\r\nfunction changeBackground(e) {\r\n  e.currentTarget.style.backgroundColor = '#fafafa';\r\n  e.currentTarget.style.cursor = 'pointer';\r\n}\r\n\r\nfunction onLeave(e) {\r\n  e.currentTarget.style.backgroundColor = 'transparent';\r\n}\r\n\r\nfunction description(internshipDescription) {\r\n  try {\r\n    const noScriptDescript = internshipDescription.replace(/<script>(.*?)<\\/script>/gi, '');\r\n    return (\r\n        <span dangerouslySetInnerHTML={{ __html: noScriptDescript }}/>\r\n        // internshipDescription.split('\\n').map((item, key) => <span key={key}>{item}<br/></span>)\r\n    );\r\n  } catch (e) {\r\n    console.log('No description field.');\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction InternshipListingCard2(props) {\r\n\r\n  return (\r\n      <Item onMouseEnter={changeBackground} onMouseLeave={onLeave}\r\n            style={{ padding: '0rem 2rem 0rem 2rem' }}>\r\n        <Modal closeIcon trigger={\r\n          <Item.Content>\r\n            <Item.Header>\r\n              <a href={props.internship.url} target=\"_blank\" rel='noopener noreferrer'>\r\n                <Header as={'h2'} style={{ color: 'rgb(0, 102, 204)', paddingTop: '2rem' }}>\r\n                  {props.internship.position}\r\n                </Header>\r\n              </a>\r\n            </Item.Header>\r\n            <Item.Meta>\r\n              <Item.Meta>\r\n                <Grid doubling>\r\n                  <Grid.Row columns={1} style={{ fontSize: '110%', paddingTop: '0.8rem' }}>\r\n                    <Grid.Column floated={'left'} style={{ paddingBottom: '0.3rem' }}>\r\n                      <p>\r\n                        <Icon className='building'/>\r\n                        <span>{props.internship.company} </span>\r\n                      </p>\r\n                    </Grid.Column>\r\n                    <Grid.Column floated={'left'}>\r\n                      <Icon className='map marker alternate'/>\r\n                      <span>Internship Location: {props.internship.location.city}, {props.internship.location.state} {props.internship.location.zip}</span>\r\n                    </Grid.Column>\r\n                    <Grid.Column style={{ paddingTop: '0.5rem' }}>\r\n                      <Icon className='calendar alternate'/>\r\n                      <span>Date Posted: {formatDate(props.internship.posted)}</span>\r\n                    </Grid.Column>\r\n                    <Grid.Column style={{ paddingTop: '0.4rem' }}>\r\n                      <Icon className='address book'/>\r\n                      <span>From: {siteName(props.internship.url)} Listing #{props.internship.index} </span>\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </Item.Meta>\r\n            </Item.Meta>\r\n            <Item.Description style={{ paddingBottom: '1rem' }}>\r\n              <div align={'left'}>\r\n                <div style={{ fontSize: '125%', height: '214px', width: '600px', overflow: 'hidden' }}>\r\n                {description(props.internship.description)}\r\n              </div>\r\n              </div>\r\n              <Item.Extra style={{ paddingTop: '1rem' }} >\r\n              </Item.Extra>\r\n              <div>\r\n                {props.internship.skills.map((skill) => (\r\n                    hasSkill(skill, props.hasSkills)\r\n                ))}\r\n                {isRemote(props.internship.remote)}\r\n              </div>\r\n              <Item.Extra style={{ paddingBottom: '1rem' }} >\r\n              </Item.Extra>\r\n            </Item.Description>\r\n          </Item.Content>\r\n        }>\r\n          <Modal.Header>Description</Modal.Header>\r\n          <Modal.Content>\r\n            <Modal.Description>\r\n              {description(props.internship.description)}\r\n            </Modal.Description>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button style={{ fontSize: '110%', backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n              <Icon name='star'/>\r\n              Add to Favorites\r\n            </Button>\r\n            <a href={props.internship.url} target=\"_blank\" rel='noopener noreferrer'>\r\n              <Button style={{ fontSize: '110%', backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n                Go to Listing: {siteName(props.internship.url)}\r\n                <Icon name='chevron right'/>\r\n              </Button>\r\n            </a>\r\n          </Modal.Actions>\r\n        </Modal>\r\n         <Popup\r\n            content='Added to favorites!'\r\n            mouseLeaveDelay={200}\r\n            on='click'\r\n            trigger={\r\n              <button className=\"ui icon button\" style={{ marginTop: '1em', size: '500%', maxHeight: '50px', backgroundColor: 'transparent' }}>\r\n                <i className=\"heart icon\" style={{ fontSize: '175%' }}/>\r\n              </button>\r\n            }\r\n        />\r\n        <Modal closeIcon trigger={\r\n          <button className=\"ui icon button\" style={{ marginTop: '1em', size: '500%', maxHeight: '50px', backgroundColor: 'transparent' }}>\r\n            <i className=\"exclamation triangle icon\" style={{ fontSize: '175%' }}/>\r\n          </button>\r\n        }>\r\n          <Modal.Header>Report a Problem</Modal.Header>\r\n          <Modal.Content>\r\n            <Modal.Description>\r\n              <Form>\r\n                <Form.Field>\r\n                  <Radio\r\n                      label='Broken Link'\r\n                      name='radioGroup'\r\n                      value='this'\r\n                      checked={'this'}\r\n                      // onChange={}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <Radio\r\n                      label='Missing Data Fields'\r\n                      name='radioGroup'\r\n                      value='that'\r\n                      checked={'that'}\r\n                      // onChange={}\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Modal.Description>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button style={{ backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n              Report\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Item>\r\n  );\r\n}\r\n\r\nInternshipListingCard2.propTypes = {\r\n  internship: PropTypes.object.isRequired,\r\n  hasSkills: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default InternshipListingCard2;\r\n","import natural from 'natural';\r\nimport React from 'react';\r\nimport _ from 'lodash';\r\nimport career_interest_to_skill from './career_interest_to_skill';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Grid,\r\n  Icon,\r\n  Label,\r\n  Modal,\r\n  Header,\r\n  Popup,\r\n  Form,\r\n  Radio, Item, Dropdown\r\n} from 'semantic-ui-react';\r\nfunction test(data) {\r\n  const TfIdf = natural.TfIdf;\r\n  const tfidf = new TfIdf();\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    tfidf.addDocument(data[i].description);\r\n  }\r\n\r\n  const tfidfData = [];\r\n\r\n  // tfidf.addDocument('this document is about node.');\r\n  // tfidf.addDocument('this document is about ruby.');\r\n  // tfidf.addDocument('this document is about ruby and node.');\r\n  // tfidf.addDocument('this document is about node. it has node examples');\r\n\r\n  console.log('javascript full-stack css hmtl --------------------------------');\r\n\r\n  tfidf.tfidfs('javascript full-stack css hmtl ', function (i, measure) {\r\n    //  console.log('document #' + i + ' is ' + measure);\r\n    if (measure > 6) {\r\n      console.log(`document #${i} is ${measure}`);\r\n      tfidfData.push(data[i]);\r\n    }\r\n  });\r\n\r\n  // console.log(tfidfData);\r\n  return tfidfData;\r\n\r\n  // console.log('ruby --------------------------------');\r\n  // tfidf.tfidfs('ruby', function (i, measure) {\r\n  //   console.log('document #' + i + ' is ' + measure);\r\n  // });\r\n}\r\n\r\nfunction dropdownCareerInterest() {\r\n\r\n  const sortedCollection = _.sortBy(career_interest_to_skill, [function (o) { return o.career; }]);\r\n\r\n  const info = [];\r\n  for (let i = 0; i < sortedCollection.length; i++) {\r\n    const skills = sortedCollection[i].skills.join(', ');\r\n    info.push({\r\n      key: sortedCollection[i].career,\r\n      text: sortedCollection[i].career,\r\n      value: sortedCollection[i].career,\r\n      content: (\r\n          <Popup content={`Associated Skills: ${skills}`}\r\n                 trigger={<Dropdown.Item>\r\n            {sortedCollection[i].career}</Dropdown.Item>}\r\n                 style={{ marginLeft: '12%' }}\r\n                 position={'right center'}\r\n                 basic inverted\r\n          />\r\n      ),\r\n    });\r\n  }\r\n  return info;\r\n}\r\n\r\nfunction recommendation(tags, careers, data, location) {\r\n\r\n  if (tags.length === 0 && careers.length === 0) {\r\n    if (location.length !== 0) {\r\n      let arrLocations = [];\r\n      for (let i = 0; i < location.length; i++) {\r\n        const newState = _.filter(data, ['location.state', location[i]]);\r\n        arrLocations = arrLocations.concat(newState);\r\n      }\r\n      return arrLocations;\r\n    }\r\n    return data;\r\n\r\n  }\r\n\r\n  const skills = [];\r\n\r\n  let careerSkills = [];\r\n  for (let i = 0; i < career_interest_to_skill.length; i++) {\r\n    for (let k = 0; k < careers.length; k++) {\r\n      if (careers[k] === career_interest_to_skill[i].career) {\r\n        for (let j = 0; j < career_interest_to_skill[i].skills.length; j++) {\r\n          careerSkills.push(career_interest_to_skill[i].skills[j]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  careerSkills = _.uniq(careerSkills);\r\n\r\n  // const lowerCaseTags = [];\r\n\r\n  // for (let i = 0; i < tags.length; i++) {\r\n  //   lowerCaseTags.push(tags[i].toString().toLowerCase());\r\n  // }\r\n\r\n  const totalSkills = _.uniq(careerSkills.concat(tags));\r\n\r\n  // console.log(totalSkills);\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    let foundTag = false;\r\n    let num = 0;\r\n    let total = 0;\r\n    for (let j = 0; j < data[i].skills.length; j++) {\r\n      for (let k = 0; k < totalSkills.length; k++) {\r\n        if (data[i].skills[j].includes(totalSkills[k])) {\r\n          num++;\r\n          foundTag = true;\r\n        }\r\n      }\r\n      total = data[i].skills.length;\r\n    }\r\n    if (foundTag === true) {\r\n\r\n      data[i].recommendation = num / total;\r\n      skills.push(data[i]);\r\n    }\r\n  }\r\n\r\n  const sorted = _.orderBy(skills, ['recommendation'], ['desc']);\r\n\r\n  // console.log(sorted);\r\n\r\n// for (let i = 0; i < data.length; i++) {\r\n//   // if any of the tags exist in data set, push it to skills and go to next\r\n//   while (counter < totalSkills.length && exists === false) {\r\n//     if (data[i].skills.includes(totalSkills[counter])) {\r\n//       skills.push(data[i]);\r\n//       exists = true;\r\n//     }\r\n//     counter++;\r\n//   }\r\n//   counter = 0;\r\n//   exists = false;\r\n// }\r\n// console.log(skills);\r\n  console.log(location);\r\n\r\n  if (location.length === 0) {\r\n    return sorted;\r\n  }\r\n\r\n  // if (location.length === 1) {\r\n  //   return _.filter(sorted, ['location.state', location]);\r\n  // } else {\r\n  let arrLocations = [];\r\n  for (let i = 0; i < location.length; i++) {\r\n    arrLocations = arrLocations.concat(_.filter(sorted, ['location.state', location[i]]));\r\n  }\r\n  return arrLocations;\r\n  // }\r\n  //\r\n  // console.log(sorted);\r\n  // console.log(_.filter(sorted, ['location.state', location]));\r\n  // return _.filter(sorted, ['location.state', location]);\r\n\r\n}\r\n\r\nfunction isRemoteFunc(data, value) {\r\n  if (value === false) {\r\n    return data;\r\n  }\r\n  console.log(_.filter(data, ['remote', true]));\r\n  return _.filter(data, ['remote', true]);\r\n}\r\n\r\nexport { recommendation, dropdownCareerInterest, test, isRemoteFunc };\r\n","import React from 'react';\r\nimport {\r\n    Segment,\r\n    Header,\r\n    Dropdown,\r\n    Label,\r\n    Input,\r\n    Form,\r\n    Checkbox,\r\n    Popup,\r\n    Grid,\r\n    Button\r\n} from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport InternshipsFilters from './InternshipFilters';\r\nimport {dropdownCareerInterest, recommendation} from \"./RecommendationScript\";\r\n\r\nfunction SearchInternshipFeature({\r\n                                     onChildClick,\r\n                                     passedData,\r\n                                     locationVal,\r\n                                     companyVal,\r\n                                     sortVal,\r\n                                     searchQuery,\r\n                                     skillsVal,\r\n                                     isRemote,\r\n                                     careerVal,\r\n                                 }) {\r\n\r\n    const internships = new InternshipsFilters();\r\n    const data = internships.mergeData();\r\n\r\n    let locationChange = locationVal;\r\n    let companyChange = companyVal;\r\n    let sortChange = sortVal;\r\n    let searchQueryChange = searchQuery;\r\n    let skillChange = skillsVal;\r\n    let remoteCheck = isRemote;\r\n    let careerChange = careerVal;\r\n\r\n    const sortBy = [\r\n        {key: 'date', text: 'date', value: 'date'},\r\n        {key: 'internship', text: 'internship', value: 'internship'},\r\n        {key: 'company', text: 'company', value: 'company'},\r\n    ];\r\n\r\n\r\n    const setFilters = () => {\r\n\r\n        let recommendedData = [];\r\n\r\n        const remoteFilter = internships.isRemote(data, remoteCheck);\r\n        const searchFiltered = internships.filterBySearch(remoteFilter, searchQueryChange);\r\n        // const skillsFiltered = internships.filterBySkills(searchFiltered, skillChange);\r\n        // const locationFiltered = internships.filterByLocation(skillsFiltered, locationChange);\r\n        const companyFiltered = internships.filterByCompany(searchFiltered, companyChange);\r\n        const sorted = internships.sortedBy(companyFiltered, sortChange);\r\n\r\n        recommendedData = recommendation(skillChange, careerChange, sorted, locationChange);\r\n\r\n        onChildClick(recommendedData, locationChange, companyChange, sortChange, searchQueryChange, skillChange, remoteCheck, careerChange);\r\n        window.scrollTo({\r\n            top: 30,\r\n            left: 100,\r\n            behavior: 'smooth',\r\n        });\r\n    };\r\n\r\n    const handleSearchChange = (event) => {\r\n        searchQueryChange = event.target.value;\r\n    };\r\n\r\n    const handleCompanyChange = (event) => {\r\n        companyChange = event.target.value;\r\n    };\r\n\r\n    const getRemote = () => {\r\n        if (remoteCheck) {\r\n            remoteCheck = false;\r\n        } else {\r\n            remoteCheck = true;\r\n        }\r\n        setFilters();\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        setFilters();\r\n    };\r\n\r\n    const getLocation = (event, {value}) => {\r\n        locationChange = value;\r\n        setFilters();\r\n    };\r\n\r\n    const getSort = (event, {value}) => {\r\n        sortChange = value;\r\n        setFilters();\r\n    };\r\n\r\n    const getSkills = (event, {value}) => {\r\n        skillChange = value;\r\n        setFilters();\r\n    };\r\n\r\n    const getCareerInterest = (event, {value}) => {\r\n        careerChange = value;\r\n        setFilters();\r\n    };\r\n\r\n    const has = {\r\n        margin: '0.2rem',\r\n        backgroundColor: '#5680E9',\r\n        color: 'white',\r\n    };\r\n    const notHave = {\r\n        margin: '0.2rem',\r\n        backgroundColor: 'rgb(244, 244, 244)',\r\n        color: '#8f8f8f',\r\n    };\r\n\r\n    const careerSkills = (skill) => {\r\n        return (\r\n            <Label circular key={skill}>\r\n                {skill}\r\n            </Label>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Segment style={{width: '100%', borderRadius: '10px', marginTop: '3rem'}}>\r\n            <Grid columns={'equal'}>\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <p>\r\n                            <p>\r\n                                Sort by {' '}\r\n                                <Dropdown\r\n                                    inline\r\n                                    header='Sort by...'\r\n                                    options={sortBy}\r\n                                    defaultValue={sortBy[0].value}\r\n                                    onChange={getSort}\r\n                                />\r\n                            </p>\r\n                        </p>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Popup\r\n                                trigger={\r\n                                    <Form>\r\n                                        <Form.Field icon='search'\r\n                                                    iconPosition='left'\r\n                                                    placeholder='Search ...'\r\n                                                    onChange={handleSearchChange}\r\n                                                    fluid\r\n                                                    control={Input}\r\n                                                    label={{children: 'Search'}}\r\n                                        />\r\n                                    </Form>\r\n                                }\r\n                                content='Press enter to search by internship titles!'\r\n                                on={'focus'}\r\n                            />\r\n\r\n                        </Form>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Dropdown\r\n                                fluid multiple selection clearable\r\n                                control={Dropdown}\r\n                                options={dropdownCareerInterest()}\r\n                                label={{ children: 'Career Interest' }}\r\n                                placeholder='Career Interest'\r\n                                search\r\n                                onChange={getCareerInterest}>\r\n                            </Form.Dropdown>\r\n                            {/*<Form.Field*/}\r\n                            {/*    fluid multiple selection clearable*/}\r\n                            {/*    control={Dropdown}*/}\r\n                            {/*    options={dropdownCareerInterest()}*/}\r\n                            {/*    label={{children: 'Career Interest'}}*/}\r\n                            {/*    placeholder='Career Interest'*/}\r\n                            {/*    search*/}\r\n                            {/*    onChange={getCareerInterest}*/}\r\n                            {/*/>*/}\r\n                        </Form>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Form>\r\n                            <Form.Field\r\n                                label={{children: 'Skills'}}\r\n                                placeholder='Skills'\r\n                                search\r\n                                fluid multiple selection clearable\r\n                                control={Dropdown}\r\n                                options={ internships.dropdownSkills(data)}\r\n                                onChange={getSkills}\r\n                                style={{ flexGrow: 0 }}\r\n\r\n                            />\r\n                        </Form>\r\n\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Form>\r\n                            <Form.Field placeholder='Location'\r\n                                        label={{children: 'Location'}}\r\n                                        onChange={getLocation}\r\n                                        fluid multiple selection clearable\r\n                                        options={internships.dropdownLocation(data)}\r\n                                        control={Dropdown}\r\n                                        style={{flexGrow: 0}}\r\n                            />\r\n                        </Form>\r\n                        <Checkbox style={{paddingTop: '1rem'}} label='Remote'\r\n                                  onClick={getRemote}/>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Field icon='home'\r\n                                        label={{children: 'Company'}}\r\n                                        control={Input}\r\n                                        iconPosition='left'\r\n                                        placeholder='Company'\r\n                                        onChange={handleCompanyChange}\r\n                                        fluid\r\n                            />\r\n                        </Form>\r\n                    </Grid.Column>\r\n\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <Header style={{paddingBottom: '0', marginTop: '0rem'}}>\r\n                            Total results found: {internships.total(passedData)}\r\n                        </Header>\r\n                    </Grid.Column>\r\n                    <Grid.Column textAlign={'right'}>\r\n                        <Grid.Row>\r\n                            <div style={{paddingBottom: '0', paddingRight: '0.5rem'}}>\r\n                                <Header style={{\r\n                                    paddingBottom: '0', margin: '0 0 0 0', paddingRight: '0.5rem',\r\n                                    paddingTop: '0.3rem', lineHeight: '10px',\r\n                                    display: 'inline-block'\r\n                                }} as={'h4'}>\r\n                                    Key:\r\n                                </Header>\r\n                                <Label circular style={has}>\r\n                                    Has skill\r\n                                </Label>\r\n                                <Label circular style={notHave}>\r\n                                    Missing skill\r\n                                </Label>\r\n                            </div>\r\n                        </Grid.Row>\r\n\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n\r\n            </Grid>\r\n\r\n        </Segment>\r\n\r\n    );\r\n}\r\n\r\nSearchInternshipFeature.propTypes = {\r\n    onChildClick: PropTypes.func.isRequired,\r\n    passedData: PropTypes.array.isRequired,\r\n    locationVal: PropTypes.string.isRequired,\r\n    companyVal: PropTypes.string.isRequired,\r\n    sortVal: PropTypes.string.isRequired,\r\n    searchQuery: PropTypes.string.isRequired,\r\n    skillsVal: PropTypes.array.isRequired,\r\n    isRemote: PropTypes.bool.isRequired,\r\n    careerVal: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default SearchInternshipFeature;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport _ from 'lodash';\r\nimport { Card, Container, Header, Icon, Grid, Pagination, Item } from 'semantic-ui-react';\r\nimport InternshipListingCard from './InternshipListingCard';\r\nimport InternshipListingCard2 from './InternshipListingCard2';\r\nimport SearchInternshipFeature from './SearchInternshipFeature';\r\nimport InternshipsFilters from './InternshipFilters';\r\n\r\nfunction InternshipListing() {\r\n\r\n  const internships = new InternshipsFilters();\r\n  const getInternshipData = internships.mergeData();\r\n\r\n  const [data, setData] = useState(getInternshipData);\r\n  const [paginatedData, setPaginatedData] = useState(getInternshipData.slice(0, 40));\r\n  const [location, setLocation] = useState([]);\r\n  const [company, setCompany] = useState('any');\r\n  const [sort, setSort] = useState('date');\r\n  const [search, setSearch] = useState('');\r\n  const [skills, setSkills] = useState([]);\r\n  const [remote, setRemote] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [height, setHeight] = useState(0);\r\n  const [career, setCareer] = useState([]);\r\n  const ref = useRef(null);\r\n\r\n  /* Passes data up from SearchInternshipFeature. SetPaginatedData allows data to be rendered\r\n  * for infinite scroll. */\r\n  function handleChildClick(passedData, locationVal, companyVal, sortVal, searchQueryVal, skillsVal, isRemote, careerVal) {\r\n    setData(passedData);\r\n    setLocation(locationVal);\r\n    setCompany(companyVal);\r\n    setCareer(careerVal);\r\n    setSort(sortVal);\r\n    setSearch(searchQueryVal);\r\n    setSkills(skillsVal);\r\n    setRemote(isRemote);\r\n    setPage(1);\r\n    setPaginatedData(passedData.slice(0, 40));\r\n  }\r\n\r\n  /* Grabs the height */\r\n  useEffect(() => {\r\n    setHeight(ref.current.clientHeight);\r\n  });\r\n\r\n  /* Infinite scrolling */\r\n  function handleScroll() {\r\n    window.onscroll = function () {\r\n      const scroll = window.innerHeight + window.pageYOffset;\r\n      // if we hit the bottom\r\n      if (scroll >= height - 500) {\r\n        // if there are still more items to be loaded\r\n        if (page <= Math.ceil(data.length / 40)) {\r\n          const newPage = page + 1;\r\n          setPage(newPage);\r\n          setPaginatedData(data.slice(0, newPage * 40));\r\n          // console.log('Current Page:', page);\r\n          // console.log('Total Pages:', Math.ceil(data.length / 40));\r\n          // console.log(paginatedData);\r\n          // console.log(\"you're at the bottom of the page\");\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /* Every single time we click a new page, it renders the new data set */\r\n  // const onChange = (e, pageInfo) => {\r\n  //   const page = pageInfo.activePage * 40;\r\n  //   setPaginatedData(data.slice(page - 40, page));\r\n  //   window.scrollTo({\r\n  //     top: 80,\r\n  //     left: 100,\r\n  //     behavior: 'smooth',\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n      <Container fluid style={{ paddingTop: '5rem', marginLeft: '0.5rem', marginRight: '0.5rem' }}>\r\n        <Grid columns={'equal'} doubling stackable>\r\n          <Grid.Row style={{ maxWidth: '80%', margin: 'auto' }}>\r\n            <SearchInternshipFeature onChildClick={handleChildClick} passedData={data}\r\n                                     companyVal={company} locationVal={location} sortVal={sort}\r\n                                     searchQuery={search} skillsVal={skills} isRemote={remote} careerVal={career}/>\r\n            <div onScroll={handleScroll()} ref={ref}>\r\n              <Card.Group doubling centered stackable>\r\n                {_.map(paginatedData, (internship, index) => <InternshipListingCard\r\n                    internship={internship} key={index}/>)}\r\n              </Card.Group>\r\n            </div>\r\n          </Grid.Row>\r\n        </Grid>\r\n\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default InternshipListing;\r\n","import React from 'react';\r\nimport { Container, Table, Header } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass StatisticsRow extends React.Component {\r\n\r\n  render() {\r\n    const total = this.props.statistics.entries;\r\n    const position = ((this.props.statistics.position / total) * 100).toString().substring(0, 5);\r\n    const company = ((this.props.statistics.company / total) * 100).toString().substring(0, 5);\r\n    const contact = ((this.props.statistics.contact / total) * 100).toString().substring(0, 5);\r\n    const location = ((this.props.statistics.location / total) * 100).toString().substring(0, 5);\r\n    const posted = ((this.props.statistics.posted / total) * 100).toString().substring(0, 5);\r\n    const due = ((this.props.statistics.due / total) * 100).toString().substring(0, 5);\r\n    const start = ((this.props.statistics.start / total) * 100).toString().substring(0, 5);\r\n    const end = ((this.props.statistics.end / total) * 100).toString().substring(0, 5);\r\n    const compensation = ((this.props.statistics.compensation / total) * 100).toString().substring(0, 5);\r\n    const qualifications = ((this.props.statistics.qualifications / total) * 100).toString().substring(0, 5);\r\n    const skills = ((this.props.statistics.skills / total) * 100).toString().substring(0, 5);\r\n    const description = ((this.props.statistics.description / total) * 100).toString().substring(0, 5);\r\n    const lastScraped = this.props.statistics.lastScraped;\r\n\r\n    function formatDate(stringDate) {\r\n      const date = new Date(stringDate).toDateString();\r\n      if (date !== 'Invalid Date') {\r\n        return date;\r\n      }\r\n      return 'N/A';\r\n    }\r\n\r\n    function lastRow(site) {\r\n      if (site === 'Total') {\r\n        return (\r\n            <Table.Row>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {site}\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  N/A\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {total}\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {position}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {company}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {contact}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {location}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {posted}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {due}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {start}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {end}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {compensation}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {qualifications}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {skills}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {description}%\r\n                </Header>\r\n              </Table.Cell>\r\n            </Table.Row>\r\n\r\n        );\r\n      } else {\r\n        return (\r\n            <Table.Row>\r\n              <Table.Cell>{site}</Table.Cell>\r\n              <Table.Cell>{formatDate(lastScraped)}</Table.Cell>\r\n              <Table.Cell>{total}</Table.Cell>\r\n              <Table.Cell>{position}%</Table.Cell>\r\n              <Table.Cell>{company}%</Table.Cell>\r\n              <Table.Cell>{contact}%</Table.Cell>\r\n              <Table.Cell>{location}%</Table.Cell>\r\n              <Table.Cell>{posted}%</Table.Cell>\r\n              <Table.Cell>{due}%</Table.Cell>\r\n              <Table.Cell>{start}%</Table.Cell>\r\n              <Table.Cell>{end}%</Table.Cell>\r\n              <Table.Cell>{compensation}%</Table.Cell>\r\n              <Table.Cell>{qualifications}%</Table.Cell>\r\n              <Table.Cell>{skills}%</Table.Cell>\r\n              <Table.Cell>{description}%</Table.Cell>\r\n            </Table.Row>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n        <>\r\n          {lastRow(this.props.statistics.site)}\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nStatisticsRow.propTypes = {\r\n  statistics: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default StatisticsRow;\r\n","import React from 'react';\r\nimport { Container, Table, Header, Icon } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport statisticData from './data/statistics.data';\r\nimport StatisticsRow from './StatisticsRow';\r\n\r\n/** A simple static component to render some text for the Statistics page. */\r\nclass Statistics extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      statistics: statisticData,\r\n    };\r\n  }\r\n\r\n   lowercaseFirstLetter(string) {\r\n    return string.charAt(0).toLowerCase() + string.slice(1);\r\n  }\r\n\r\n  onClick = (event) => {\r\n    let value = this.lowercaseFirstLetter(event.target.textContent);\r\n    value = value.replace(/ +/g, '');\r\n    this.setState({ statistics: _.orderBy(statisticData, value, ['desc']) });\r\n    console.log(this.state.statistics);\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n        <div>\r\n          <Container style={{ marginTop: '10rem', marginBottom: '4rem' }}>\r\n            <Header textAlign={'center'}\r\n                    as={'h2'}\r\n                    style={{ marginBottom: '2rem' }}>\r\n              Statistics\r\n            </Header>\r\n            <Table attached='top' celled sortable>\r\n              <Table.Header onClick={(event) => this.onClick(event)}>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Site\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Last Scraped\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Entries\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Position\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Company\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Contact\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Location\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Posted\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Due\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Start\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>End\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Compensation\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Qualifications\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Skills\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                  <Table.HeaderCell>Description\r\n                    <Icon name='angle down' />\r\n                  </Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                {_.map((this.state.statistics), (statistics, index) => <StatisticsRow\r\n                    statistics={statistics} key={index}/>)}\r\n              </Table.Body>\r\n            </Table>\r\n          </Container>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport { Container, Menu, Image, Icon, Dropdown } from 'semantic-ui-react';\r\nimport { Link, withRouter, NavLink } from 'react-router-dom';\r\n\r\n/** A simple static component to render some text for the NavBar page. */\r\nclass NavBar extends React.Component {\r\n  render() {\r\n    const linkStyle = {\r\n      color: '#263763',\r\n    };\r\n    return (\r\n        <Container>\r\n          <Menu className={'top meni fixed borderless'}\r\n                style={{ backgroundColor: '#C1C8E4', border: 0, boxShadow: '0 0 BLACK' }}>\r\n            <Menu.Item>\r\n              <a href={'/internaloha'}>\r\n                <Image src={'images/logo.png'} size={'small'}/>\r\n              </a>\r\n            </Menu.Item>\r\n            {/*<Menu.Item>*/}\r\n            {/*  <Link to='/all-internships' style={linkStyle}>All Internships</Link>*/}\r\n            {/*</Menu.Item>*/}\r\n            {/*<Menu.Item>*/}\r\n            {/*  <Link to='/internaloha' style={linkStyle}>Recommended Internships</Link>*/}\r\n            {/*</Menu.Item>*/}\r\n\r\n            {/*<Menu.Item>*/}\r\n            {/*  <Link to=\"/statistics\" style={linkStyle}>Statistics</Link>*/}\r\n            {/*</Menu.Item>*/}\r\n            {/*<Menu.Item position='right'>*/}\r\n            {/*  <Dropdown text=\"John Foo\" pointing=\"top right\" icon={'user'}>*/}\r\n            {/*    <Dropdown.Menu>*/}\r\n            {/*      <Dropdown.Item icon=\"user\" text=\"Profile\" as={NavLink} exact to={'/internbit/profile'} />*/}\r\n            {/*      <Dropdown.Item icon=\"file text\" text=\"Applications\" as={NavLink} exact to={'/internbit/applications'} />*/}\r\n            {/*    </Dropdown.Menu>*/}\r\n            {/*  </Dropdown>*/}\r\n            {/*</Menu.Item>*/}\r\n          </Menu>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Image,\r\n  Header,\r\n  Button,\r\n  Label,\r\n  Progress,\r\n  Item,\r\n  Dropdown\r\n} from 'semantic-ui-react';\r\nimport { Link, withRouter, NavLink } from 'react-router-dom';\r\n\r\nclass Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: 'Software Engineering',\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const headerStyle = {\r\n      margin: '1rem 0rem',\r\n    };\r\n\r\n    const interests = ['Social Computing', 'Cloud Computing', 'Human Computer Interaction',\r\n    'Education'];\r\n\r\n    const careers = ['Software Engineering', 'Mobile Development', 'Data Science', 'Education'];\r\n\r\n    const courses = ['ICS 321', 'ICS 311', 'ICS 499', 'ICS 235'];\r\n\r\n    const opportunities = ['HACC', 'LAVA Lab', 'ICSpark'];\r\n\r\n    function changeBackground(e) {\r\n      e.currentTarget.style.boxShadow = 'rgb(195 195 195 / 79%) 0px 0px 6px 5px';\r\n      e.currentTarget.style.cursor = 'pointer';\r\n\r\n    }\r\n\r\n    function onLeave(e) {\r\n      e.currentTarget.style.boxShadow = 'rgba(0, 0, 0, 0) 0px 0px 0px 0px';\r\n    }\r\n\r\n    const renderLabels = (label, key) => (\r\n          <Label circular color={'grey'} key={key}\r\n            style={{ margin: '0.4rem 0.5rem', padding: '0.2rem 0.3rem' }}>\r\n            {label}\r\n          </Label>\r\n      );\r\n\r\n    const renderTab = (careerPath) => {\r\n      this.setState({ title: careerPath });\r\n    };\r\n\r\n    return (\r\n      <Container style={{ margin: '10rem 0rem 5rem 0rem' }}>\r\n        <Grid columns={2} stackable\r\n              style={{ backgroundColor: 'white', borderRadius: '1rem',\r\n                padding: '3rem 2rem' }}>\r\n          <Grid.Column width={10}>\r\n            <Grid columns={2} stackable>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <Image\r\n                      style={{ marginBottom: '1.5rem' }}\r\n                      circular\r\n                      centered\r\n                      size={'small'}\r\n                      src={'https://images.squarespace-cdn.com/content/v1/54bbd50ce4b05e8a36418abc/1533226867020-NALD4HA8GBL3IUIQE9PM/ke17ZwdGBToddI8pDm48kMh3mVmBaCAeGwqCLG3iONRZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PITeQtWPcxF65ANawkK25DREOmFck9peR6QL8AnpRiPJE/rachel-rouhana-profile-picture-circle.png?format=500w'}>\r\n                  </Image>\r\n                  <Header style={{ margin: '0.7rem' }}>\r\n                    Jane Foo\r\n                  </Header>\r\n                  <p style={{ margin: '0rem' }}>\r\n                    B.S Computer Science\r\n                  </p>\r\n                  <p>\r\n                    Intended Graduation Date | Spring 2021\r\n                  </p>\r\n                  <Button as={NavLink} exact to={'/internbit/edit-profile'}>\r\n                    Edit Profile\r\n                  </Button>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <Grid.Row>\r\n                    <Header style={{ marginBottom: '1rem' }}>\r\n                      Interests\r\n                    </Header>\r\n                    {interests.map((interest, key) => (\r\n                        renderLabels(interest, key)\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <Header style={{ margin: '1rem 0rem' }}>\r\n                      Career Goals\r\n                    </Header>\r\n                    {careers.map((career, key) => (\r\n                        renderLabels(career, key)\r\n                    ))}\r\n                  </Grid.Row>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column stretched style={{ width: '100%' }}>\r\n                  <Header style={{ margin: '1rem 0rem' }}>\r\n                    Progress\r\n                  </Header>\r\n                  <Progress value='7.4' total='10' progress='percent' label='Software Engineering'\r\n                    onClick={() => renderTab('Software Engineering')} onMouseEnter={changeBackground} onMouseLeave={onLeave}/>\r\n                  <Progress value='6' total='10' progress='percent' label='Mobile Development'\r\n                            onClick={() => renderTab('Mobile Development')} onMouseEnter={changeBackground} onMouseLeave={onLeave}/>\r\n                  <Progress value='4' total='10' progress='percent' label='Data Science'\r\n                            onClick={() => renderTab('Data Science')} onMouseEnter={changeBackground} onMouseLeave={onLeave}/>\r\n                  <Progress value='6.1' total='10' progress='percent' label='Education'\r\n                            onClick={() => renderTab('Education')} onMouseEnter={changeBackground} onMouseLeave={onLeave}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Grid.Column>\r\n          <Grid.Column width={6}\r\n                       style={{ backgroundColor: '#e5e5e5', borderRadius: '1rem' }}>\r\n            <Header dividing style={{ margin: '1rem 0rem' }} textAlign={'center'}>\r\n              {this.state.title}\r\n            </Header>\r\n            <Header as={'h3'} style={headerStyle}>\r\n              Courses\r\n            </Header>\r\n            {courses.map((course, key) => (\r\n                renderLabels(course, key)\r\n            ))}\r\n            <Header as={'h3'} style={headerStyle}>\r\n              Recommended Opportunities\r\n            </Header>\r\n            {opportunities.map((opportunity, key) => (\r\n                renderLabels(opportunity, key)\r\n            ))}\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(Profile);\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Image,\r\n  Header,\r\n  Button,\r\n  Label,\r\n  Progress,\r\n  Item,\r\n  Modal, Icon, Popup, Dropdown,\r\n} from 'semantic-ui-react';\r\nimport swal from 'sweetalert';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass JobCart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: 'Not Applied',\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const skills = ['Social Computing', 'Cloud Computing', 'Human Computer Interaction',\r\n      'Education'];\r\n\r\n    const options = [\r\n      { key: 1, text: 'Not Applied', value: 'Not Applied' },\r\n      { key: 2, text: 'Applied', value: 'Applied' },\r\n      { key: 3, text: 'Interviewing', value: 'Interviewing' },\r\n      { key: 4, text: 'Offered', value: 'Offered' },\r\n      { key: 5, text: 'Rejected', value: 'Rejected' },\r\n    ];\r\n\r\n    function hasSkill(skill) {\r\n      const studentSkills = ['react', 'software engineering'];\r\n\r\n      const has = {\r\n        margin: '0.2rem',\r\n        backgroundColor: '#5680E9',\r\n        color: 'white',\r\n      };\r\n      const notHave = {\r\n        margin: '0.2rem',\r\n        backgroundColor: 'rgb(244, 244, 244)',\r\n        color: '#8f8f8f',\r\n      };\r\n\r\n      if (studentSkills.includes(skill)) {\r\n        return (\r\n            <Label circular key={skill} style={has}>\r\n              {skill}\r\n            </Label>\r\n        );\r\n      }\r\n      return (\r\n          <Label circular key={skill} style={notHave}>\r\n            {skill}\r\n          </Label>\r\n      );\r\n    }\r\n\r\n    function changeBackground(e) {\r\n      e.currentTarget.style.boxShadow = 'rgb(195 195 195 / 79%) 0px 0px 6px 5px';\r\n      e.currentTarget.style.cursor = 'pointer';\r\n\r\n    }\r\n\r\n    function onLeave(e) {\r\n      e.currentTarget.style.boxShadow = 'rgba(0, 0, 0, 0) 0px 0px 0px 0px';\r\n    }\r\n\r\n    const onSelectDropdown = (event, data) => {\r\n      this.setState({ status: data.value });\r\n    };\r\n\r\n    const onRemove = () => {\r\n      swal({\r\n        title: 'Are you sure?',\r\n        text: 'Once removed, you will not be able to recover it.',\r\n        icon: 'warning',\r\n        buttons: true,\r\n        dangerMode: true,\r\n      })\r\n          .then((willDelete) => {\r\n            if (willDelete) {\r\n              swal('Internship was removed.', {\r\n                icon: 'success',\r\n              });\r\n            } else {\r\n              swal('Request canceled.');\r\n            }\r\n          });\r\n    };\r\n\r\n    return (\r\n        <Container style={{ margin: '10rem 0rem 5rem 0rem' }}>\r\n          <Item onMouseEnter={changeBackground} onMouseLeave={onLeave}\r\n                style={{ padding: '0rem 2rem 0rem 2rem', backgroundColor: 'white' }}>\r\n            <Grid doubling columns={2}>\r\n              <Grid.Column width={12}>\r\n                <Item.Content>\r\n                  <Item.Header>\r\n                    <a href={''} target=\"_blank\" rel='noopener noreferrer'>\r\n                      <Header as={'h3'} style={{ color: '#263763', paddingTop: '2rem' }}>\r\n                        Software Engineering\r\n                      </Header>\r\n                    </a>\r\n\r\n                  </Item.Header>\r\n                  <Item.Meta>\r\n                    <Item.Meta>\r\n                      <Grid doubling>\r\n                        <Grid.Row columns={1} style={{ paddingTop: '0.8rem' }}>\r\n                          <Grid.Column floated={'left'} style={{ paddingBottom: '0.3rem' }}>\r\n                            <p style={{ color: 'rgb(89, 119, 199)' }}>\r\n                              Amazon\r\n                            </p>\r\n                          </Grid.Column>\r\n                          <Grid.Column floated={'left'}>\r\n                            <Icon className='map marker alternate'/>\r\n                            <span>Seattle, WA 99999 | August 10, 2020</span>\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n\r\n                      </Grid>\r\n                    </Item.Meta>\r\n                  </Item.Meta>\r\n                  <Item.Description style={{ paddingTop: '1rem', paddingBottom: '1rem' }}>\r\n                    <div align={'left'}>\r\n                      <Button size={'tiny'}\r\n                              style={{ backgroundColor: 'transparent', padding: '0rem' }}>\r\n                        From: Indeed\r\n                      </Button>\r\n                    </div>\r\n\r\n                  </Item.Description>\r\n                  <Item.Extra>\r\n                    {skills.map((skill) => (\r\n                        hasSkill(skill)\r\n                    ))}\r\n                    {/* {isRemote(props.internship.remote)} */}\r\n                  </Item.Extra>\r\n                  <Item.Extra style={{ paddingBottom: '2rem' }}>\r\n                  </Item.Extra>\r\n                </Item.Content>\r\n              </Grid.Column>\r\n              <Grid.Column width={4} textAlign={'right'}>\r\n                <Icon className={'x'} style={{ marginBottom: '1rem' }}\r\n                      onClick={() => onRemove()}/>\r\n                <br/>\r\n                <Dropdown options={options}\r\n                          placeholder='Status'\r\n                          selection\r\n                          onChange={onSelectDropdown}\r\n                />\r\n                <br/>\r\n                <p style={{ margin: '1rem 0rem' }}>\r\n                  {this.state.status}: October 10, 2020\r\n                  <br/>\r\n                </p>\r\n                <Modal closeIcon trigger={\r\n                  <Button>\r\n                    Check info\r\n                  </Button>\r\n                }>\r\n                  <Modal.Header>Description</Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Commodi dolores esse\r\n                      est\r\n                      incidunt, nesciunt officia placeat quasi quis! Asperiores assumenda atque\r\n                      corporis\r\n                      deserunt fugit ipsum magni minima quaerat similique vitae!\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                  <Modal.Actions>\r\n                    <a href={''} target=\"_blank\" rel='noopener noreferrer'>\r\n                      <Button style={{ backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n                        Go to Listing: Indeed\r\n                        <Icon name='chevron right'/>\r\n                      </Button>\r\n                    </a>\r\n                  </Modal.Actions>\r\n                </Modal>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Item>\r\n        </Container>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(JobCart);\r\n","import React from 'react';\r\nimport { Container, Checkbox, Header, Button, Input, Form, Select, Dropdown } from 'semantic-ui-react';\r\nimport swal from 'sweetalert';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass EditProfile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      notifications: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const majorOptions = [\r\n      { key: 'm', text: 'B.A Information & Computer Science', value: 'B.A Information & Computer Science' },\r\n      { key: 'f', text: 'B.S Computer Science', value: 'B.S Computer Science' },\r\n      { key: 'o', text: 'B.S Computer Science - Data Science', value: 'B.S Computer Science - Data Science' },\r\n    ];\r\n\r\n    const skillOptions = [\r\n      { key: 'm', text: 'Java', value: 'Java' },\r\n      { key: 'f', text: 'Javascript', value: 'Javascript' },\r\n      { key: 'o', text: 'React', value: 'React' },\r\n    ];\r\n\r\n    const careerOptions = [\r\n      { key: 'm', text: 'Software Developer', value: 'Software Developer' },\r\n      { key: 'f', text: 'Full-Stack Developer', value: 'Full-Stack Developer' },\r\n      { key: 'o', text: 'Data Scientist', value: 'Data Scientist' },\r\n    ];\r\n\r\n    const interestOptions = [\r\n      { key: 'm', text: 'Social Computing', value: 'Social Computing' },\r\n      { key: 'f', text: 'Web Development', value: 'Web Development' },\r\n      { key: 'o', text: 'Education', value: 'Education' },\r\n    ];\r\n\r\n    const email = [\r\n      { key: 'm', text: 'Daily', value: 'Daily' },\r\n      { key: 'f', text: 'Weekly', value: 'Weekly' },\r\n    ];\r\n\r\n    const onToggle = () => {\r\n      this.setState({ notifications: !this.state.notifications });\r\n    };\r\n\r\n    const onUpdate = () => {\r\n      swal({\r\n        title: 'Profile updated',\r\n        text: '',\r\n        icon: 'success',\r\n      });\r\n    };\r\n\r\n    return (\r\n        <Container style={{\r\n          margin: '10rem 0rem 5rem 0rem', backgroundColor: 'white',\r\n          borderRadius: '1rem', padding: '3rem 2rem',\r\n        }}>\r\n          <Form>\r\n            <Header textAlign={'center'} as={'h2'} style={{ marginBottom: '2rem' }}>\r\n              Edit Profile\r\n            </Header>\r\n            <Form.Group widths='equal'>\r\n              <Form.Field\r\n                  id='form-input-control-first-name'\r\n                  control={Input}\r\n                  label='First name'\r\n                  placeholder='First name'\r\n              />\r\n              <Form.Field\r\n                  id='form-input-control-last-name'\r\n                  control={Input}\r\n                  label='Last name'\r\n                  placeholder='Last name'\r\n              />\r\n            </Form.Group>\r\n            Profile Image\r\n            <Button style={{ marginLeft: '1rem' }}>\r\n              Upload\r\n            </Button>\r\n            <Form.Field\r\n                control={Select}\r\n                options={majorOptions}\r\n                label={{ children: 'Major' }}\r\n                placeholder='Major'\r\n                search\r\n            />\r\n            <Form.Field\r\n                fluid multiple selection clearable\r\n                control={Dropdown}\r\n                options={skillOptions}\r\n                label={{ children: 'Skills' }}\r\n                placeholder='Skills'\r\n                search\r\n            />\r\n            <Form.Field\r\n                fluid multiple selection clearable\r\n                control={Select}\r\n                options={interestOptions}\r\n                label={{ children: 'Interests' }}\r\n                placeholder='Interests'\r\n                search\r\n            />\r\n            <Form.Field\r\n                fluid multiple selection clearable\r\n                control={Select}\r\n                options={careerOptions}\r\n                label={{ children: 'Career Goals' }}\r\n                placeholder='Career'\r\n                search\r\n            />\r\n\r\n            <Header textAlign={'center'} as={'h2'}>\r\n              Notifications\r\n            </Header>\r\n            <Checkbox toggle label={'Enable Email Notifcations?'}\r\n                      onChange={onToggle}\r\n                      style={{ marginBottom: '1rem' }}/>\r\n            { this.state.notifications ? (\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={email}\r\n                        label={{ children: 'Email Frequency' }}\r\n                        placeholder='Email frequency'\r\n                        search\r\n                    />\r\n                )\r\n            :\r\n                (<div>\r\n\r\n                </div>)\r\n            }\r\n            <div align={'center'} >\r\n              <Button style={{ marginTop: '1rem' }}\r\n                onClick={onUpdate}>\r\n                Update\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Container>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(EditProfile);\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport _ from 'lodash';\r\nimport { Container, Header, Icon, Grid, Card } from 'semantic-ui-react';\r\nimport InternshipListingCard from './InternshipListingCard';\r\nimport MockProfile from './MockProfile';\r\nimport InternshipsFilters from './InternshipFilters';\r\n\r\nfunction RecommendedInternships() {\r\n\r\n  const internships = new InternshipsFilters();\r\n  const getInternshipData = internships.mergeData();\r\n\r\n  const [data, setData] = useState(getInternshipData);\r\n  const [paginatedData, setPaginatedData] = useState(getInternshipData.slice(0, 40));\r\n\r\n  const [skills, setSkills] = useState([]);\r\n  const [career, setCareer] = useState([]);\r\n  const [location, setLocation] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [height, setHeight] = useState(0);\r\n  const [remote, setRemote] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n\r\n  /* Passes data up from MockProfile. SetPaginatedData allows data to be rendered\r\n  * for infinite scroll. */\r\n  function handleChildClick(passedData, skillsVal, careerVal, locationVal, remoteVal) {\r\n    // console.log(passedData);\r\n    setData(passedData);\r\n    setSkills(skillsVal);\r\n    setCareer(careerVal);\r\n    setLocation(locationVal);\r\n    setRemote(remoteVal);\r\n    setPage(1);\r\n    setPaginatedData(passedData.slice(0, 40));\r\n  }\r\n\r\n  /* Grabs the height */\r\n  useEffect(() => {\r\n    setHeight(ref.current.clientHeight);\r\n  });\r\n\r\n  /* Infinite scrolling */\r\n  function handleScroll() {\r\n    window.onscroll = function () {\r\n      const scroll = window.innerHeight + window.pageYOffset;\r\n      // if we hit the bottom\r\n      if (scroll >= height - 500) {\r\n        // if there are still more items to be loaded\r\n        if (page <= Math.ceil(data.length / 40)) {\r\n          const newPage = page + 1;\r\n          setPage(newPage);\r\n          setPaginatedData(data.slice(0, newPage * 40));\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  return (\r\n      <Container fluid style={{ paddingTop: '5rem', marginLeft: '0.5rem', marginRight: '0.5rem' }}>\r\n        <Grid doubling stackable>\r\n          <Grid.Row style={{ maxWidth: '80%', margin: 'auto' }}>\r\n            <MockProfile onChildClick={handleChildClick} passedData={data}\r\n                         skillsVal={skills} careerVal={career} locationVal={location}\r\n                         isRemote={remote}/>\r\n            <div onScroll={handleScroll()} ref={ref}>\r\n              <Card.Group centered doubling stackable>\r\n                {_.map(paginatedData, (internship, index) => <InternshipListingCard\r\n                    internship={internship} key={index} hasSkills={skills} passedData={data}/>)}\r\n              </Card.Group>\r\n            </div>\r\n          </Grid.Row>\r\n        </Grid>\r\n        <div align={'center'} style={{ paddingTop: '5rem', paddingBottom: '5rem' }}>\r\n        </div>\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default RecommendedInternships;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.css';\r\nimport './index.css';\r\nimport Landing from './Landing';\r\nimport InternshipListing from './InternshipListing';\r\nimport Statistics from './Statistcs';\r\nimport NavBar from './NavBar';\r\nimport Profile from './Profile';\r\nimport JobCart from './JobCart';\r\nimport EditProfile from './EditProfile';\r\nimport RecommendedInternships from './RecommendedInternships';\r\n\r\n/**\r\n * The top level layout for the site.\r\n */\r\nconst App = () => (\r\n    <Router>\r\n      <NavBar/>\r\n      <Switch>\r\n        {/*<Route exact path={'/'} component={Landing}/>*/}\r\n        <Route exact path={'/internaloha'} component={InternshipListing}/>\r\n        <Route exact path={'/all-internships'} component={InternshipListing}/>\r\n        <Route exact path={'/statistics'} component={Statistics}/>\r\n        <Route exact path={'/profile'} component={Profile}/>\r\n        <Route exact path={'/applications'} component={JobCart}/>\r\n        <Route exact path={'/edit-profile'} component={EditProfile}/>\r\n      </Switch>\r\n    </Router>\r\n);\r\n\r\nrender(<App/>, document.getElementById('root'));\r\n\r\n// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import 'semantic-ui-css/semantic.css';\r\n// import './index.css';\r\n// import InternshipListing from './InternshipListing';\r\n// import Statistics from './Statistcs';\r\n// import NavBar from './NavBar';\r\n//\r\n// /**\r\n//  * The top level layout for the site.\r\n//  */\r\n//\r\n// ReactDOM.render(\r\n//     <React.StrictMode>\r\n//       <NavBar/>\r\n//       <InternshipListing/>\r\n//       <Statistics/>\r\n//     </React.StrictMode>,\r\n//   // eslint-disable-next-line no-undef\r\n//   document.getElementById('root'),\r\n// );\r\n"],"sourceRoot":""}