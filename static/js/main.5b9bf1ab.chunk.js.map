{"version":3,"sources":["InternshipFilters.jsx","Landing.jsx","InternshipListingCard.jsx","InternshipListingCard2.jsx","SearchInternshipFeature.jsx","InternshipListing.jsx","StatisticsRow.jsx","Statistcs.jsx","NavBar.jsx","Profile.jsx","JobCart.jsx","EditProfile.jsx","RecommendationScript.js","MockProfile.jsx","RecommendedInternships.jsx","index.js"],"names":["InternshipsFilters","total","data","length","_","concat","zipData","simplyData","monsterData","linkedinData","youternData","iHire","glassData","indeedData","angelData","manualData","stackoverflow","idealist","ACM","coolworks","aexpress","apple","companies","map","categories","flattenDeep","uniq","sort","number","groupBy","info","i","push","key","text","value","num","unshift","location","locationAmount","skills","this","mergeData","flattenSkills","uniqueSkills","orderBy","tags","exists","counter","includes","company","list","toString","toLowerCase","searchQuery","position","input","filter","Landing","internships","dropdownCompany","height","Math","max","document","documentElement","clientHeight","window","innerHeight","width","clientWidth","innerWidth","style","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","Container","textAlign","Image","src","size","centered","paddingTop","Statistic","Group","inverted","marginLeft","marginRight","Value","Label","Button","as","NavLink","to","marginTop","backgroundColor","color","React","Component","withRouter","InternshipListingCard","isRemote","remote","circular","margin","siteName","url","e","formatDate","stringDate","date","Date","toDateString","changeBackground","currentTarget","cursor","onLeave","description","internshipDescription","noScriptDescript","replace","dangerouslySetInnerHTML","__html","console","log","InternshipListingCard2","props","Item","onMouseEnter","onMouseLeave","padding","Modal","closeIcon","trigger","Content","Header","href","internship","target","rel","Meta","Grid","doubling","Row","columns","fontSize","Column","floated","paddingBottom","Icon","className","city","state","zip","posted","index","Description","align","overflow","Extra","skill","hasSkills","hasSkill","Actions","name","Popup","content","mouseLeaveDelay","on","Form","Field","Radio","label","checked","SearchInternshipFeature","onChildClick","passedData","locationVal","companyVal","sortVal","skillsVal","locationChange","companyChange","sortChange","searchQueryChange","skillChange","remoteCheck","sortBy","dropdownLocation","setFilters","remoteFilter","searchFiltered","filterBySearch","skillsFiltered","filterBySkills","locationFiltered","filterByLocation","companyFiltered","filterByCompany","sorted","sortedBy","scrollTo","top","left","behavior","handleSubmit","Segment","borderRadius","Dropdown","inline","header","options","defaultValue","onChange","event","onSubmit","Input","icon","iconPosition","placeholder","fluid","multiple","search","selection","dropdownSkills","flexGrow","Checkbox","onClick","paddingRight","InternshipListing","getInternshipData","useState","setData","slice","paginatedData","setPaginatedData","setLocation","setCompany","setSort","setSearch","setSkills","setRemote","page","setPage","setHeight","ref","useRef","useEffect","current","stackable","searchQueryVal","onScroll","onscroll","pageYOffset","ceil","newPage","divided","relaxed","StatisticsRow","site","statistics","entries","substring","contact","due","start","end","compensation","qualifications","lastScraped","Table","Cell","Statistics","marginBottom","attached","celled","HeaderCell","Body","statisticData","NavBar","linkStyle","Menu","border","boxShadow","Profile","title","headerStyle","renderLabels","renderTab","careerPath","setState","exact","interest","career","stretched","Progress","progress","dividing","course","opportunity","JobCart","status","swal","buttons","dangerMode","then","willDelete","EditProfile","notifications","widths","id","control","Select","children","clearable","toggle","dropdownCareerInterest","career_interest_to_skill","recommendation","careers","careerSkills","k","j","totalSkills","foundTag","MockProfile","careerVal","open","setOpen","careerChange","recommendedData","onClose","onOpen","closeOnDimmerClick","required","labelPosition","positive","RecommendedInternships","setCareer","App","path","component","render","getElementById"],"mappings":"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","file":"static/js/main.5b9bf1ab.chunk.js","sourcesContent":["import _ from 'lodash';\r\nimport linkedinData from './data/linkedin.parsed.data';\r\nimport simplyData from './data/simplyhired.parsed.data';\r\nimport zipData from './data/ziprecruiter.parsed.data';\r\nimport cheggData from './data/internships.parsed.data';\r\nimport monsterData from './data/monster.parsed.data';\r\nimport youternData from './data/youtern.parsed.data';\r\nimport nsfData from './data/nsf-reu.parsed.data';\r\nimport iHire from './data/iHireTech.parsed.data';\r\nimport glassData from './data/glassdoor.parsed.data';\r\nimport indeedData from './data/indeed.parsed.data';\r\nimport angelData from './data/angellist.parsed.data';\r\nimport manualData from './data/manualInput.parsed.data';\r\nimport apple from './data/apple.parsed.data';\r\nimport aexpress from './data/aexpress.parsed.data';\r\nimport ACM from './data/acm.parsed.data';\r\nimport stackoverflow from './data/stackoverflow.parsed.data';\r\nimport idealist from './data/idealist.parsed.data';\r\nimport coolworks from './data/coolworks.parsed.data';\r\n\r\nclass InternshipsFilters {\r\n\r\n  /* Returns total number of internship listing */\r\n  total = (data) => data.length;\r\n\r\n  mergeData() {\r\n    let data = [];\r\n    data = _.concat(zipData, simplyData);\r\n    // data = _.concat(data, cheggData);\r\n    data = _.concat(data, monsterData);\r\n    data = _.concat(data, linkedinData);\r\n    data = _.concat(data, youternData);\r\n    // data = _.concat(data, nsfData);\r\n    data = _.concat(data, iHire);\r\n    data = _.concat(data, glassData);\r\n    data = _.concat(data, indeedData);\r\n    data = _.concat(data, angelData);\r\n    data = _.concat(data, manualData);\r\n    data = _.concat(data, stackoverflow);\r\n    data = _.concat(data, idealist);\r\n    data = _.concat(data, ACM);\r\n    data = _.concat(data, coolworks);\r\n    data = _.concat(data, aexpress);\r\n    data = _.concat(data, apple);\r\n\r\n    // console.log('zip:', zipData.length);\r\n    // console.log('simply:', simplyData.length);\r\n    // console.log('chegg:', cheggData.length);\r\n    // console.log('monster:', monsterData.length);\r\n    // console.log('linkedIn:', linkedinData.length);\r\n    // console.log('total:', data.length);\r\n    // let test = _.map(linkedinData, 'company');\r\n    // console.log(test.sort());\r\n    //\r\n    // let test2 = _.map(angelData, 'location.state');\r\n    //console.log(_.groupBy(test2));\r\n    //console.log(_.filter(angelData, ['location.state', '']));\r\n    return data;\r\n  }\r\n\r\n  /* Returns array of companies for us to be able to pass into semantic ui's dropdown. Format:\r\n  * key: unique key of the company\r\n  * text: Text that shows up in dropdown\r\n  * value: value used to search\r\n  * num: the number of internships with said company */\r\n  dropdownCompany(data) {\r\n    let companies = _.map(data, 'company');\r\n    const categories = _.flattenDeep(companies);\r\n    companies = _.uniq(categories).sort();\r\n\r\n    const number = _.groupBy(data, 'company');\r\n    const info = [];\r\n\r\n    for (let i = 0; i < companies.length; i++) {\r\n\r\n      info.push({\r\n        key: companies[i],\r\n        text: `${companies[i]} (${number[companies[i]].length})`,\r\n        value: companies[i],\r\n        num: number[companies[i]].length,\r\n      });\r\n    }\r\n\r\n    // Adding any parameter to front of array\r\n    info.unshift({\r\n      key: 'any',\r\n      text: 'Any',\r\n      value: 'any',\r\n    });\r\n\r\n    return info;\r\n  }\r\n\r\n  /* Returns array of companies for us to be able to pass into semantic ui's dropdown. Format:\r\n * key: unique key of the company\r\n * text: Text that shows up in dropdown\r\n * value: value used to search\r\n * num: the number of internships with said company */\r\n  dropdownLocation(data) {\r\n    let location = _.map(data, 'location.state');\r\n    // console.log(location);\r\n    const categories = _.flattenDeep(location);\r\n    location = _.uniq(categories).sort();\r\n    // console.log(location);\r\n\r\n    const number = _.groupBy(data, 'location.state');\r\n    const info = [];\r\n\r\n    for (let i = 0; i < location.length; i++) {\r\n\r\n      let locationAmount = number[location[i]].length;\r\n      // if (location[i] === 'Remote') {\r\n      //   locationAmount = _.filter(data, ['remote', true]).length\r\n      //       + number[location[i]].length;\r\n      //\r\n      // } else {\r\n      //   locationAmount = number[location[i]].length;\r\n      // }\r\n\r\n      info.push({\r\n        key: location[i],\r\n        text: `${location[i]} (${locationAmount})`,\r\n        value: location[i],\r\n        num: number[location[i]].length,\r\n      });\r\n    }\r\n\r\n    // Adding any parameter to front of array\r\n    info.unshift({\r\n      key: 'any',\r\n      text: 'Any',\r\n      value: 'any',\r\n    });\r\n\r\n    return info;\r\n  }\r\n\r\n  /* Returns array of skills for us to be able to pass into semantic ui's dropdown. Format:\r\n* key: unique key of the skill\r\n* text: Text that shows up in dropdown\r\n* value: value used to search\r\n* num: the number of internships with the associated skills */\r\n  dropdownSkills() {\r\n    const skills = _.map(this.mergeData(), 'skills');\r\n    // console.log(skills);\r\n    const flattenSkills = _.flattenDeep(skills);\r\n    // console.log(flattenSkills);\r\n    const uniqueSkills = _.uniq(flattenSkills).sort();\r\n    // console.log(uniqueSkills);\r\n\r\n    const number = _.groupBy(flattenSkills);\r\n    // console.log(number);\r\n\r\n    const info = [];\r\n\r\n    for (let i = 0; i < uniqueSkills.length; i++) {\r\n      info.push({\r\n        key: uniqueSkills[i],\r\n        text: `${uniqueSkills[i]} (${number[uniqueSkills[i]].length})`,\r\n        value: uniqueSkills[i],\r\n        num: number[uniqueSkills[i]].length,\r\n      });\r\n    }\r\n    return info;\r\n  }\r\n\r\n  /* Sorts list by given parameters */\r\n  sortedBy(data, value) {\r\n    if (value === 'date') {\r\n      return _.orderBy(data, ['posted'], ['desc']);\r\n    }\r\n    if (value === 'company') {\r\n      return _.orderBy(data, ['company'], ['asc']);\r\n    }\r\n    return _.orderBy(data, ['position'], ['asc']);\r\n  }\r\n\r\n  /* Returns a list based on skill/tags inputs */\r\n  filterBySkills(data, tags) {\r\n    if (tags.length === 0) {\r\n      return data;\r\n    }\r\n\r\n    const skills = [];\r\n    let exists = false;\r\n    let counter = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      // if any of the tags exist in data set, push it to skills and go to next\r\n      while (counter < tags.length && exists === false) {\r\n        if (data[i].skills.includes(tags[counter])) {\r\n          skills.push(data[i]);\r\n          exists = true;\r\n        }\r\n        counter++;\r\n      }\r\n      counter = 0;\r\n      exists = false;\r\n    }\r\n    return skills;\r\n  }\r\n\r\n  /* Returns a sorted list by company name */\r\n  filterByCompany(data, company) {\r\n    if (company === 'any' || company.length === 0) {\r\n      return data;\r\n    }\r\n    const list = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      const companies = data[i].company;\r\n      const lowercase = companies.toString().toLowerCase();\r\n      if (lowercase.includes(company.toString().toLowerCase())) {\r\n        list.push(data[i]);\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n\r\n  /* Returns a list based on search query */\r\n  filterBySearch(data, searchQuery) {\r\n    // console.log(searchQuery);\r\n    if (searchQuery.length === 0) {\r\n      return data;\r\n    }\r\n    const list = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      const position = data[i].position;\r\n      const lowercase = position.toString().toLowerCase();\r\n      if (lowercase.includes(searchQuery.toString().toLowerCase())) {\r\n        list.push(data[i]);\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n\r\n  /* Returns a sorted list by location */\r\n  filterByLocation(data, input) {\r\n    if (input === 'any') {\r\n      return data;\r\n    }\r\n\r\n    // // Add all the internships where remote == true and those who have remote in state\r\n    // if (input === 'Remote') {\r\n    //   const byState = _.filter(data, ['location.state', input]);\r\n    //   const remote = _.filter(data, ['remote', true]);\r\n    //   return _.concat(byState, remote);\r\n    // }\r\n    return _.filter(data, ['location.state', input]);\r\n  }\r\n\r\n  isRemote(data, value) {\r\n    if (value === false) {\r\n      return data;\r\n    }\r\n     return _.filter(data, ['remote', true]);\r\n  }\r\n}\r\n\r\nexport default InternshipsFilters;\r\n","import React from 'react';\r\nimport { Container, Statistic, Image, Button } from 'semantic-ui-react';\r\nimport InternshipsFilters from './InternshipFilters';\r\nimport { Link, withRouter, NavLink } from 'react-router-dom';\r\n\r\n\r\n/** A simple static component to render some text for the landing page. */\r\nclass Landing extends React.Component {\r\n  render() {\r\n\r\n    const internships = new InternshipsFilters();\r\n    const data = internships.mergeData();\r\n    const companies = internships.dropdownCompany(data).length;\r\n\r\n    const background = {\r\n      backgroundImage: 'url(\"images/landingBG.png\")',\r\n      height: '100%',\r\n      backgroundPosition: 'center',\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundSize: 'cover',\r\n    };\r\n\r\n    const height = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n    const width = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\n\r\n    return (\r\n        <div style={background}>\r\n          <div style={{ height: `${height}px` }}>\r\n            <Container textAlign={'center'}>\r\n              <Image src={'images/logo.png'} size={'medium'} centered style={{ paddingTop: '10rem' }}/>\r\n              <Statistic.Group inverted\r\n                               style={{ marginLeft: 'auto',\r\n                marginRight: 'auto' }}>\r\n                <Statistic size='huge'\r\n                           style={{ marginLeft: `${width / 4.3}px` }}>\r\n                  <Statistic.Value>{data.length}</Statistic.Value>\r\n                  <Statistic.Label>Internships</Statistic.Label>\r\n                </Statistic>\r\n                <Statistic size='huge'>\r\n                  <Statistic.Value>{companies}</Statistic.Value>\r\n                  <Statistic.Label>Companies</Statistic.Label>\r\n                </Statistic>\r\n              </Statistic.Group>\r\n                <Button\r\n                    as={NavLink}\r\n                    to={'/internbit/all-internships'}\r\n                    style={{ marginTop: '3rem', backgroundColor: '#8860D0', color: 'white' }}>\r\n                  Get connected today!\r\n                </Button>\r\n            </Container>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Landing);\r\n","import { Button, Card, Grid, Icon, Label, Modal, Header } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nfunction isRemote(city) {\r\n  if (city === 'Remote') {\r\n    return (\r\n        <Label circular style={{\r\n          backgroundColor: '#263763',\r\n          color: 'white',\r\n          margin: '0.2rem',\r\n        }}>\r\n          Remote\r\n        </Label>\r\n    );\r\n  }\r\n}\r\n\r\nfunction hasSkill(skill) {\r\n  const studentSkills = ['machine learning', 'software engineering'];\r\n\r\n  const has = {\r\n    margin: '0.2rem',\r\n    backgroundColor: '#5680E9',\r\n    color: 'white',\r\n  };\r\n  const notHave = {\r\n    margin: '0.2rem',\r\n    backgroundColor: 'rgb(244, 244, 244)',\r\n    color: '#8f8f8f',\r\n  };\r\n\r\n  if (studentSkills.includes(skill)) {\r\n    return (\r\n        <Label circular key={skill} style={has}>\r\n          {skill}\r\n        </Label>\r\n    );\r\n  }\r\n  return (\r\n      <Label circular key={skill} style={notHave}>\r\n        {skill}\r\n      </Label>\r\n  );\r\n}\r\n\r\nfunction formatDate(stringDate) {\r\n  const date = new Date(stringDate);\r\n  return date.toDateString();\r\n}\r\n\r\nfunction siteName(url) {\r\n  if (url.includes('linkedin')) {\r\n    return 'LinkedIn';\r\n  }\r\n  if (url.includes('ziprecruiter')) {\r\n    return 'ZipRecruiter';\r\n  }\r\n  if (url.includes('monster')) {\r\n    return 'Monster';\r\n  }\r\n  if (url.includes('simplyhired')) {\r\n    return 'SimplyHired';\r\n  }\r\n  if (url.includes('internships')) {\r\n    return 'Chegg';\r\n  }\r\n}\r\n\r\nfunction InternshipListingCard(props) {\r\n\r\n  return (\r\n      <Card>\r\n        <Card.Content>\r\n          <Card.Header textAlign={'center'}>\r\n            <a href={props.internship.url}>\r\n              <p style={{ color: '#263763' }}>\r\n                {props.internship.position}\r\n              </p>\r\n            </a>\r\n          </Card.Header>\r\n          <Card.Meta style={{ paddingTop: '0.6rem' }}>\r\n            <Grid doubling>\r\n              <Grid.Row columns={1}>\r\n                <Grid.Column floated={'left'}>\r\n                  <p style={{ color: '#8860D0' }}>\r\n                    {props.internship.company}\r\n                  </p>\r\n                </Grid.Column>\r\n                <Grid.Column floated={'left'}>\r\n                  <Icon className='map marker alternate'/>\r\n                  <span>{props.internship.location.city}, {props.internship.location.state} {props.internship.location.zip}</span>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n\r\n            </Grid>\r\n          </Card.Meta>\r\n          <Card.Description style={{ paddingTop: '1rem' }}>\r\n            <Modal trigger={\r\n              <div align={'center'}>\r\n                <Button>Description</Button>\r\n              </div>\r\n            }>\r\n              <Modal.Header>Description</Modal.Header>\r\n              <Modal.Content>\r\n                <Modal.Description>\r\n                  {props.internship.description.split('\\n').map((item, key) =>\r\n                      <span key={key}>{item}<br/></span>)}\r\n                </Modal.Description>\r\n              </Modal.Content>\r\n              <Modal.Actions>\r\n                <Button primary>\r\n                  <Icon name='star'/>\r\n                  Add to Favorites\r\n                </Button>\r\n                <Button primary>\r\n                  Go to Listing <Icon name='chevron right'/>\r\n                </Button>\r\n              </Modal.Actions>\r\n            </Modal>\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          {props.internship.skills.map((skill) => (\r\n              hasSkill(skill)\r\n          ))}\r\n          {isRemote(props.internship.location.city)}\r\n        </Card.Content>\r\n        <Card.Content extra textAlign={'center'} style={{ paddingTop: '1rem' }}>\r\n          Posted: {formatDate(props.internship.posted)}\r\n        </Card.Content>\r\n        <Card.Content extra textAlign={'center'}>\r\n          <a href={props.internship.url}>\r\n            <Button color={'teal'} style={{ borderRadius: '10rem' }}>\r\n              Go to Listing: {siteName(props.internship.url)}\r\n            </Button>\r\n          </a>\r\n        </Card.Content>\r\n      </Card>\r\n  );\r\n}\r\n\r\nInternshipListingCard.propTypes = {\r\n  internship: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default InternshipListingCard;\r\n","import { Button, Grid, Icon, Label, Item, Header, Popup, Modal, Form, Radio } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport swal from 'sweetalert';\r\n\r\nfunction isRemote(remote) {\r\n  if (remote) {\r\n    return (\r\n        <Label circular style={{\r\n          backgroundColor: '#263763',\r\n          color: 'white',\r\n          margin: '0.2rem',\r\n        }}>\r\n          Remote\r\n        </Label>\r\n    );\r\n  }\r\n}\r\n\r\nfunction siteName(url) {\r\n  try {\r\n    if (url.includes('linkedin')) {\r\n      return 'LinkedIn';\r\n    }\r\n    if (url.includes('ziprecruiter')) {\r\n      return 'ZipRecruiter';\r\n    }\r\n    if (url.includes('monster')) {\r\n      return 'Monster';\r\n    }\r\n    if (url.includes('simplyhired')) {\r\n      return 'SimplyHired';\r\n    }\r\n    if (url.includes('internships')) {\r\n      return 'Chegg';\r\n    }\r\n    if (url.includes('youtern')) {\r\n      return 'Youtern';\r\n    }\r\n    if (url.includes('ihiretechnology')) {\r\n      return 'iHireTechnology';\r\n    }\r\n    if (url.includes('stackoverflow')) {\r\n      return 'iHireTechnology';\r\n    }\r\n    if (url.includes('glassdoor')) {\r\n      return 'Glassdoor';\r\n    }\r\n    if (url.includes('indeed')) {\r\n      return 'Indeed';\r\n    }\r\n    if (url.includes('angel')) {\r\n      return 'AngelList';\r\n    }\r\n    if (url.includes('acm')) {\r\n      return 'ACM';\r\n    }\r\n    if (url.includes('apple')) {\r\n      return 'Apple';\r\n    }\r\n    if (url.includes('americanexpress')) {\r\n      return 'American Express';\r\n    }\r\n    if (url.includes('coolworks')) {\r\n      return 'Coolworks';\r\n    }\r\n    return 'NSF-REU';\r\n  } catch (e) {\r\n    return 'Unknown';\r\n\r\n  }\r\n}\r\n\r\nfunction hasSkill(skill, hasSkills) {\r\n\r\n  if (typeof (hasSkills) === 'undefined') {\r\n    hasSkills = ['react', 'software engineering'];\r\n  }\r\n  const studentSkills = ['react', 'software engineering'];\r\n\r\n  const has = {\r\n    margin: '0.2rem',\r\n    backgroundColor: '#5680E9',\r\n    color: 'white',\r\n  };\r\n  const notHave = {\r\n    margin: '0.2rem',\r\n    backgroundColor: 'rgb(244, 244, 244)',\r\n    color: '#8f8f8f',\r\n  };\r\n\r\n  if (hasSkills.includes(skill)) {\r\n    return (\r\n        <Label circular key={skill} style={has}>\r\n          {skill}\r\n        </Label>\r\n    );\r\n  }\r\n  return (\r\n      <Label circular key={skill} style={notHave}>\r\n        {skill}\r\n      </Label>\r\n  );\r\n}\r\n\r\nfunction formatDate(stringDate) {\r\n  const date = new Date(stringDate).toDateString();\r\n  if (date !== 'Invalid Date') {\r\n    return date;\r\n  }\r\n  return 'Unknown';\r\n}\r\n\r\nfunction changeBackground(e) {\r\n  e.currentTarget.style.backgroundColor = '#fafafa';\r\n  e.currentTarget.style.cursor = 'pointer';\r\n}\r\n\r\nfunction onLeave(e) {\r\n  e.currentTarget.style.backgroundColor = 'transparent';\r\n}\r\n\r\nfunction description(internshipDescription) {\r\n  try {\r\n    const noScriptDescript = internshipDescription.replace(/<script>(.*?)<\\/script>/gi, '');\r\n    return (\r\n        <span dangerouslySetInnerHTML={{ __html: noScriptDescript }}/>\r\n        // internshipDescription.split('\\n').map((item, key) => <span key={key}>{item}<br/></span>)\r\n    );\r\n  } catch (e) {\r\n    console.log('No description field.');\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction InternshipListingCard2(props) {\r\n\r\n  return (\r\n      <Item onMouseEnter={changeBackground} onMouseLeave={onLeave}\r\n            style={{ padding: '0rem 2rem 0rem 2rem' }}>\r\n        <Modal closeIcon trigger={\r\n          <Item.Content>\r\n            <Item.Header>\r\n              <a href={props.internship.url} target=\"_blank\" rel='noopener noreferrer'>\r\n                <Header as={'h2'} style={{ color: 'rgb(0, 102, 204)', paddingTop: '2rem' }}>\r\n                  {props.internship.position}\r\n                </Header>\r\n              </a>\r\n            </Item.Header>\r\n            <Item.Meta>\r\n              <Item.Meta>\r\n                <Grid doubling>\r\n                  <Grid.Row columns={1} style={{ fontSize: '110%', paddingTop: '0.8rem' }}>\r\n                    <Grid.Column floated={'left'} style={{ paddingBottom: '0.3rem' }}>\r\n                      <p>\r\n                        <Icon className='building'/>\r\n                        <span>{props.internship.company} </span>\r\n                      </p>\r\n                    </Grid.Column>\r\n                    <Grid.Column floated={'left'}>\r\n                      <Icon className='map marker alternate'/>\r\n                      <span>{props.internship.location.city}, {props.internship.location.state} {props.internship.location.zip}</span>\r\n                    </Grid.Column>\r\n                    <Grid.Column style={{ paddingTop: '0.5rem' }}>\r\n                      <Icon className='calendar alternate'/>\r\n                      <span>Date Posted: {formatDate(props.internship.posted)}</span>\r\n                    </Grid.Column>\r\n                    <Grid.Column style={{ paddingTop: '0.4rem' }}>\r\n                      <Icon className='address book'/>\r\n                      <span>From: {siteName(props.internship.url)} Listing #{props.internship.index} </span>\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </Item.Meta>\r\n            </Item.Meta>\r\n            <Item.Description style={{ paddingBottom: '1rem' }}>\r\n              <div align={'left'}>\r\n                <div style={{ fontSize: '125%', height: '214px', width: '450px', overflow: 'hidden' }}>\r\n                    {description(props.internship.description)}\r\n                </div>\r\n              </div>\r\n              <Item.Extra style={{ paddingTop: '1rem' }} >\r\n              </Item.Extra>\r\n              <div>\r\n                {props.internship.skills.map((skill) => (\r\n                    hasSkill(skill, props.hasSkills)\r\n                ))}\r\n                {isRemote(props.internship.remote)}\r\n              </div>\r\n              <Item.Extra style={{ paddingBottom: '1rem' }} >\r\n              </Item.Extra>\r\n            </Item.Description>\r\n          </Item.Content>\r\n        }>\r\n          <Modal.Header>Description</Modal.Header>\r\n          <Modal.Content>\r\n            <Modal.Description>\r\n              {description(props.internship.description)}\r\n            </Modal.Description>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button style={{ fontSize: '110%', backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n              <Icon name='star'/>\r\n              Add to Favorites\r\n            </Button>\r\n            <a href={props.internship.url} target=\"_blank\" rel='noopener noreferrer'>\r\n              <Button style={{ fontSize: '110%', backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n                Go to Listing: {siteName(props.internship.url)}\r\n                <Icon name='chevron right'/>\r\n              </Button>\r\n            </a>\r\n          </Modal.Actions>\r\n        </Modal>\r\n        <Popup\r\n            content='Added to favorites!'\r\n            mouseLeaveDelay={200}\r\n            on='click'\r\n            trigger={\r\n              <Button style={{ backgroundColor: 'transparent' }}>\r\n                Add to favorites!\r\n              </Button>\r\n            }\r\n        />\r\n        <Modal closeIcon trigger={\r\n          <Button style={{ backgroundColor: 'transparent' }}>\r\n            Report a problem\r\n          </Button>\r\n        }>\r\n          <Modal.Header>Report a Problem</Modal.Header>\r\n          <Modal.Content>\r\n            <Modal.Description>\r\n              <Form>\r\n                <Form.Field>\r\n                  <Radio\r\n                      label='Broken Link'\r\n                      name='radioGroup'\r\n                      value='this'\r\n                      checked={'this'}\r\n                      // onChange={}\r\n                  />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <Radio\r\n                      label='Missing Data Fields'\r\n                      name='radioGroup'\r\n                      value='that'\r\n                      checked={'that'}\r\n                      // onChange={}\r\n                  />\r\n                </Form.Field>\r\n              </Form>\r\n            </Modal.Description>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button style={{ backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n              Report\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Item>\r\n  );\r\n}\r\n\r\nInternshipListingCard2.propTypes = {\r\n  internship: PropTypes.object.isRequired,\r\n  hasSkills: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default InternshipListingCard2;\r\n","import React from 'react';\r\nimport {\r\n  Segment,\r\n  Header,\r\n  Dropdown,\r\n  Label,\r\n  Input,\r\n  Form,\r\n  Checkbox,\r\n  Popup,\r\n  Search,\r\n  Menu,\r\n  Image, Container, Grid\r\n} from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport InternshipsFilters from './InternshipFilters';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SearchInternshipFeature({ onChildClick, passedData, locationVal, companyVal, sortVal, searchQuery, skillsVal, isRemote }) {\r\n\r\n  const internships = new InternshipsFilters();\r\n  const data = internships.mergeData();\r\n\r\n  let locationChange = locationVal;\r\n  let companyChange = companyVal;\r\n  let sortChange = sortVal;\r\n  let searchQueryChange = searchQuery;\r\n  let skillChange = skillsVal;\r\n  let remoteCheck = isRemote;\r\n\r\n  const sortBy = [\r\n    { key: 'date', text: 'date', value: 'date' },\r\n    { key: 'internship', text: 'internship', value: 'internship' },\r\n    { key: 'company', text: 'company', value: 'company' },\r\n  ];\r\n\r\n  const location = internships.dropdownLocation(data);\r\n  const company = internships.dropdownCompany(data);\r\n\r\n  const setFilters = () => {\r\n    const remoteFilter = internships.isRemote(data, remoteCheck);\r\n    const searchFiltered = internships.filterBySearch(remoteFilter, searchQueryChange);\r\n    const skillsFiltered = internships.filterBySkills(searchFiltered, skillChange);\r\n    const locationFiltered = internships.filterByLocation(skillsFiltered, locationChange);\r\n    const companyFiltered = internships.filterByCompany(locationFiltered, companyChange);\r\n    const sorted = internships.sortedBy(companyFiltered, sortChange);\r\n    onChildClick(sorted, locationChange, companyChange, sortChange, searchQueryChange, skillChange, remoteCheck);\r\n    window.scrollTo({\r\n      top: 70,\r\n      left: 100,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    searchQueryChange = event.target.value;\r\n  };\r\n\r\n  const handleCompanyChange = (event) => {\r\n    companyChange = event.target.value;\r\n  };\r\n\r\n  const getRemote = () => {\r\n    if (remoteCheck) {\r\n      remoteCheck = false;\r\n    } else {\r\n      remoteCheck = true;\r\n    }\r\n    setFilters();\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setFilters();\r\n  };\r\n\r\n  const getLocation = (event, { value }) => {\r\n    locationChange = value;\r\n    setFilters();\r\n  };\r\n\r\n  const getCompany = (event, { value }) => {\r\n    companyChange = value;\r\n    setFilters();\r\n  };\r\n\r\n  const getSort = (event, { value }) => {\r\n    sortChange = value;\r\n    setFilters();\r\n  };\r\n\r\n  const getSkills = (event, { value }) => {\r\n    skillChange = value;\r\n    setFilters();\r\n  };\r\n\r\n  const sticky = {\r\n    position: '-webkit-sticky',\r\n    position: 'sticky',\r\n    top: '6.5rem',\r\n  };\r\n\r\n  const has = {\r\n    margin: '0.2rem',\r\n    backgroundColor: '#5680E9',\r\n    color: 'white',\r\n  };\r\n  const notHave = {\r\n    margin: '0.2rem',\r\n    backgroundColor: 'rgb(244, 244, 244)',\r\n    color: '#8f8f8f',\r\n  };\r\n\r\n  return (\r\n      <Segment style={{ width: '100%', borderRadius: '10px', marginTop: '3rem' }}>\r\n        <Grid columns={'equal'}>\r\n          <div style={{ paddingTop: '2rem' }}>\r\n            <Header>\r\n              <Header.Content>\r\n                Total results found: {internships.total(passedData)}\r\n              </Header.Content>\r\n            </Header>\r\n          </div>\r\n          <Grid.Row>\r\n            <Grid.Column>\r\n                <Header>\r\n                  <Header.Content>\r\n                    Sort by {' '}\r\n                    <Dropdown\r\n                        inline\r\n                        header='Sort by...'\r\n                        options={sortBy}\r\n                        defaultValue={sortBy[0].value}\r\n                        onChange={getSort}\r\n                    />\r\n                  </Header.Content>\r\n                </Header>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Popup\r\n                      trigger={<Input icon='search'\r\n                                      iconPosition='left'\r\n                                      placeholder='Search ...'\r\n                                      onChange={handleSearchChange}\r\n                                      fluid\r\n                      />}\r\n                      content='Press enter to search!'\r\n                      on={'focus'}\r\n                  />\r\n\r\n                </Form>\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <Dropdown\r\n                    placeholder='Skills'\r\n                    fluid\r\n                    multiple\r\n                    search\r\n                    selection\r\n                    options={internships.dropdownSkills()}\r\n                    onChange={getSkills}\r\n                    style={{flexGrow: 0 }}\r\n\r\n                />\r\n            </Grid.Column>\r\n            <Grid.Column>\r\n                <Dropdown placeholder='Location'\r\n                          onChange={getLocation}\r\n                          defaultValue={location[0].value}\r\n                          fluid selection options={internships.dropdownLocation(passedData)}\r\n                          search\r\n                          style={{ flexGrow: 0 }}\r\n                />\r\n              <Checkbox style={{ paddingTop: '1rem' }} label='Remote'\r\n                        onClick={getRemote}/>\r\n            </Grid.Column>\r\n\r\n            {/*<div style={{ paddingTop: '2rem' }}>*/}\r\n            {/*  <Header>Company</Header>*/}\r\n            {/*  <Dropdown*/}\r\n            {/*      placeholder='Select a company'*/}\r\n            {/*      fluid selection options={internships.dropdownCompany(passedData)}*/}\r\n            {/*      defaultValue={company[0].value}*/}\r\n            {/*      onChange={getCompany}*/}\r\n            {/*      search*/}\r\n            {/*  />*/}\r\n            {/*</div>*/}\r\n            <Grid.Column>\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Input icon='home'\r\n                         iconPosition='left'\r\n                         placeholder='Enter a company'\r\n                         onChange={handleCompanyChange}\r\n                         fluid\r\n                  />\r\n                </Form>\r\n            </Grid.Column>\r\n            <Grid.Row>\r\n              <div style={{ paddingBottom: '2rem', paddingRight: '0.5rem' }} align={'center'}>\r\n                <Header>Key</Header>\r\n                <Label circular style={has}>\r\n                  Have skill\r\n                </Label>\r\n                <Label circular style={notHave}>\r\n                  Missing skill\r\n                </Label>\r\n              </div>\r\n            </Grid.Row>\r\n          </Grid.Row>\r\n\r\n        </Grid>\r\n\r\n      </Segment>\r\n\r\n      // <Segment style={sticky}>\r\n      //   <div style={{ paddingTop: '2rem' }}>\r\n      //     <Header>\r\n      //       <Header.Content>\r\n      //         Total results found: {internships.total(passedData)}\r\n      //       </Header.Content>\r\n      //     </Header>\r\n      //   </div>\r\n      //   <div style={{ paddingTop: '2rem' }}>\r\n      //     <Header>\r\n      //       <Header.Content>\r\n      //         Sort by {' '}\r\n      //         <Dropdown\r\n      //             inline\r\n      //             header='Sort by...'\r\n      //             options={sortBy}\r\n      //             defaultValue={sortBy[0].value}\r\n      //             onChange={getSort}\r\n      //         />\r\n      //       </Header.Content>\r\n      //     </Header>\r\n      //   </div>\r\n      //   <div style={{ paddingTop: '2rem' }}>\r\n      //     <Form onSubmit={handleSubmit}>\r\n      //       <Popup\r\n      //           trigger={<Input icon='search'\r\n      //                           iconPosition='left'\r\n      //                           placeholder='Search ...'\r\n      //                           onChange={handleSearchChange}\r\n      //                           fluid\r\n      //           />}\r\n      //           content='Press enter to search!'\r\n      //           on={'focus'}\r\n      //       />\r\n      //\r\n      //     </Form>\r\n      //     <div style={{ paddingTop: '2rem' }}>\r\n      //       <Header>Skills</Header>\r\n      //       <Dropdown\r\n      //           placeholder='Skills'\r\n      //           fluid\r\n      //           multiple\r\n      //           search\r\n      //           selection\r\n      //           options={internships.dropdownSkills()}\r\n      //           onChange={getSkills}\r\n      //       />\r\n      //     </div>\r\n      //   </div>\r\n      //   <div style={{ paddingTop: '2rem' }}>\r\n      //     <Header>Location</Header>\r\n      //     <Dropdown placeholder='Location'\r\n      //               onChange={getLocation}\r\n      //               defaultValue={location[0].value}\r\n      //               fluid selection options={internships.dropdownLocation(passedData)}\r\n      //               search\r\n      //     />\r\n      //     <Checkbox style={{ paddingTop: '1rem' }} label='Remote'\r\n      //               onClick={getRemote}/>\r\n      //   </div>\r\n      //\r\n      //   {/*<div style={{ paddingTop: '2rem' }}>*/}\r\n      //   {/*  <Header>Company</Header>*/}\r\n      //   {/*  <Dropdown*/}\r\n      //   {/*      placeholder='Select a company'*/}\r\n      //   {/*      fluid selection options={internships.dropdownCompany(passedData)}*/}\r\n      //   {/*      defaultValue={company[0].value}*/}\r\n      //   {/*      onChange={getCompany}*/}\r\n      //   {/*      search*/}\r\n      //   {/*  />*/}\r\n      //   {/*</div>*/}\r\n      //   <div style={{ paddingTop: '2rem' }}>\r\n      //     <Header>Company</Header>\r\n      //\r\n      //     <Form onSubmit={handleSubmit}>\r\n      //       <Input icon='home'\r\n      //              iconPosition='left'\r\n      //              placeholder='Enter a company'\r\n      //              onChange={handleCompanyChange}\r\n      //              fluid\r\n      //       />\r\n      //     </Form>\r\n      //   </div>\r\n      //   <div style={{ paddingTop: '2rem', paddingBottom: '2rem' }} align={'center'}>\r\n      //     <Header>Key</Header>\r\n      //     <Label circular style={has}>\r\n      //       Have skill\r\n      //     </Label>\r\n      //     <Label circular style={notHave}>\r\n      //       Missing skill\r\n      //     </Label>\r\n      //   </div>\r\n      // </Segment>\r\n  );\r\n}\r\n\r\nSearchInternshipFeature.propTypes = {\r\n  onChildClick: PropTypes.func.isRequired,\r\n  passedData: PropTypes.array.isRequired,\r\n  locationVal: PropTypes.string.isRequired,\r\n  companyVal: PropTypes.string.isRequired,\r\n  sortVal: PropTypes.string.isRequired,\r\n  searchQuery: PropTypes.string.isRequired,\r\n  skillsVal: PropTypes.array.isRequired,\r\n  isRemote: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default SearchInternshipFeature;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport _ from 'lodash';\r\nimport { Card, Container, Header, Icon, Grid, Pagination, Item } from 'semantic-ui-react';\r\nimport InternshipListingCard from './InternshipListingCard';\r\nimport InternshipListingCard2 from './InternshipListingCard2';\r\nimport SearchInternshipFeature from './SearchInternshipFeature';\r\nimport InternshipsFilters from './InternshipFilters';\r\n\r\nfunction InternshipListing() {\r\n\r\n  const internships = new InternshipsFilters();\r\n  const getInternshipData = internships.mergeData();\r\n\r\n  const [data, setData] = useState(getInternshipData);\r\n  const [paginatedData, setPaginatedData] = useState(getInternshipData.slice(0, 40));\r\n  const [location, setLocation] = useState('any');\r\n  const [company, setCompany] = useState('any');\r\n  const [sort, setSort] = useState('date');\r\n  const [search, setSearch] = useState('');\r\n  const [skills, setSkills] = useState([]);\r\n  const [remote, setRemote] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [height, setHeight] = useState(0);\r\n  const ref = useRef(null);\r\n\r\n  /* Passes data up from SearchInternshipFeature. SetPaginatedData allows data to be rendered\r\n  * for infinite scroll. */\r\n  function handleChildClick(passedData, locationVal, companyVal, sortVal, searchQueryVal, skillsVal, isRemote) {\r\n    setData(passedData);\r\n    setLocation(locationVal);\r\n    setCompany(companyVal);\r\n    setSort(sortVal);\r\n    setSearch(searchQueryVal);\r\n    setSkills(skillsVal);\r\n    setRemote(isRemote);\r\n    setPage(1);\r\n    setPaginatedData(passedData.slice(0, 40));\r\n  }\r\n\r\n  /* Grabs the height */\r\n  useEffect(() => {\r\n    setHeight(ref.current.clientHeight);\r\n  });\r\n\r\n  /* Infinite scrolling */\r\n  function handleScroll() {\r\n    window.onscroll = function () {\r\n      const scroll = window.innerHeight + window.pageYOffset;\r\n      // if we hit the bottom\r\n      if (scroll >= height - 500) {\r\n        // if there are still more items to be loaded\r\n        if (page <= Math.ceil(data.length / 40)) {\r\n          const newPage = page + 1;\r\n          setPage(newPage);\r\n          setPaginatedData(data.slice(0, newPage * 40));\r\n          // console.log('Current Page:', page);\r\n          // console.log('Total Pages:', Math.ceil(data.length / 40));\r\n          // console.log(paginatedData);\r\n          // console.log(\"you're at the bottom of the page\");\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /* Every single time we click a new page, it renders the new data set */\r\n  // const onChange = (e, pageInfo) => {\r\n  //   const page = pageInfo.activePage * 40;\r\n  //   setPaginatedData(data.slice(page - 40, page));\r\n  //   window.scrollTo({\r\n  //     top: 80,\r\n  //     left: 100,\r\n  //     behavior: 'smooth',\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n      <Container style={{ paddingTop: '5rem', marginLeft: '0.5rem', marginRight: '0.5rem' }}>\r\n        {/*<Header as='h2' textAlign={'center'}*/}\r\n        {/*        style={{ paddingBottom: '1rem', paddingTop: '3rem' }}>*/}\r\n        {/*  <Header.Content>*/}\r\n        {/*    <Icon name='graduation cap'/>*/}\r\n        {/*    All Internships*/}\r\n        {/*  </Header.Content>*/}\r\n        {/*</Header>*/}\r\n        <Grid columns={'equal'} doubling stackable>\r\n          <Grid.Row>\r\n            <SearchInternshipFeature onChildClick={handleChildClick} passedData={data}\r\n                                     companyVal={company} locationVal={location} sortVal={sort}\r\n                                     searchQuery={search} skillsVal={skills} isRemote={remote}/>\r\n          </Grid.Row>\r\n\r\n          <Grid.Row>\r\n            {/*<Card.Group itemsPerRow={3} doubling stackable>*/}\r\n            {/*  {_.map(paginatedData, (internship, index) => <InternshipListingCard*/}\r\n            {/*      internship={internship} key={index}/>)}*/}\r\n            {/*</Card.Group>*/}\r\n\r\n            <div onScroll={handleScroll()} ref={ref}>\r\n              <Item.Group divided relaxed style={{ backgroundColor: 'white' }}>\r\n                {_.map(paginatedData, (internship, index) => <InternshipListingCard2\r\n                    internship={internship} key={index}/>)}\r\n              </Item.Group>\r\n            </div>\r\n\r\n          </Grid.Row>\r\n        </Grid>\r\n        <div align={'center'} style={{ paddingTop: '5rem', paddingBottom: '5rem' }}>\r\n          {/*<Pagination*/}\r\n          {/*    defaultActivePage={1}*/}\r\n          {/*    onPageChange={onChange}*/}\r\n          {/*    totalPages={Math.ceil(data.length / 40)}*/}\r\n          {/*/>*/}\r\n        </div>\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default InternshipListing;\r\n","import React from 'react';\r\nimport { Container, Table, Header } from 'semantic-ui-react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass StatisticsRow extends React.Component {\r\n\r\n  render() {\r\n    const total = this.props.statistics.entries;\r\n    const position = ((this.props.statistics.position / total) * 100).toString().substring(0, 5);\r\n    const company = ((this.props.statistics.company / total) * 100).toString().substring(0, 5);\r\n    const contact = ((this.props.statistics.contact / total) * 100).toString().substring(0, 5);\r\n    const location = ((this.props.statistics.location / total) * 100).toString().substring(0, 5);\r\n    const posted = ((this.props.statistics.posted / total) * 100).toString().substring(0, 5);\r\n    const due = ((this.props.statistics.due / total) * 100).toString().substring(0, 5);\r\n    const start = ((this.props.statistics.start / total) * 100).toString().substring(0, 5);\r\n    const end = ((this.props.statistics.end / total) * 100).toString().substring(0, 5);\r\n    const compensation = ((this.props.statistics.compensation / total) * 100).toString().substring(0, 5);\r\n    const qualifications = ((this.props.statistics.qualifications / total) * 100).toString().substring(0, 5);\r\n    const skills = ((this.props.statistics.skills / total) * 100).toString().substring(0, 5);\r\n    const description = ((this.props.statistics.description / total) * 100).toString().substring(0, 5);\r\n    const lastScraped = this.props.statistics.lastScraped;\r\n\r\n    function formatDate(stringDate) {\r\n      const date = new Date(stringDate).toDateString();\r\n      if (date !== 'Invalid Date') {\r\n        return date;\r\n      }\r\n      return 'N/A';\r\n    }\r\n\r\n    function lastRow(site) {\r\n      if (site === 'Total') {\r\n        return (\r\n            <Table.Row>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {site}\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  N/A\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {total}\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {position}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {company}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {contact}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {location}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {posted}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {due}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {start}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {end}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {compensation}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4'>\r\n                  {qualifications}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {skills}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  {description}%\r\n                </Header>\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                <Header as='h4' >\r\n                  N/A\r\n                </Header>\r\n              </Table.Cell>\r\n            </Table.Row>\r\n\r\n        );\r\n      } else {\r\n        return (\r\n            <Table.Row>\r\n              <Table.Cell>{site}</Table.Cell>\r\n              <Table.Cell>{formatDate(lastScraped)}</Table.Cell>\r\n              <Table.Cell>{total}</Table.Cell>\r\n              <Table.Cell>{position}%</Table.Cell>\r\n              <Table.Cell>{company}%</Table.Cell>\r\n              <Table.Cell>{contact}%</Table.Cell>\r\n              <Table.Cell>{location}%</Table.Cell>\r\n              <Table.Cell>{posted}%</Table.Cell>\r\n              <Table.Cell>{due}%</Table.Cell>\r\n              <Table.Cell>{start}%</Table.Cell>\r\n              <Table.Cell>{end}%</Table.Cell>\r\n              <Table.Cell>{compensation}%</Table.Cell>\r\n              <Table.Cell>{qualifications}%</Table.Cell>\r\n              <Table.Cell>{skills}%</Table.Cell>\r\n              <Table.Cell>{description}%</Table.Cell>\r\n              <Table.Cell>{lastScraped}</Table.Cell>\r\n            </Table.Row>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n        <>\r\n          {lastRow(this.props.statistics.site)}\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nStatisticsRow.propTypes = {\r\n  statistics: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default StatisticsRow;\r\n","import React from 'react';\r\nimport { Container, Table, Header } from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport statisticData from './data/statistics.data';\r\nimport StatisticsRow from './StatisticsRow';\r\n\r\n/** A simple static component to render some text for the Statistics page. */\r\nclass Statistics extends React.Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <Container style={{ marginTop: '10rem', marginBottom: '4rem' }}>\r\n            <Header textAlign={'center'}\r\n                    as={'h2'}\r\n                    style={{ marginBottom: '2rem' }}>\r\n              Statistics\r\n            </Header>\r\n            <Table attached='top' celled>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Site</Table.HeaderCell>\r\n                  <Table.HeaderCell>Last Scraped</Table.HeaderCell>\r\n                  <Table.HeaderCell>Total</Table.HeaderCell>\r\n                  <Table.HeaderCell>Position</Table.HeaderCell>\r\n                  <Table.HeaderCell>Company</Table.HeaderCell>\r\n                  <Table.HeaderCell>Contact</Table.HeaderCell>\r\n                  <Table.HeaderCell>Location</Table.HeaderCell>\r\n                  <Table.HeaderCell>Posted</Table.HeaderCell>\r\n                  <Table.HeaderCell>Due</Table.HeaderCell>\r\n                  <Table.HeaderCell>Start</Table.HeaderCell>\r\n                  <Table.HeaderCell>End</Table.HeaderCell>\r\n                  <Table.HeaderCell>Compensation</Table.HeaderCell>\r\n                  <Table.HeaderCell>Qualifications</Table.HeaderCell>\r\n                  <Table.HeaderCell>Skills</Table.HeaderCell>\r\n                  <Table.HeaderCell>Description</Table.HeaderCell>\r\n                  <Table.HeaderCell>LastScraped</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n              <Table.Body>\r\n                {_.map((statisticData), (statistics, index) => <StatisticsRow\r\n                    statistics={statistics} key={index}/>)}\r\n              </Table.Body>\r\n            </Table>\r\n          </Container>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport { Container, Menu, Image, Icon, Dropdown } from 'semantic-ui-react';\r\nimport { Link, withRouter, NavLink } from 'react-router-dom';\r\n\r\n/** A simple static component to render some text for the NavBar page. */\r\nclass NavBar extends React.Component {\r\n  render() {\r\n    const linkStyle = {\r\n      color: '#263763',\r\n    };\r\n    return (\r\n        <Container>\r\n          <Menu className={'top meni fixed borderless'}\r\n                style={{ backgroundColor: '#C1C8E4', border: 0, boxShadow: '0 0 BLACK' }}>\r\n            <Menu.Item>\r\n              <a href={'/internaloha'}>\r\n                <Image src={'images/logo.png'} size={'small'}/>\r\n              </a>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Link to='/all-internships' style={linkStyle}>All Internships</Link>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Link to='/internaloha' style={linkStyle}>Recommended Internships</Link>\r\n            </Menu.Item>\r\n            <Menu.Item>\r\n              <Link to=\"/statistics\" style={linkStyle}>Statistics</Link>\r\n            </Menu.Item>\r\n            {/*<Menu.Item position='right'>*/}\r\n            {/*  <Dropdown text=\"John Foo\" pointing=\"top right\" icon={'user'}>*/}\r\n            {/*    <Dropdown.Menu>*/}\r\n            {/*      <Dropdown.Item icon=\"user\" text=\"Profile\" as={NavLink} exact to={'/internbit/profile'} />*/}\r\n            {/*      <Dropdown.Item icon=\"file text\" text=\"Applications\" as={NavLink} exact to={'/internbit/applications'} />*/}\r\n            {/*    </Dropdown.Menu>*/}\r\n            {/*  </Dropdown>*/}\r\n            {/*</Menu.Item>*/}\r\n          </Menu>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Image,\r\n  Header,\r\n  Button,\r\n  Label,\r\n  Progress,\r\n  Item,\r\n  Dropdown\r\n} from 'semantic-ui-react';\r\nimport { Link, withRouter, NavLink } from 'react-router-dom';\r\n\r\nclass Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: 'Software Engineering',\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const headerStyle = {\r\n      margin: '1rem 0rem',\r\n    };\r\n\r\n    const interests = ['Social Computing', 'Cloud Computing', 'Human Computer Interaction',\r\n    'Education'];\r\n\r\n    const careers = ['Software Engineering', 'Mobile Development', 'Data Science', 'Education'];\r\n\r\n    const courses = ['ICS 321', 'ICS 311', 'ICS 499', 'ICS 235'];\r\n\r\n    const opportunities = ['HACC', 'LAVA Lab', 'ICSpark'];\r\n\r\n    function changeBackground(e) {\r\n      e.currentTarget.style.boxShadow = 'rgb(195 195 195 / 79%) 0px 0px 6px 5px';\r\n      e.currentTarget.style.cursor = 'pointer';\r\n\r\n    }\r\n\r\n    function onLeave(e) {\r\n      e.currentTarget.style.boxShadow = 'rgba(0, 0, 0, 0) 0px 0px 0px 0px';\r\n    }\r\n\r\n    const renderLabels = (label, key) => (\r\n          <Label circular color={'grey'} key={key}\r\n            style={{ margin: '0.4rem 0.5rem', padding: '0.2rem 0.3rem' }}>\r\n            {label}\r\n          </Label>\r\n      );\r\n\r\n    const renderTab = (careerPath) => {\r\n      this.setState({ title: careerPath });\r\n    };\r\n\r\n    return (\r\n      <Container style={{ margin: '10rem 0rem 5rem 0rem' }}>\r\n        <Grid columns={2} stackable\r\n              style={{ backgroundColor: 'white', borderRadius: '1rem',\r\n                padding: '3rem 2rem' }}>\r\n          <Grid.Column width={10}>\r\n            <Grid columns={2} stackable>\r\n              <Grid.Row>\r\n                <Grid.Column textAlign={'center'}>\r\n                  <Image\r\n                      style={{ marginBottom: '1.5rem' }}\r\n                      circular\r\n                      centered\r\n                      size={'small'}\r\n                      src={'https://images.squarespace-cdn.com/content/v1/54bbd50ce4b05e8a36418abc/1533226867020-NALD4HA8GBL3IUIQE9PM/ke17ZwdGBToddI8pDm48kMh3mVmBaCAeGwqCLG3iONRZw-zPPgdn4jUwVcJE1ZvWQUxwkmyExglNqGp0IvTJZamWLI2zvYWH8K3-s_4yszcp2ryTI0HqTOaaUohrI8PITeQtWPcxF65ANawkK25DREOmFck9peR6QL8AnpRiPJE/rachel-rouhana-profile-picture-circle.png?format=500w'}>\r\n                  </Image>\r\n                  <Header style={{ margin: '0.7rem' }}>\r\n                    Jane Foo\r\n                  </Header>\r\n                  <p style={{ margin: '0rem' }}>\r\n                    B.S Computer Science\r\n                  </p>\r\n                  <p>\r\n                    Intended Graduation Date | Spring 2021\r\n                  </p>\r\n                  <Button as={NavLink} exact to={'/internbit/edit-profile'}>\r\n                    Edit Profile\r\n                  </Button>\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <Grid.Row>\r\n                    <Header style={{ marginBottom: '1rem' }}>\r\n                      Interests\r\n                    </Header>\r\n                    {interests.map((interest, key) => (\r\n                        renderLabels(interest, key)\r\n                    ))}\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <Header style={{ margin: '1rem 0rem' }}>\r\n                      Career Goals\r\n                    </Header>\r\n                    {careers.map((career, key) => (\r\n                        renderLabels(career, key)\r\n                    ))}\r\n                  </Grid.Row>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row>\r\n                <Grid.Column stretched style={{ width: '100%' }}>\r\n                  <Header style={{ margin: '1rem 0rem' }}>\r\n                    Progress\r\n                  </Header>\r\n                  <Progress value='7.4' total='10' progress='percent' label='Software Engineering'\r\n                    onClick={() => renderTab('Software Engineering')} onMouseEnter={changeBackground} onMouseLeave={onLeave}/>\r\n                  <Progress value='6' total='10' progress='percent' label='Mobile Development'\r\n                            onClick={() => renderTab('Mobile Development')} onMouseEnter={changeBackground} onMouseLeave={onLeave}/>\r\n                  <Progress value='4' total='10' progress='percent' label='Data Science'\r\n                            onClick={() => renderTab('Data Science')} onMouseEnter={changeBackground} onMouseLeave={onLeave}/>\r\n                  <Progress value='6.1' total='10' progress='percent' label='Education'\r\n                            onClick={() => renderTab('Education')} onMouseEnter={changeBackground} onMouseLeave={onLeave}/>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Grid.Column>\r\n          <Grid.Column width={6}\r\n                       style={{ backgroundColor: '#e5e5e5', borderRadius: '1rem' }}>\r\n            <Header dividing style={{ margin: '1rem 0rem' }} textAlign={'center'}>\r\n              {this.state.title}\r\n            </Header>\r\n            <Header as={'h3'} style={headerStyle}>\r\n              Courses\r\n            </Header>\r\n            {courses.map((course, key) => (\r\n                renderLabels(course, key)\r\n            ))}\r\n            <Header as={'h3'} style={headerStyle}>\r\n              Recommended Opportunities\r\n            </Header>\r\n            {opportunities.map((opportunity, key) => (\r\n                renderLabels(opportunity, key)\r\n            ))}\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(Profile);\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Image,\r\n  Header,\r\n  Button,\r\n  Label,\r\n  Progress,\r\n  Item,\r\n  Modal, Icon, Popup, Dropdown,\r\n} from 'semantic-ui-react';\r\nimport swal from 'sweetalert';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass JobCart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      status: 'Not Applied',\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const skills = ['Social Computing', 'Cloud Computing', 'Human Computer Interaction',\r\n      'Education'];\r\n\r\n    const options = [\r\n      { key: 1, text: 'Not Applied', value: 'Not Applied' },\r\n      { key: 2, text: 'Applied', value: 'Applied' },\r\n      { key: 3, text: 'Interviewing', value: 'Interviewing' },\r\n      { key: 4, text: 'Offered', value: 'Offered' },\r\n      { key: 5, text: 'Rejected', value: 'Rejected' },\r\n    ];\r\n\r\n    function hasSkill(skill) {\r\n      const studentSkills = ['react', 'software engineering'];\r\n\r\n      const has = {\r\n        margin: '0.2rem',\r\n        backgroundColor: '#5680E9',\r\n        color: 'white',\r\n      };\r\n      const notHave = {\r\n        margin: '0.2rem',\r\n        backgroundColor: 'rgb(244, 244, 244)',\r\n        color: '#8f8f8f',\r\n      };\r\n\r\n      if (studentSkills.includes(skill)) {\r\n        return (\r\n            <Label circular key={skill} style={has}>\r\n              {skill}\r\n            </Label>\r\n        );\r\n      }\r\n      return (\r\n          <Label circular key={skill} style={notHave}>\r\n            {skill}\r\n          </Label>\r\n      );\r\n    }\r\n\r\n    function changeBackground(e) {\r\n      e.currentTarget.style.boxShadow = 'rgb(195 195 195 / 79%) 0px 0px 6px 5px';\r\n      e.currentTarget.style.cursor = 'pointer';\r\n\r\n    }\r\n\r\n    function onLeave(e) {\r\n      e.currentTarget.style.boxShadow = 'rgba(0, 0, 0, 0) 0px 0px 0px 0px';\r\n    }\r\n\r\n    const onSelectDropdown = (event, data) => {\r\n      this.setState({ status: data.value });\r\n    };\r\n\r\n    const onRemove = () => {\r\n      swal({\r\n        title: 'Are you sure?',\r\n        text: 'Once removed, you will not be able to recover it.',\r\n        icon: 'warning',\r\n        buttons: true,\r\n        dangerMode: true,\r\n      })\r\n          .then((willDelete) => {\r\n            if (willDelete) {\r\n              swal('Internship was removed.', {\r\n                icon: 'success',\r\n              });\r\n            } else {\r\n              swal('Request canceled.');\r\n            }\r\n          });\r\n    };\r\n\r\n    return (\r\n        <Container style={{ margin: '10rem 0rem 5rem 0rem' }}>\r\n          <Item onMouseEnter={changeBackground} onMouseLeave={onLeave}\r\n                style={{ padding: '0rem 2rem 0rem 2rem', backgroundColor: 'white' }}>\r\n            <Grid doubling columns={2}>\r\n              <Grid.Column width={12}>\r\n                <Item.Content>\r\n                  <Item.Header>\r\n                    <a href={''} target=\"_blank\" rel='noopener noreferrer'>\r\n                      <Header as={'h3'} style={{ color: '#263763', paddingTop: '2rem' }}>\r\n                        Software Engineering\r\n                      </Header>\r\n                    </a>\r\n\r\n                  </Item.Header>\r\n                  <Item.Meta>\r\n                    <Item.Meta>\r\n                      <Grid doubling>\r\n                        <Grid.Row columns={1} style={{ paddingTop: '0.8rem' }}>\r\n                          <Grid.Column floated={'left'} style={{ paddingBottom: '0.3rem' }}>\r\n                            <p style={{ color: 'rgb(89, 119, 199)' }}>\r\n                              Amazon\r\n                            </p>\r\n                          </Grid.Column>\r\n                          <Grid.Column floated={'left'}>\r\n                            <Icon className='map marker alternate'/>\r\n                            <span>Seattle, WA 99999 | August 10, 2020</span>\r\n                          </Grid.Column>\r\n                        </Grid.Row>\r\n\r\n                      </Grid>\r\n                    </Item.Meta>\r\n                  </Item.Meta>\r\n                  <Item.Description style={{ paddingTop: '1rem', paddingBottom: '1rem' }}>\r\n                    <div align={'left'}>\r\n                      <Button size={'tiny'}\r\n                              style={{ backgroundColor: 'transparent', padding: '0rem' }}>\r\n                        From: Indeed\r\n                      </Button>\r\n                    </div>\r\n\r\n                  </Item.Description>\r\n                  <Item.Extra>\r\n                    {skills.map((skill) => (\r\n                        hasSkill(skill)\r\n                    ))}\r\n                    {/* {isRemote(props.internship.remote)} */}\r\n                  </Item.Extra>\r\n                  <Item.Extra style={{ paddingBottom: '2rem' }}>\r\n                  </Item.Extra>\r\n                </Item.Content>\r\n              </Grid.Column>\r\n              <Grid.Column width={4} textAlign={'right'}>\r\n                <Icon className={'x'} style={{ marginBottom: '1rem' }}\r\n                      onClick={() => onRemove()}/>\r\n                <br/>\r\n                <Dropdown options={options}\r\n                          placeholder='Status'\r\n                          selection\r\n                          onChange={onSelectDropdown}\r\n                />\r\n                <br/>\r\n                <p style={{ margin: '1rem 0rem' }}>\r\n                  {this.state.status}: October 10, 2020\r\n                  <br/>\r\n                </p>\r\n                <Modal closeIcon trigger={\r\n                  <Button>\r\n                    Check info\r\n                  </Button>\r\n                }>\r\n                  <Modal.Header>Description</Modal.Header>\r\n                  <Modal.Content>\r\n                    <Modal.Description>\r\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Commodi dolores esse\r\n                      est\r\n                      incidunt, nesciunt officia placeat quasi quis! Asperiores assumenda atque\r\n                      corporis\r\n                      deserunt fugit ipsum magni minima quaerat similique vitae!\r\n                    </Modal.Description>\r\n                  </Modal.Content>\r\n                  <Modal.Actions>\r\n                    <a href={''} target=\"_blank\" rel='noopener noreferrer'>\r\n                      <Button style={{ backgroundColor: 'rgb(89, 119, 199)', color: 'white' }}>\r\n                        Go to Listing: Indeed\r\n                        <Icon name='chevron right'/>\r\n                      </Button>\r\n                    </a>\r\n                  </Modal.Actions>\r\n                </Modal>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Item>\r\n        </Container>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(JobCart);\r\n","import React from 'react';\r\nimport { Container, Checkbox, Header, Button, Input, Form, Select, Dropdown } from 'semantic-ui-react';\r\nimport swal from 'sweetalert';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass EditProfile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      notifications: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    const majorOptions = [\r\n      { key: 'm', text: 'B.A Information & Computer Science', value: 'B.A Information & Computer Science' },\r\n      { key: 'f', text: 'B.S Computer Science', value: 'B.S Computer Science' },\r\n      { key: 'o', text: 'B.S Computer Science - Data Science', value: 'B.S Computer Science - Data Science' },\r\n    ];\r\n\r\n    const skillOptions = [\r\n      { key: 'm', text: 'Java', value: 'Java' },\r\n      { key: 'f', text: 'Javascript', value: 'Javascript' },\r\n      { key: 'o', text: 'React', value: 'React' },\r\n    ];\r\n\r\n    const careerOptions = [\r\n      { key: 'm', text: 'Software Developer', value: 'Software Developer' },\r\n      { key: 'f', text: 'Full-Stack Developer', value: 'Full-Stack Developer' },\r\n      { key: 'o', text: 'Data Scientist', value: 'Data Scientist' },\r\n    ];\r\n\r\n    const interestOptions = [\r\n      { key: 'm', text: 'Social Computing', value: 'Social Computing' },\r\n      { key: 'f', text: 'Web Development', value: 'Web Development' },\r\n      { key: 'o', text: 'Education', value: 'Education' },\r\n    ];\r\n\r\n    const email = [\r\n      { key: 'm', text: 'Daily', value: 'Daily' },\r\n      { key: 'f', text: 'Weekly', value: 'Weekly' },\r\n    ];\r\n\r\n    const onToggle = () => {\r\n      this.setState({ notifications: !this.state.notifications });\r\n    };\r\n\r\n    const onUpdate = () => {\r\n      swal({\r\n        title: 'Profile updated',\r\n        text: '',\r\n        icon: 'success',\r\n      });\r\n    };\r\n\r\n    return (\r\n        <Container style={{\r\n          margin: '10rem 0rem 5rem 0rem', backgroundColor: 'white',\r\n          borderRadius: '1rem', padding: '3rem 2rem',\r\n        }}>\r\n          <Form>\r\n            <Header textAlign={'center'} as={'h2'} style={{ marginBottom: '2rem' }}>\r\n              Edit Profile\r\n            </Header>\r\n            <Form.Group widths='equal'>\r\n              <Form.Field\r\n                  id='form-input-control-first-name'\r\n                  control={Input}\r\n                  label='First name'\r\n                  placeholder='First name'\r\n              />\r\n              <Form.Field\r\n                  id='form-input-control-last-name'\r\n                  control={Input}\r\n                  label='Last name'\r\n                  placeholder='Last name'\r\n              />\r\n            </Form.Group>\r\n            Profile Image\r\n            <Button style={{ marginLeft: '1rem' }}>\r\n              Upload\r\n            </Button>\r\n            <Form.Field\r\n                control={Select}\r\n                options={majorOptions}\r\n                label={{ children: 'Major' }}\r\n                placeholder='Major'\r\n                search\r\n            />\r\n            <Form.Field\r\n                fluid multiple selection clearable\r\n                control={Dropdown}\r\n                options={skillOptions}\r\n                label={{ children: 'Skills' }}\r\n                placeholder='Skills'\r\n                search\r\n            />\r\n            <Form.Field\r\n                fluid multiple selection clearable\r\n                control={Select}\r\n                options={interestOptions}\r\n                label={{ children: 'Interests' }}\r\n                placeholder='Interests'\r\n                search\r\n            />\r\n            <Form.Field\r\n                fluid multiple selection clearable\r\n                control={Select}\r\n                options={careerOptions}\r\n                label={{ children: 'Career Goals' }}\r\n                placeholder='Career'\r\n                search\r\n            />\r\n\r\n            <Header textAlign={'center'} as={'h2'}>\r\n              Notifications\r\n            </Header>\r\n            <Checkbox toggle label={'Enable Email Notifcations?'}\r\n                      onChange={onToggle}\r\n                      style={{ marginBottom: '1rem' }}/>\r\n            { this.state.notifications ? (\r\n                    <Form.Field\r\n                        control={Select}\r\n                        options={email}\r\n                        label={{ children: 'Email Frequency' }}\r\n                        placeholder='Email frequency'\r\n                        search\r\n                    />\r\n                )\r\n            :\r\n                (<div>\r\n\r\n                </div>)\r\n            }\r\n            <div align={'center'} >\r\n              <Button style={{ marginTop: '1rem' }}\r\n                onClick={onUpdate}>\r\n                Update\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Container>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(EditProfile);\r\n","import natural from 'natural';\r\nimport _ from 'lodash';\r\nimport career_interest_to_skill from './career_interest_to_skill';\r\n\r\nfunction test(data) {\r\n  const TfIdf = natural.TfIdf;\r\n  const tfidf = new TfIdf();\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    tfidf.addDocument(data[i].description);\r\n  }\r\n\r\n  const tfidfData = [];\r\n\r\n  // tfidf.addDocument('this document is about node.');\r\n  // tfidf.addDocument('this document is about ruby.');\r\n  // tfidf.addDocument('this document is about ruby and node.');\r\n  // tfidf.addDocument('this document is about node. it has node examples');\r\n\r\n  console.log('javascript full-stack css hmtl --------------------------------');\r\n\r\n  tfidf.tfidfs('javascript full-stack css hmtl ', function (i, measure) {\r\n    //  console.log('document #' + i + ' is ' + measure);\r\n    if (measure > 6) {\r\n      console.log('document #' + i + ' is ' + measure);\r\n      tfidfData.push(data[i]);\r\n    }\r\n  });\r\n\r\n  // console.log(tfidfData);\r\n  return tfidfData;\r\n\r\n  // console.log('ruby --------------------------------');\r\n  // tfidf.tfidfs('ruby', function (i, measure) {\r\n  //   console.log('document #' + i + ' is ' + measure);\r\n  // });\r\n}\r\n\r\nfunction dropdownCareerInterest() {\r\n\r\n  const info = [];\r\n  for (let i = 0; i < career_interest_to_skill.length; i++) {\r\n    info.push({\r\n      key: career_interest_to_skill[i].career,\r\n      text: career_interest_to_skill[i].career,\r\n      value: career_interest_to_skill[i].career,\r\n    });\r\n  }\r\n  return info;\r\n}\r\n\r\nfunction recommendation(tags, careers, data) {\r\n\r\n  if (tags.length === 0 && careers.length === 0) {\r\n    return data;\r\n  }\r\n\r\n  const skills = [];\r\n\r\n  let careerSkills = [];\r\n  for (let i = 0; i < career_interest_to_skill.length; i++) {\r\n    for (let k = 0; k < careers.length; k++) {\r\n      if (careers[k] === career_interest_to_skill[i].career) {\r\n        for (let j = 0; j < career_interest_to_skill[i].skills.length; j++) {\r\n          careerSkills.push(career_interest_to_skill[i].skills[j]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  careerSkills = _.uniq(careerSkills);\r\n\r\n  // const lowerCaseTags = [];\r\n\r\n  // for (let i = 0; i < tags.length; i++) {\r\n  //   lowerCaseTags.push(tags[i].toString().toLowerCase());\r\n  // }\r\n\r\n  const totalSkills = _.uniq(careerSkills.concat(tags));\r\n\r\n  // console.log(totalSkills);\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    let foundTag = false;\r\n    let num = 0;\r\n    let total = 0;\r\n    for (let j = 0; j < data[i].skills.length; j++) {\r\n      for (let k = 0; k < totalSkills.length; k++) {\r\n        if (data[i].skills[j].includes(totalSkills[k])) {\r\n          num++;\r\n          foundTag = true;\r\n        }\r\n      }\r\n      total = data[i].skills.length;\r\n    }\r\n    if (foundTag === true) {\r\n\r\n      data[i].recommendation = num / total;\r\n      skills.push(data[i]);\r\n    }\r\n  }\r\n\r\n  const sorted = _.orderBy(skills, ['recommendation'], ['desc']);\r\n\r\n  console.log(sorted);\r\n\r\n// for (let i = 0; i < data.length; i++) {\r\n//   // if any of the tags exist in data set, push it to skills and go to next\r\n//   while (counter < totalSkills.length && exists === false) {\r\n//     if (data[i].skills.includes(totalSkills[counter])) {\r\n//       skills.push(data[i]);\r\n//       exists = true;\r\n//     }\r\n//     counter++;\r\n//   }\r\n//   counter = 0;\r\n//   exists = false;\r\n// }\r\n// console.log(skills);\r\n  return sorted;\r\n}\r\n\r\nexport { recommendation, dropdownCareerInterest, test };\r\n","import React from 'react';\r\nimport {\r\n  Segment,\r\n  Header,\r\n  Dropdown,\r\n  Form, Modal, Button\r\n} from 'semantic-ui-react';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport swal from 'sweetalert';\r\nimport InternshipsFilters from './InternshipFilters';\r\nimport { recommendation, dropdownCareerInterest } from './RecommendationScript';\r\n\r\nfunction MockProfile({ onChildClick, passedData, skillsVal, careerVal }) {\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const internships = new InternshipsFilters();\r\n  const data = internships.mergeData();\r\n\r\n  // let locationChange = locationVal;\r\n  // let companyChange = companyVal;\r\n  // let sortChange = sortVal;\r\n  // let searchQueryChange = searchQuery;\r\n  // let remoteCheck = isRemote;\r\n\r\n  let skillChange = skillsVal;\r\n  let careerChange = careerVal;\r\n  let recommendedData = [];\r\n\r\n  const setFilters = () => {\r\n    // const remoteFilter = internships.isRemote(data, remoteCheck);\r\n    // const searchFiltered = internships.filterBySearch(remoteFilter, searchQueryChange);\r\n    // const skillsFiltered = internships.filterBySkills(searchFiltered, skillChange);\r\n    // const locationFiltered = internships.filterByLocation(skillsFiltered, locationChange);\r\n    // const companyFiltered = internships.filterByCompany(locationFiltered, companyChange);\r\n    // const sorted = internships.sortedBy(companyFiltered, sortChange);\r\n    onChildClick(recommendedData, skillChange, careerChange);\r\n\r\n    window.scrollTo({\r\n      top: 70,\r\n      left: 100,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  // console.log(test(data))\r\n\r\n  // const handleSearchChange = (event) => {\r\n  //   searchQueryChange = event.target.value;\r\n  // };\r\n  //\r\n  // const getRemote = () => {\r\n  //   if (remoteCheck) {\r\n  //     remoteCheck = false;\r\n  //   } else {\r\n  //     remoteCheck = true;\r\n  //   }\r\n  //   setFilters();\r\n  // };\r\n\r\n  const handleSubmit = () => {\r\n    setFilters();\r\n  };\r\n\r\n  //\r\n  // const getLocation = (event, { value }) => {\r\n  //   locationChange = value;\r\n  //   setFilters();\r\n  // };\r\n  //\r\n  // const getCompany = (event, { value }) => {\r\n  //   companyChange = value;\r\n  //   setFilters();\r\n  // };\r\n  //\r\n  // const getSort = (event, { value }) => {\r\n  //   sortChange = value;\r\n  //   setFilters();\r\n  // };\r\n  //\r\n  const getSkills = (event, { value }) => {\r\n    skillChange = value;\r\n    recommendedData = recommendation(skillChange, careerChange, data);\r\n    setFilters();\r\n  };\r\n\r\n  const getCareerInterest = (event, { value }) => {\r\n    careerChange = value;\r\n    recommendedData = recommendation(skillChange, careerChange, data);\r\n    setFilters();\r\n  };\r\n\r\n  const sticky = {\r\n    position: '-webkit-sticky',\r\n    position: 'sticky',\r\n    top: '6.5rem',\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (careerChange.length === 0 || skillChange.length === 0) {\r\n      swal({\r\n        title: 'Fields are required',\r\n        text: '',\r\n        icon: 'error',\r\n      });\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n      <Modal\r\n          onClose={() => setOpen(false)}\r\n          onOpen={() => setOpen(true)}\r\n          open={open}\r\n          closeOnDimmerClick={false}\r\n          trigger={<div/>}\r\n      >\r\n        <Modal.Header>Enter your Information</Modal.Header>\r\n        <Modal.Content>\r\n          <Modal.Description>\r\n            <Form>\r\n              <Form.Field\r\n                  required\r\n                  fluid multiple selection clearable\r\n                  control={Dropdown}\r\n                  options={internships.dropdownSkills()}\r\n                  label={{ children: 'Skills' }}\r\n                  placeholder='Skills'\r\n                  search\r\n                  onChange={getSkills}\r\n              />\r\n            </Form>\r\n            <div style={{ paddingTop: '2rem' }}>\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Field\r\n                    required\r\n                    fluid multiple selection clearable\r\n                    control={Dropdown}\r\n                    options={dropdownCareerInterest()}\r\n                    label={{ children: 'Career Interest' }}\r\n                    placeholder='Career Interest'\r\n                    search\r\n                    onChange={getCareerInterest}\r\n                />\r\n              </Form>\r\n            </div>\r\n          </Modal.Description>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n              content=\"Submit\"\r\n              labelPosition='right'\r\n              icon='checkmark'\r\n              onClick={() => onSubmit()}\r\n              positive\r\n\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n      // <Segment style={sticky}>\r\n      //   <div style={{ paddingTop: '2rem' }}>\r\n      //     <Header>\r\n      //       Mock Profile\r\n      //       <Header.Content>\r\n      //         Total results found: {internships.total(passedData)}\r\n      //       </Header.Content>\r\n      //     </Header>\r\n      //   </div>\r\n      //   <div style={{ paddingTop: '2rem' }}>\r\n      //     <Form>\r\n      //       <Form.Field\r\n      //           fluid multiple selection clearable\r\n      //           control={Dropdown}\r\n      //           options={internships.dropdownSkills()}\r\n      //           label={{ children: 'Skills' }}\r\n      //           placeholder='Skills'\r\n      //           search\r\n      //           onChange={getSkills}\r\n      //       />\r\n      //     </Form>\r\n      //   </div>\r\n      //   <div style={{ paddingTop: '2rem' }}>\r\n      //     <Form onSubmit={handleSubmit}>\r\n      //       <Form.Field\r\n      //           fluid multiple selection clearable\r\n      //           control={Dropdown}\r\n      //           options={dropdownCareerInterest()}\r\n      //           label={{ children: 'Career Interest' }}\r\n      //           placeholder='Career Interest'\r\n      //           search\r\n      //           onChange={getCareerInterest}\r\n      //       />\r\n      //     </Form>\r\n      //   </div>\r\n      // </Segment>\r\n  );\r\n}\r\n\r\nMockProfile.propTypes = {\r\n  onChildClick: PropTypes.func.isRequired,\r\n  passedData: PropTypes.array.isRequired,\r\n  skillsVal: PropTypes.array.isRequired,\r\n  careerVal: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default MockProfile;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport _ from 'lodash';\r\nimport { Container, Header, Icon, Grid, Item } from 'semantic-ui-react';\r\nimport InternshipListingCard2 from './InternshipListingCard2';\r\nimport MockProfile from './MockProfile';\r\nimport InternshipsFilters from './InternshipFilters';\r\n\r\nfunction RecommendedInternships() {\r\n\r\n  const internships = new InternshipsFilters();\r\n  const getInternshipData = internships.mergeData();\r\n\r\n  const [data, setData] = useState(getInternshipData);\r\n  const [paginatedData, setPaginatedData] = useState(getInternshipData.slice(0, 40));\r\n\r\n  const [skills, setSkills] = useState([]);\r\n  const [career, setCareer] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [height, setHeight] = useState(0);\r\n  const ref = useRef(null);\r\n\r\n  /* Passes data up from MockProfile. SetPaginatedData allows data to be rendered\r\n  * for infinite scroll. */\r\n  function handleChildClick(passedData, skillsVal, careerVal) {\r\n    // console.log(passedData);\r\n    setData(passedData);\r\n    setSkills(skillsVal);\r\n    setCareer(careerVal);\r\n    setPage(1);\r\n    setPaginatedData(passedData.slice(0, 40));\r\n  }\r\n\r\n  /* Grabs the height */\r\n  useEffect(() => {\r\n    setHeight(ref.current.clientHeight);\r\n  });\r\n\r\n  /* Infinite scrolling */\r\n  function handleScroll() {\r\n    window.onscroll = function () {\r\n      const scroll = window.innerHeight + window.pageYOffset;\r\n      // if we hit the bottom\r\n      if (scroll >= height - 500) {\r\n        // if there are still more items to be loaded\r\n        if (page <= Math.ceil(data.length / 40)) {\r\n          const newPage = page + 1;\r\n          setPage(newPage);\r\n          setPaginatedData(data.slice(0, newPage * 40));\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  return (\r\n      <Container style={{ paddingTop: '5rem', marginLeft: '0.5rem', marginRight: '0.5rem' }}>\r\n        <Header as='h1' textAlign={'center'}\r\n                style={{ fontSize: '250%', paddingBottom: '1rem', paddingTop: '3rem' }}>\r\n          <Header.Content>\r\n            <Icon name='graduation cap'/>\r\n            Recommended Internships\r\n          </Header.Content>\r\n        </Header>\r\n        <Grid columns={'equal'} doubling stackable>\r\n          <MockProfile onChildClick={handleChildClick} passedData={data}\r\n                       skillsVal={skills} careerVal={career}/>\r\n\r\n          {/*<Card.Group itemsPerRow={3} doubling stackable>*/}\r\n          {/*  {_.map(paginatedData, (internship, index) => <InternshipListingCard*/}\r\n          {/*      internship={internship} key={index}/>)}*/}\r\n          {/*</Card.Group>*/}\r\n\r\n          <div onScroll={handleScroll()} ref={ref}>\r\n            <Item.Group divided relaxed style={{ backgroundColor: 'white' }}>\r\n              {_.map(paginatedData, (internship, index) => <InternshipListingCard2\r\n                  internship={internship} key={index} hasSkills={skills}/>)}\r\n            </Item.Group>\r\n          </div>\r\n\r\n        </Grid>\r\n        <div align={'center'} style={{ paddingTop: '5rem', paddingBottom: '5rem' }}>\r\n        </div>\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default RecommendedInternships;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.css';\r\nimport './index.css';\r\nimport Landing from './Landing';\r\nimport InternshipListing from './InternshipListing';\r\nimport Statistics from './Statistcs';\r\nimport NavBar from './NavBar';\r\nimport Profile from './Profile';\r\nimport JobCart from './JobCart';\r\nimport EditProfile from './EditProfile';\r\nimport RecommendedInternships from './RecommendedInternships';\r\n\r\n/**\r\n * The top level layout for the site.\r\n */\r\nconst App = () => (\r\n    <Router>\r\n      <NavBar/>\r\n      <Switch>\r\n        {/*<Route exact path={'/'} component={Landing}/>*/}\r\n        <Route exact path={'/internaloha'} component={RecommendedInternships}/>\r\n        <Route exact path={'/all-internships'} component={InternshipListing}/>\r\n        <Route exact path={'/statistics'} component={Statistics}/>\r\n        <Route exact path={'/profile'} component={Profile}/>\r\n        <Route exact path={'/applications'} component={JobCart}/>\r\n        <Route exact path={'/edit-profile'} component={EditProfile}/>\r\n      </Switch>\r\n    </Router>\r\n);\r\n\r\nrender(<App/>, document.getElementById('root'));\r\n\r\n// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import 'semantic-ui-css/semantic.css';\r\n// import './index.css';\r\n// import InternshipListing from './InternshipListing';\r\n// import Statistics from './Statistcs';\r\n// import NavBar from './NavBar';\r\n//\r\n// /**\r\n//  * The top level layout for the site.\r\n//  */\r\n//\r\n// ReactDOM.render(\r\n//     <React.StrictMode>\r\n//       <NavBar/>\r\n//       <InternshipListing/>\r\n//       <Statistics/>\r\n//     </React.StrictMode>,\r\n//   // eslint-disable-next-line no-undef\r\n//   document.getElementById('root'),\r\n// );\r\n"],"sourceRoot":""}